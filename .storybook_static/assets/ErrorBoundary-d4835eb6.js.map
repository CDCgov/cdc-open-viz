{"version":3,"file":"ErrorBoundary-d4835eb6.js","sources":["../../packages/core/components/hoc/ErrorBoundary.jsx"],"sourcesContent":["import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.warn(error, errorInfo)\n  }\n\n  render() {\n    if (this.state.hasError) {\n      if (this.props.component) {\n        return <h1>Something went wrong with component {this.props.component}.</h1>\n      }\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>\n    }\n\n    return this.props.children\n  }\n}\n\nErrorBoundary.propTypes = {\n  /** Supply the name of the component that the ErrorBoundary is referencing */\n  component: PropTypes.string\n}\n\nexport default ErrorBoundary\n"],"names":["ErrorBoundary","React","props","error","errorInfo","jsx","PropTypes"],"mappings":"gIAIA,MAAAA,UAAAC,EAAA,SAAA,CACA,YAAAC,EAAA,CACA,MAAAA,CAAA,EACA,KAAA,MAAA,CAAA,SAAA,EAAA,CACA,CAEA,OAAA,yBAAAC,EAAA,CAEA,MAAA,CAAA,SAAA,GACA,CAEA,kBAAAA,EAAAC,EAAA,CAEA,QAAA,KAAAD,EAAAC,CAAA,CACA,CAEA,QAAA,CACA,OAAA,KAAA,MAAA,SACA,KAAA,MAAA,YACA,KAAA,CAAA,SAAA,CAAA,uCAAA,KAAA,MAAA,UAAA,GAAA,CAAA,CAAA,EAGAC,EAAA,MAAA,SAAA,uBAAA,CAAA,EAGA,KAAA,MAAA,QACA,CACA,CAEAL,EAAA,UAAA,CAEA,UAAAM,EAAA,MACA"}