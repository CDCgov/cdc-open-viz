{"version":3,"file":"validateFipsCodeLength.stories-bfecb420.js","sources":["../../packages/core/helpers/_stories/validateFipsCodeLength.stories.mdx"],"sourcesContent":["import { Canvas, Meta, Story, ArgsTable } from '@storybook/blocks';\n\n<Meta\n  title=\"Helpers/validateFipsCodeLength\"\n/>\n\n# validateFipsCodeLength\nThis function is used to validate the format of FIPS codes in a given input data, which can either be an object or an array.\n\n\n- `object`: checks for the presence of FIPS codes in a specific column, then adds leading zeros to make the code length equal to 5\n- `array`: attempts to identify the column with FIPS codes, then adds leading zeros to the codes to make their length equal to 5\n\nThe function returns the input data with the updated FIPS codes.\n\n&nbsp;\n## Syntax\n```js\nvalidateFipsCodeLength(stateOrData)\n```\n\n**Parameters**\n\n- `stateOrData`: _(object) (array)_ containing the data to be validated.\n\n**Returns**\n\nThe function returns an object or an array, depending on the type of data supplied, with the FIPS codes updated to have a length of 5 digits.\n\n&nbsp;\n## Usage\nThis function is typically used to ensure that FIPS codes in a data set are in a consistent format with a length of 5 digits, which is required for certain data visualizations and analyses.\n\n```js\n// Example 1: Validating FIPS codes in an object\nconst dataObject = {\n  general: {\n    geoType: 'us-county',\n  },\n  columns: {\n    geo: {\n      name: 'FIPS Code'\n    }\n  },\n  data: [\n    { 'FIPS Code': '12' },\n    { 'FIPS Code': '12001' },\n    { 'FIPS Code': '48295' },\n    { 'FIPS Code': '53061' },\n  ]\n};\nconst validatedObject = validateFipsCodeLength(dataObject);\n\n// Output:\n// {\n//   general: {\n//     geoType: 'us-county',\n//   },\n//   columns: {\n//     geo: {\n//       name: 'FIPS Code'\n//     }\n//   },\n//   data: [\n//     { 'FIPS Code': '00012' },\n//     { 'FIPS Code': '12001' },\n//     { 'FIPS Code': '48295' },\n//     { 'FIPS Code': '53061' },\n//   ]\n// }\n\n\n// Example 2: Validating FIPS codes in an array\nconst dataArray = [\n  { 'County': 'Hillsborough', 'State': 'FL', 'FIPS': '101' },\n  { 'County': 'Sarasota', 'State': 'FL', 'FIPS Codes': '12073' },\n  { 'County': 'Hidalgo', 'State': 'TX', 'fips codes': '48011' },\n  { 'County': 'Adams', 'State': 'WA', 'FIPS Codes': '53001' }\n];\nconst validatedArray = validateFipsCodeLength(dataArray);\n\n// Output:\n// [\n//   { 'County': 'Hillsborough', 'State': 'FL', 'FIPS': '00101' },\n//   { 'County': 'Sarasota', 'State': 'FL', 'FIPS Codes': '12073' },\n//   { 'County': 'Hidalgo', 'State': 'TX', 'fips codes': '48011' },\n//   { 'County': 'Adams', 'State': 'WA', 'FIPS Codes': '53001' }\n// ]\n```\n"],"names":["MDXContent","props","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment","Meta","__page","componentMeta","__namedExportsOrder"],"mappings":"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"}