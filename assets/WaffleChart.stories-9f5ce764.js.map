{"version":3,"file":"WaffleChart.stories-9f5ce764.js","sources":["../../packages/waffle-chart/src/data/initial-state.js","../../packages/core/components/editor/EditorPanelGlobal.jsx","../../packages/waffle-chart/src/data/consts.js","../../packages/waffle-chart/src/components/EditorPanels.jsx","../../node_modules/classnames/index.js","../../node_modules/@visx/group/esm/Group.js","../../packages/waffle-chart/node_modules/@visx/shape/esm/shapes/Bar.js","../../packages/waffle-chart/node_modules/@visx/shape/esm/shapes/Circle.js","../../packages/waffle-chart/src/hooks/usePrevious.js","../../packages/waffle-chart/src/helpers/calculateNodePosition.js","../../packages/waffle-chart/src/helpers/calculateWaffleAnimation.js","../../packages/waffle-chart/src/components/WaffleChart.jsx","../../packages/waffle-chart/src/CdcWaffleChart.jsx","../../packages/waffle-chart/src/_stories/WaffleChart.stories.jsx"],"sourcesContent":["export default {\n  title: 'Waffle Chart',\n  content: '',\n  subtext: '',\n  orientation: 'horizontal',\n  data: '',\n  filters: [],\n  fontSize: '',\n  overallFontSize: 'medium',\n  dataColumn: '',\n  dataFunction: '',\n  dataConditionalColumn: '',\n  dataConditionalOperator: '',\n  dataConditionalComparate: '',\n  invalidComparate: false,\n  customDenom: false,\n  dataDenom: '100',\n  dataDenomColumn: '',\n  dataDenomFunction: '',\n  suffix: '%',\n  roundToPlace: '0',\n  shape: 'circle',\n  nodeWidth: '10',\n  nodeSpacer: '2',\n  theme: 'blue',\n  type: 'waffle-chart',\n  tooltip: '',\n  visual: {\n    border: 'default',\n    accent: 'none',\n    background: 'default',\n    shadow: true\n  }\n}\n","import Accordion from '../ui/Accordion'\nimport InputCheckbox from '../input/InputCheckbox'\nimport InputSelect from '../input/InputSelect'\nimport ColorPicker from '../ui/ColorPicker'\nimport InputText from '../input/InputText'\n\nconst optionsObj = {\n  default: 'Default',\n  theme: 'Theme Color',\n  none: 'None'\n}\n\nconst accentOptions = {\n  none: 'None',\n  top: 'Top',\n  right: 'Right',\n  bottom: 'Bottom',\n  left: 'Left',\n}\n\nconst EditorPanelGlobal = () => {\n  return (\n    <Accordion.Section label=\"Component\">\n      <InputText type=\"text\" configField=\"tooltip\" label=\"Tooltip\"/>\n      <InputSelect configField={[ 'visual', 'border' ]} options={optionsObj} label=\"Border\"/>\n      <InputSelect configField={[ 'visual', 'accent' ]} options={accentOptions} label=\"Border Accent\"/>\n      <InputSelect configField={[ 'visual', 'background' ]} options={optionsObj} label=\"Background Color\"/>\n      <InputCheckbox configField={[ 'visual', 'shadow' ]} label=\"Show Dropshadow\"/>\n      <ColorPicker label=\"Theme Color\" tooltip=\"Select the theme color for the component\" colorTooltip/>\n    </Accordion.Section>\n  )\n}\n\nexport default EditorPanelGlobal\n","export const DATA_FUNCTION_COUNT = 'Count'\nexport const DATA_FUNCTION_MAX = 'Max'\nexport const DATA_FUNCTION_MEAN = 'Mean (Average)'\nexport const DATA_FUNCTION_MEDIAN = 'Median'\nexport const DATA_FUNCTION_MIN = 'Min'\nexport const DATA_FUNCTION_MODE = 'Mode'\nexport const DATA_FUNCTION_SUM = 'Sum'\n\nexport const DATA_FUNCTIONS = [\n  DATA_FUNCTION_COUNT,\n  DATA_FUNCTION_MAX,\n  DATA_FUNCTION_MEAN,\n  DATA_FUNCTION_MEDIAN,\n  DATA_FUNCTION_MIN,\n  DATA_FUNCTION_MODE,\n  DATA_FUNCTION_SUM\n]\n\nexport const DATA_OPERATOR_LESS = '<'\nexport const DATA_OPERATOR_GREATER = '>'\nexport const DATA_OPERATOR_LESSEQUAL = '<='\nexport const DATA_OPERATOR_GREATEREQUAL = '>='\nexport const DATA_OPERATOR_EQUAL = '='\nexport const DATA_OPERATOR_NOTEQUAL = '≠'\n\nexport const DATA_OPERATORS = [\n  DATA_OPERATOR_LESS,\n  DATA_OPERATOR_GREATER,\n  DATA_OPERATOR_LESSEQUAL,\n  DATA_OPERATOR_GREATEREQUAL,\n  DATA_OPERATOR_EQUAL,\n  DATA_OPERATOR_NOTEQUAL\n]\n","import { useEffect } from 'react'\n\n// Store\nimport { useConfigStore } from '@cdc/core/stores/configStore'\n\n// Components - Core\nimport Accordion from '@cdc/core/components/ui/Accordion'\nimport Button from '@cdc/core/components/element/Button'\nimport EditorPanelGlobal from '@cdc/core/components/editor/EditorPanelGlobal'\nimport InputCheckbox from '@cdc/core/components/input/InputCheckbox'\nimport InputSelect from '@cdc/core/components/input/InputSelect'\nimport InputText from '@cdc/core/components/input/InputText'\nimport Label from '@cdc/core/components/element/Label'\nimport SectionBlock from '@cdc/core/components/ui/SectionBlock'\nimport SectionWrapper from '@cdc/core/components/ui/SectionWrapper'\n\n// Constants\nimport { DATA_OPERATORS, DATA_FUNCTIONS } from '../data/consts'\n\nconst EditorPanels = () => {\n  const { config, setMissingRequiredSections, updateConfig } = useConfigStore()\n\n  // No sections required, setting to false\n  useEffect(() => {\n    setMissingRequiredSections(false)\n  }, [])\n\n  useEffect(() => {\n    //Verify comparate data type\n    let operators = [ '<', '>', '<=', '>=' ]\n    if (config.dataConditionalComparate !== '') {\n      if (operators.indexOf(config.dataConditionalOperator) > -1 && isNaN(config.dataConditionalComparate)) {\n        updateConfig({ ...config, invalidComparate: true })\n      } else {\n        if (config.invalidComparate) {\n          updateConfig({ ...config, invalidComparate: false })\n        }\n      }\n    } else {\n      updateConfig({ ...config, invalidComparate: false })\n    }\n  }, [ config.dataConditionalOperator, config.dataConditionalComparate ])\n\n  // Filters -----------------------------------------------\n  const addNewFilter = () => {\n    let filters = config.filters ? [ ...config.filters ] : []\n    filters.push({ values: [] })\n    updateConfig({ ...config, filters })\n  }\n\n  const removeFilter = (index) => {\n    let filters = [ ...config.filters ]\n    filters.splice(index, 1)\n    updateConfig({ ...config, filters })\n  }\n\n  const updateFilterProp = (name, index, value) => {\n    let filters = [ ...config.filters ]\n    filters[index][name] = value\n    updateConfig({ ...config, filters })\n  }\n\n  const getColumns = (filter = true) => {\n    let columns = {}\n    config.data.map(row => Object.keys(row).forEach(columnName => columns[columnName] = true))\n    return Object.keys(columns)\n  }\n\n  const getFilterColumnValues = (index) => {\n    let filterDataOptions = []\n    const filterColumnName = config.filters[index].columnName\n    if (config.data && filterColumnName) {\n      config.data.forEach(function (row) {\n        if (undefined !== row[filterColumnName] && -1 === filterDataOptions.indexOf(row[filterColumnName])) {\n          filterDataOptions.push(row[filterColumnName])\n        }\n      })\n      filterDataOptions.sort()\n    }\n    return filterDataOptions\n  }\n\n  // Panels -----------------------------------------------\n  const panelGeneral = (\n    <Accordion.Section label=\"General\">\n      <InputText label=\"Title\" placeholder=\"Waffle Chart Title\" configField=\"title\"/>\n      <InputText label=\"Message\" type=\"textarea\" configField=\"content\"\n                 tooltip=\"Enter the message text for the visualization. The following HTML tags are supported: strong, em, sup, and sub.\"/>\n      <InputText label=\"Subtext/Citation\" placeholder=\"Waffle Chart Subtext or Citation\" configField=\"subtext\"\n                 tooltip=\"Enter supporting text to display below the data visualization, if applicable. The following HTML tags are supported: strong, em, sup, and sub.\"/>\n    </Accordion.Section>\n  )\n\n  const panelData = (\n    <Accordion.Section label=\"Data\">\n      <SectionWrapper label=\"Numerator\">\n        <InputSelect label=\"Data Column\" options={getColumns()} configField=\"dataColumn\" initialDisabled/>\n        <InputSelect label=\"Data Function\" options={DATA_FUNCTIONS} configField=\"dataFunction\" initialDisabled/>\n\n        <Label>Data Conditional</Label>\n        <div className=\"cove-grid cove-grid--gap--2 mb-3\">\n          <div className=\"cove-grid__col--4\">\n            <InputSelect className=\"mb-0\" options={getColumns()} configField=\"dataConditionalColumn\" initialDisabled/>\n          </div>\n          <div className=\"cove-grid__col--4\">\n            <InputSelect className=\"mb-0\" options={DATA_OPERATORS} configField=\"dataConditionalOperator\" initialDisabled/>\n          </div>\n          <div className=\"cove-grid__col--4\">\n            <InputText className=\"mb-0\" configField=\"dataConditionalComparate\"/>\n          </div>\n        </div>\n\n        {config.invalidComparate &&\n          <div className=\"accordion__panel-error\">\n            Non-numerical comparate values can only be used with = or ≠.\n          </div>\n        }\n      </SectionWrapper>\n\n      <SectionWrapper label=\"Denominator\">\n        <InputCheckbox label=\"Select from data\" size=\"small\" configField=\"customDenom\"/>\n\n        {!config.customDenom &&\n          <div className=\"cove-grid cove-grid--gap--2 mb-3\">\n            <div className=\"cove-grid__col--6\">\n              <InputText className=\"mb-0\" configField=\"dataDenom\"/>\n            </div>\n            <div className=\"cove-grid__col--6\">\n              <small>default (100)</small>\n            </div>\n          </div>\n        }\n        {config.customDenom &&\n          <>\n            <InputSelect label=\"Data Column\" options={getColumns()} configField=\"dataDenomColumn\"/>\n            <InputSelect label=\"Data Function\" options={DATA_FUNCTIONS} configField=\"dataDenomFunction\"/>\n          </>\n        }\n      </SectionWrapper>\n\n      <hr className=\"cove-editor__divider\"/>\n\n      <div className=\"cove-grid cove-grid--gap--2 mb-3\">\n        <div className=\"cove-grid__col--4\">\n          <InputText label=\"Prefix\" className=\"mb-0\" configField=\"prefix\"/>\n        </div>\n        <div className=\"cove-grid__col--4\">\n          <InputText label=\"Suffix\" className=\"mb-0\" configField=\"suffix\"/>\n        </div>\n        <div className=\"cove-grid__col--4\">\n          <InputText label=\"Round\" className=\"mb-0\" type=\"number\" configField=\"roundToPlace\"/>\n        </div>\n      </div>\n\n    </Accordion.Section>\n  )\n\n  const panelFilters = (\n    <Accordion.Section label=\"Filters\">\n      <Label tooltip={`To refine the highlighted data point, specify one or more filters (e.g., \"Male\" and \"Female\" for a column called \"Sex\").`}>\n        Data Point Filters\n      </Label>\n      {config.filters && config.filters.map((filter, index) => (\n        <SectionBlock key={index}>\n          <Button className=\"cove-button--remove\" onClick={() => {\n            removeFilter(index)\n          }}>Remove</Button>\n\n          <InputSelect label=\"Column\" options={getColumns()} initial=\"Select data column\" onChange={(e) => {\n            updateFilterProp('columnName', index, e.target.value)\n          }} value={filter.columnName}/>\n\n          <InputSelect label=\"Column Value\" options={getFilterColumnValues(index)} initial=\"Select column value\" onChange={(e) => {\n            updateFilterProp('columnValue', index, e.target.value)\n          }} value={filter.columnValue} disabled={!config.filters[index].columnName}/>\n        </SectionBlock>\n      ))}\n\n      {(!config.filters || config.filters.length === 0) &&\n        <p className=\"my-2\" style={{ fontStyle: 'italic', textAlign: 'center' }}>There are currently no filters.</p>\n      }\n\n      <Button onClick={addNewFilter} fluid>Add Filter</Button>\n    </Accordion.Section>\n  )\n\n  const panelVisual = (\n    <Accordion.Section label=\"Visual\">\n      <InputSelect label=\"Shape\" options={[ 'circle', 'square', 'person' ]} configField=\"shape\"/>\n\n      <div className=\"cove-grid cove-grid--gap--2 mb-3\">\n        <div className=\"cove-grid__col--6\">\n          <InputText label=\"Width\" className=\"mb-0\" type=\"number\" configField=\"nodeWidth\"/>\n        </div>\n        <div className=\"cove-grid__col--6\">\n          <InputText label=\"Spacer\" className=\"mb-0\" type=\"number\" configField=\"nodeSpacer\"/>\n        </div>\n      </div>\n\n      <InputSelect label=\"Layout\" options={[ 'horizontal', 'vertical' ]} configField=\"orientation\"/>\n\n      <Label tooltip={\"Change the font size of the output value returned from the Data\"}>Data Value Font Size</Label>\n      <div className=\"cove-grid cove-grid--gap--2 mb-3\">\n        <div className=\"cove-grid__col--6\">\n          <InputText className=\"mb-0\" type=\"number\" configField=\"fontSize\"/>\n        </div>\n        <div className=\"cove-grid__col--6\" style={{ display: 'flex', alignItems: 'center' }}>\n          <small>default (50px)</small>\n        </div>\n      </div>\n\n      <InputSelect label=\"Overall Font Size\" tooltip={\"Change the overall font size of the entire component.\"} options={[ 'small', 'medium', 'large' ]} configField=\"overallFontSize\"/>\n\n    </Accordion.Section>\n  )\n\n  return (\n    <>\n      {panelGeneral}\n      {panelData}\n      {panelFilters}\n      {panelVisual}\n      {EditorPanelGlobal()}\n    </>\n  )\n}\n\nexport default EditorPanels\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import _pt from \"prop-types\";\nvar _excluded = [\"top\", \"left\", \"transform\", \"className\", \"children\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport cx from 'classnames';\nexport default function Group(_ref) {\n  var _ref$top = _ref.top,\n    top = _ref$top === void 0 ? 0 : _ref$top,\n    _ref$left = _ref.left,\n    left = _ref$left === void 0 ? 0 : _ref$left,\n    transform = _ref.transform,\n    className = _ref.className,\n    children = _ref.children,\n    innerRef = _ref.innerRef,\n    restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"g\", _extends({\n    ref: innerRef,\n    className: cx('visx-group', className),\n    transform: transform || \"translate(\" + left + \", \" + top + \")\"\n  }, restProps), children);\n}\nGroup.propTypes = {\n  top: _pt.number,\n  left: _pt.number,\n  transform: _pt.string,\n  className: _pt.string,\n  children: _pt.node,\n  innerRef: _pt.oneOfType([_pt.string, _pt.func, _pt.object])\n};","var _excluded = [\"className\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport cx from 'classnames';\nexport default function Bar(_ref) {\n  var className = _ref.className,\n    innerRef = _ref.innerRef,\n    restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"rect\", _extends({\n    ref: innerRef,\n    className: cx('visx-bar', className)\n  }, restProps));\n}","var _excluded = [\"className\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport cx from 'classnames';\nexport default function Circle(_ref) {\n  var className = _ref.className,\n    innerRef = _ref.innerRef,\n    restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"circle\", _extends({\n    ref: innerRef,\n    className: cx('visx-circle', className)\n  }, restProps));\n}","// Store previous waffle value to calculate animation direction\nimport { useEffect, useRef } from 'react'\n\nconst usePrevious = (value) => {\n  const ref = useRef()\n  useEffect(() => {\n    ref.current = value\n  }, [ value ])\n  return ref.current\n}\n\nexport default usePrevious\n","// Calculate Waffle Chart Node Positions\nexport default function calculateNodePosition (shape, axis, index, width, spacer) {\n  let mod = axis === 'x' ? 9 - (index % 10) : axis === 'y' ? Math.floor(index / 10) : null\n  return shape === 'circle' ? (mod * (width + spacer)) + (width / 2) : mod * (width + spacer)\n}\n","// Calculate the animation steps for each node displayed in an animated waffle chart\nconst calculateWaffleAnimation = (step, prevVal, newVal) => {\n  const delay = 0.0025 // Animation delay between nodes\n  // const duration = 0.5 // Total duration of animation\n\n  if (newVal) {\n    const adjustment = Math.abs(prevVal - newVal)\n\n    // If new value is an increase, calculate the animation timing for the returned node\n    if (newVal > prevVal) {\n      let timerVal = ''\n      const animationIndex = Math.abs((newVal - step) - (adjustment)) // Calculate new index for animations to only set animation delays at changed nodes\n      if (step > prevVal && step < newVal) timerVal = 'fill-opacity 200ms cubic-bezier(0.16, 1, 0.3, 1) ' + (animationIndex * delay).toString() + 's, '\n      return timerVal\n    }\n\n    // If new value is a decrease, calculate the animation timing for the returned node\n    if (newVal < prevVal) {\n      let timerVal = ''\n      const animationIndex = Math.abs(newVal - step) // Calculate new index for animations to only set animation delays at changed nodes\n      if (step >= newVal && step < prevVal) timerVal = 'fill-opacity 200ms cubic-bezier(0.16, 1, 0.3, 1) ' + (Math.abs(adjustment - animationIndex) * delay).toString() + 's, '\n      return timerVal\n    }\n  }\n\n  return ''\n}\n\nexport default calculateWaffleAnimation\n","import { useCallback } from 'react'\n\n// Third Party\nimport parse from 'html-react-parser'\nimport { Group } from '@visx/group'\nimport { Circle, Bar } from '@visx/shape'\n\n// Store\nimport { useConfigStore } from '@cdc/core/stores/configStore'\n\n// Constants\nimport THEME_COLORS from '@cdc/core/data/componentThemes'\nimport {\n  DATA_FUNCTION_COUNT,\n  DATA_FUNCTION_SUM,\n  DATA_FUNCTION_MEAN,\n  DATA_FUNCTION_MEDIAN,\n  DATA_FUNCTION_MAX,\n  DATA_FUNCTION_MIN,\n  DATA_FUNCTION_MODE\n} from '../data/consts'\n\n// Hooks\nimport usePrevious from '../hooks/usePrevious'\n\n// Helpers\nimport { getSum, getMean, getMedian, getMode, applyPrecision } from '@cdc/core/helpers/coveHelpers'\nimport calculateNodePosition from '../helpers/calculateNodePosition'\nimport calculateWaffleAnimation from '../helpers/calculateWaffleAnimation'\n\n// Visualization\nconst WaffleChart = ({ configObj, configUrl }) => {\n  const { config, missingRequiredSections } = useConfigStore()\n\n  const calculateData = () => {\n    //If either the column or function aren't set, do not calculate\n    if (!config.dataColumn || !config.dataFunction) return ''\n\n    //Optionally filter the data based on the user's filter\n    let filteredData = config.data\n\n    config.filters.map((filter) => {\n      if (filter.columnName && filter.columnValue) {\n        filteredData = filteredData.filter(function (e) {\n          return e[filter.columnName] === filter.columnValue\n        })\n      }\n      return false\n    })\n\n    let conditionalData = []\n\n    if (config.dataConditionalColumn !== '' && config.dataConditionalOperator !== '' && config.dataConditionalComparate !== '') {\n      switch (config.dataConditionalOperator) {\n        case ('<'):\n          conditionalData = filteredData.filter(e => e[config.dataConditionalColumn] < config.dataConditionalComparate)\n          break\n        case ('>'):\n          conditionalData = filteredData.filter(e => e[config.dataConditionalColumn] > config.dataConditionalComparate)\n          break\n        case ('<='):\n          conditionalData = filteredData.filter(e => e[config.dataConditionalColumn] <= config.dataConditionalComparate)\n          break\n        case ('>='):\n          conditionalData = filteredData.filter(e => e[config.dataConditionalColumn] >= config.dataConditionalComparate)\n          break\n        case ('='):\n          if (isNaN(Number(config.dataConditionalComparate))) {\n            conditionalData = filteredData.filter(e => String(e[config.dataConditionalColumn]) === config.dataConditionalComparate)\n          } else {\n            conditionalData = filteredData.filter(e => e[config.dataConditionalColumn] === config.dataConditionalComparate)\n          }\n          break\n        case ('≠'):\n          if (isNaN(Number(config.dataConditionalComparate))) {\n            conditionalData = filteredData.filter(e => String(e[config.dataConditionalColumn]) !== config.dataConditionalComparate)\n          } else {\n            conditionalData = filteredData.filter(e => e[config.dataConditionalColumn] !== config.dataConditionalComparate)\n          }\n          break\n        default:\n          conditionalData = []\n      }\n    }\n\n    //Get the column's data\n    const columnData = conditionalData.length > 0 ? conditionalData.map(a => a[config.dataColumn]) : filteredData.map(a => a[config.dataColumn])\n    const denomColumnData = filteredData.map(a => a[config.dataDenomColumn])\n\n    //Filter the column's data for numerical values only\n    let numericalData = columnData.filter((value) => {\n      let include = false\n      if (Number(value) || Number.isFinite(Number(value))) {\n        include = true\n      }\n      return include\n    }).map(Number)\n\n    let numericalDenomData = denomColumnData.filter((value) => {\n      let include = false\n      if (Number(value) || Number.isFinite(Number(value))) {\n        include = true\n      }\n      return include\n    }).map(Number)\n\n    // Calculate numerator  ------------------\n    let waffleNumerator = ''\n\n    const numerFunctionList = {\n      [DATA_FUNCTION_COUNT]: String(numericalData.length),\n      [DATA_FUNCTION_SUM]: String(applyPrecision(getSum(numericalData), config.roundToPlace)),\n      [DATA_FUNCTION_MEAN]: String(applyPrecision(getMean(numericalData), config.roundToPlace)),\n      [DATA_FUNCTION_MEDIAN]: applyPrecision(getMedian(numericalData).toString(), config.roundToPlace),\n      [DATA_FUNCTION_MAX]: Math.max(...numericalData).toString(),\n      [DATA_FUNCTION_MIN]: Math.min(...numericalData).toString(),\n      [DATA_FUNCTION_MODE]: getMode(numericalData).join(', ')\n    }\n\n    waffleNumerator = numerFunctionList[config.dataFunction]\n\n    // Calculate denominator ------------------\n    let waffleDenominator = null\n\n    const denomFunctionList = {\n      [DATA_FUNCTION_COUNT]: String(numericalDenomData.length),\n      [DATA_FUNCTION_SUM]: String(applyPrecision(getSum(numericalDenomData), config.roundToPlace)),\n      [DATA_FUNCTION_MEAN]: String(applyPrecision(getMean(numericalDenomData), config.roundToPlace)),\n      [DATA_FUNCTION_MEDIAN]: applyPrecision(getMedian(numericalDenomData).toString(), config.roundToPlace),\n      [DATA_FUNCTION_MAX]: Math.max(...numericalDenomData).toString(),\n      [DATA_FUNCTION_MIN]: Math.min(...numericalDenomData).toString(),\n      [DATA_FUNCTION_MODE]: getMode(numericalDenomData).join(', '),\n    }\n\n    if (config.customDenom && config.dataDenomColumn && config.dataDenomFunction) {\n      waffleDenominator = denomFunctionList[config.dataDenomFunction]\n    } else {\n      waffleDenominator = config.dataDenom > 0 ? config.dataDenom : 100\n    }\n\n    return applyPrecision((waffleNumerator / waffleDenominator) * 100, config.roundToPlace)\n  }\n\n  const setRatio = () => {\n    return (config.nodeWidth * 10) + (config.nodeSpacer * 9)\n  }\n\n  const dataPercentage = calculateData()\n\n  let nodeWidthNum = parseInt(config.nodeWidth, 10)\n  let nodeSpacerNum = parseInt(config.nodeSpacer, 10)\n\n  let prevVal = usePrevious(dataPercentage)\n  let newVal = dataPercentage\n\n  const waffleRender = useCallback(() => {\n    let waffleData = []\n\n    for (let i = 0; i < 100; i++) {\n      let newNode = {\n        shape: config.shape,\n        x: calculateNodePosition(config.shape, 'x', i, nodeWidthNum, nodeSpacerNum),\n        y: calculateNodePosition(config.shape, 'y', i, nodeWidthNum, nodeSpacerNum),\n        color: THEME_COLORS[config.theme]?.primary,\n        opacity: i + 1 > (100 - Math.round(dataPercentage)) ? 1 : 0.35\n      }\n      waffleData.unshift(newNode)\n    }\n\n    return waffleData.map((node, key) => (\n      node.shape === 'square'\n        ? <Bar className=\"cove-waffle-chart__node\"\n               style={{ transition: calculateWaffleAnimation(key, prevVal, newVal) + \"fill 200ms ease 0s\", fillOpacity: node.opacity }}\n               x={node.x} y={node.y}\n               width={nodeWidthNum} height={nodeWidthNum}\n               fill={node.color}\n               key={key}\n        />\n        : node.shape === 'person' ?\n          <path\n            style={{ transform: `translateX(${node.x + nodeWidthNum / 4}px) translateY(${node.y}px) scale(${nodeWidthNum / 20})`, transition: calculateWaffleAnimation(key, prevVal, newVal) + \"fill 200ms ease 0s\", fillOpacity: node.opacity }}\n            fill={node.color} fillOpacity={node.opacity} key={key}\n            d=\"M3.75,0a2.5,2.5,0,1,1-2.5,2.5A2.5,2.5,0,0,1,3.75,0M5.625,5.625H5.18125a3.433,3.433,0,0,1-2.8625,0H1.875A1.875,1.875,\n                          0,0,0,0,7.5v5.3125a.9375.9375,0,0,0,.9375.9375h.625v5.3125A.9375.9375,0,0,0,2.5,20H5a.9375.9375,0,0,0,\n                          .9375-.9375V13.75h.625A.9375.9375,0,0,0,7.5,12.8125V7.5A1.875,1.875,0,0,0,5.625,5.625Z\">\n          </path>\n          :\n          <Circle className=\"cove-waffle-chart__node\"\n                  style={{ transition: calculateWaffleAnimation(key, prevVal, newVal) + \"fill 200ms ease 0s\", fillOpacity: node.opacity }}\n                  cx={node.x} cy={node.y} r={nodeWidthNum / 2}\n                  fill={node.color}\n                  data-step={key} key={key}\n          />\n    ))\n  }, [config.shape, config.theme, dataPercentage, prevVal, newVal, nodeSpacerNum, nodeWidthNum ])\n\n  let dataFontSize = config.fontSize ? { fontSize: config.fontSize + 'px' } : null\n\n  return <>\n    {!missingRequiredSections && (<>\n      <div\n        className={`cove-waffle-chart__container${config.orientation === 'vertical' ? ' cove-waffle-chart__container--verical' : ''}${config.overallFontSize ? ' font-' + config.overallFontSize : ''}`}>\n        <div className=\"cove-waffle-chart__visualization\" style={{ width: setRatio() }}>\n          <svg width={setRatio()} height={setRatio()}>\n            <Group>\n              {waffleRender()}\n            </Group>\n          </svg>\n        </div>\n        {(dataPercentage || config.content) &&\n          <div className=\"cove-waffle-chart__data\">\n            {dataPercentage &&\n              <div className=\"cove-waffle-chart__data--primary\" style={dataFontSize}>\n                {config.prefix ? config.prefix : null}{dataPercentage}{config.suffix ? config.suffix : null}\n              </div>\n            }\n            <div className=\"cove-waffle-chart__data--text\">{parse(config.content)}</div>\n          </div>\n        }\n      </div>\n    </>)}\n    {config.subtext &&\n      <div className=\"cove-waffle-chart__subtext\">\n        {parse(config.subtext)}\n      </div>\n    }\n  </>\n}\n\n\nexport default WaffleChart\n","import React from 'react'\n\n// Data\nimport defaults from './data/initial-state'\n\n// Components - Core\nimport Component from '@cdc/core/components/hoc/Component'\nimport ConfigProxy from '@cdc/core/components/hoc/ConfigProxy'\nimport ErrorBoundary from '@cdc/core/components/hoc/ErrorBoundary'\nimport View from '@cdc/core/components/hoc/View'\n\n// Components - Local\nimport EditorPanels from './components/EditorPanels'\nimport WaffleChart from './components/WaffleChart.jsx'\n\n// Styles\nimport './scss/cove-waffle-chart.scss'\n\n// Visualization\nconst CdcWaffleChart = ({ config: configObj, configUrl, setConfig, isWizard }) => {\n  return (\n    <ErrorBoundary component=\"CdcWaffleChart\">\n      <ConfigProxy configObj={configObj} configUrl={configUrl} defaults={defaults}>\n        <View EditorPanels={EditorPanels} isWizard={isWizard}>\n          <Component className=\"cove-waffle-chart\">\n            <WaffleChart/>\n          </Component>\n        </View>\n      </ConfigProxy>\n    </ErrorBoundary>\n  )\n}\n\nexport default CdcWaffleChart\n","import React from 'react';\nimport CdcWaffleChart from '../CdcWaffleChart';\nCdcWaffleChart.displayName = 'WaffleChart';\nexport default {\n  title: 'Visualizations/Waffle Chart',\n  component: CdcWaffleChart,\n  parameters: {\n    options: {\n      isToolshown: true\n    }\n  }\n};\nCdcWaffleChart.defaultProps = {\n  orientation: 'horizontal',\n  overallFontSize: 'medium',\n  invalidComparate: false,\n  customDenom: false,\n  dataDenom: 100,\n  suffix: '%',\n  roundToPlace: 0,\n  shape: 'circle',\n  nodeWidth: 10,\n  nodeSpacer: 2,\n  theme: 'blue'\n};\nconst Template = args => <CdcWaffleChart configObj={{\n  ...args\n}} />;\nexport const Primary = Template.bind({});\nPrimary.args = {\n  shape: 'square',\n  title: 'Overdose Mortality Rates',\n  content: 'of overdoses resulted in death.',\n  subtext: 'This data is an example and does not reflect actual averages',\n  orientation: 'horizontal',\n  data: [{\n    'Resulted in Death': 250,\n    'Number of Overdoses': 600,\n    'state': 'Alabama',\n    'Year': '2010'\n  }, {\n    'Resulted in Death': 16,\n    'Number of Overdoses': 80,\n    'state': 'Alaska',\n    'Year': '2008'\n  }, {\n    'Resulted in Death': 19,\n    'Number of Overdoses': 100,\n    'state': 'Alaska',\n    'Year': '2010'\n  }, {\n    'Resulted in Death': 93,\n    'Number of Overdoses': 400,\n    'state': 'Alaska',\n    'Year': '2012'\n  }, {\n    'Resulted in Death': 82,\n    'Number of Overdoses': 400,\n    'state': 'Arizona',\n    'Year': '2010'\n  }],\n  filters: [],\n  fontSize: null,\n  overallFontSize: 'medium',\n  dataColumn: 'Resulted in Death',\n  dataFunction: 'Sum',\n  dataConditionalColumn: '',\n  dataConditionalOperator: null,\n  dataConditionalComparate: '',\n  customDenom: true,\n  dataDenom: null,\n  dataDenomColumn: 'Number of Overdoses',\n  dataDenomFunction: 'Sum',\n  prefix: '',\n  suffix: '%',\n  roundToPlace: 0,\n  nodeWidth: 10,\n  nodeSpacer: 2,\n  theme: 'blue'\n};\nexport const Circle = Template.bind({});\nCircle.args = {\n  shape: 'circle',\n  title: '5 Day Pollen Count Average',\n  content: 'Oak, Cedar/Juniper and Hackberry',\n  subtext: 'This data is an example and does not reflect actual averages',\n  data: [{\n    'Pollen Count': 6.3\n  }, {\n    'Pollen Count': 8.1\n  }, {\n    'Pollen Count': 7.4\n  }, {\n    'Pollen Count': 5.1\n  }, {\n    'Pollen Count': 6.9\n  }],\n  dataColumn: 'Pollen Count',\n  dataFunction: 'Mean (Average)',\n  customDenom: true,\n  dataDenom: 10,\n  suffix: ' - Medium-high',\n  nodeWidth: 15,\n  theme: 'orange'\n};\nexport const Person = Template.bind({});\nPerson.args = {\n  shape: 'person',\n  title: 'COVID-19 Positive Test Rates',\n  content: 'Daily positive test rate per 100k',\n  subtext: 'This data is an example and does not reflect actual averages',\n  data: [{\n    'Positive Test': 2100\n  }],\n  dataColumn: 'Positive Test',\n  dataFunction: 'Sum',\n  customDenom: true,\n  dataDenom: 100000,\n  suffix: '%',\n  roundToPlace: 1,\n  nodeWidth: 22,\n  nodeSpacer: 2,\n  theme: 'green'\n};\nexport const Square = Template.bind({});\nSquare.args = {\n  shape: 'square',\n  title: 'Insured Rates for Georgia',\n  content: 'of families are under active health insurance in the state of Georgia; either through the healthcare marketplace, or through provider',\n  subtext: 'This data is an example and does not reflect actual averages',\n  data: [{\n    'Coverage': 68.4\n  }],\n  dataColumn: 'Coverage',\n  dataFunction: 'Sum',\n  customDenom: false,\n  suffix: '%',\n  nodeWidth: 25,\n  nodeSpacer: 2,\n  theme: 'cyan'\n};\nPrimary.parameters = {\n  ...Primary.parameters,\n  docs: {\n    ...Primary.parameters?.docs,\n    source: {\n      originalSource: \"args => <CdcWaffleChart configObj={{\\n  ...args\\n}} />\",\n      ...Primary.parameters?.docs?.source\n    }\n  }\n};\nCircle.parameters = {\n  ...Circle.parameters,\n  docs: {\n    ...Circle.parameters?.docs,\n    source: {\n      originalSource: \"args => <CdcWaffleChart configObj={{\\n  ...args\\n}} />\",\n      ...Circle.parameters?.docs?.source\n    }\n  }\n};\nPerson.parameters = {\n  ...Person.parameters,\n  docs: {\n    ...Person.parameters?.docs,\n    source: {\n      originalSource: \"args => <CdcWaffleChart configObj={{\\n  ...args\\n}} />\",\n      ...Person.parameters?.docs?.source\n    }\n  }\n};\nSquare.parameters = {\n  ...Square.parameters,\n  docs: {\n    ...Square.parameters?.docs,\n    source: {\n      originalSource: \"args => <CdcWaffleChart configObj={{\\n  ...args\\n}} />\",\n      ...Square.parameters?.docs?.source\n    }\n  }\n};"],"names":["defaults","optionsObj","accentOptions","EditorPanelGlobal","jsxs","Accordion","jsx","InputText","InputSelect","InputCheckbox","ColorPicker","DATA_FUNCTION_COUNT","DATA_FUNCTION_MAX","DATA_FUNCTION_MEAN","DATA_FUNCTION_MEDIAN","DATA_FUNCTION_MIN","DATA_FUNCTION_MODE","DATA_FUNCTION_SUM","DATA_FUNCTIONS","DATA_OPERATOR_LESS","DATA_OPERATOR_GREATER","DATA_OPERATOR_LESSEQUAL","DATA_OPERATOR_GREATEREQUAL","DATA_OPERATOR_EQUAL","DATA_OPERATOR_NOTEQUAL","DATA_OPERATORS","EditorPanels","config","setMissingRequiredSections","updateConfig","useConfigStore","useEffect","operators","addNewFilter","filters","removeFilter","index","updateFilterProp","name","value","getColumns","filter","columns","row","columnName","getFilterColumnValues","filterDataOptions","filterColumnName","panelGeneral","panelData","SectionWrapper","Label","Fragment","panelFilters","SectionBlock","Button","e","panelVisual","hasOwn","classNames","classes","i","arg","argType","inner","key","module","_excluded","_extends","target","source","_objectWithoutPropertiesLoose","excluded","sourceKeys","Group","_ref","_ref$top","top","_ref$left","left","transform","className","children","innerRef","restProps","React","cx","_pt","Bar","Circle","usePrevious","ref","useRef","calculateNodePosition","shape","axis","width","spacer","mod","calculateWaffleAnimation","step","prevVal","newVal","adjustment","timerVal","animationIndex","WaffleChart","configObj","configUrl","missingRequiredSections","calculateData","filteredData","conditionalData","columnData","a","denomColumnData","numericalData","include","numericalDenomData","waffleNumerator","applyPrecision","getSum","getMean","getMedian","getMode","waffleDenominator","denomFunctionList","setRatio","dataPercentage","nodeWidthNum","nodeSpacerNum","waffleRender","useCallback","waffleData","newNode","THEME_COLORS","node","dataFontSize","parse","CdcWaffleChart","setConfig","isWizard","ErrorBoundary","ConfigProxy","View","Component","CdcWaffleChart$1","WaffleChart_stories","Template","args","Primary","Person","Square","_a","_c","_b"],"mappings":"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"}