import{M as l,C as h,S as u,A}from"./index-41cddf45.js";import{A as t}from"./Accordion-2d0459fd.js";import{a as c,j as o,F as g}from"./jsx-runtime-f14b59b8.js";import{u as i}from"./index-093f7bde.js";import"./iframe-1badc4b0.js";import"../sb-preview/runtime.mjs";import"./index-18f6e4ac.js";import"./_commonjsHelpers-53f7dec1.js";import"./index-6820418a.js";import"./index-3e075a63.js";import"./index-8052939a.js";import"./index-87c76d85.js";import"./index-f4cbaf5b.js";import"./index-edb31f89.js";import"./index-4337b338.js";import"./index-780fc102.js";import"./Icon-ce256261.js";import"./Tooltip-8b5fc730.js";const d=({...n})=>{const e=Object.assign({p:"p"},i());if(!t)p("Accordion",false);if(!t.Section)p("Accordion.Section",true);return c(t,{children:[c(t.Section,{...n,children:[o(e.p,{children:"An accordion is used to show (and hide) HTML content."}),o(e.p,{children:"Both the element that is used to open the accordion and the accordion's content can be any HTML element."})]}),c(t.Section,{...n,children:[o(e.p,{children:"An accordion is used to show (and hide) HTML content."}),o(e.p,{children:"Both the element that is used to open the accordion and the accordion's content can be any HTML element."})]})]})};function f(n={}){const{wrapper:e}=Object.assign({},i(),n.components);return e?o(e,{...n,children:o(s,{})}):s();function s(){const m=Object.assign({h1:"h1"},i(),n.components);return c(g,{children:[o(l,{title:"Components/UI/Accordion",component:t}),"\n",o(m.h1,{children:"Accordion"}),"\n",o(h,{sourceState:"shown",withSource:"open",children:o(u,{name:"Example",args:{label:"Collapsed Section Content",warnIf:true,tooltip:"This is an <strong>example</strong> tooltip."},children:d.bind({})})}),"\n",o(A,{story:"Example"})]})}}function p(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}const a=d.bind({});a.storyName="Example";a.args={label:"Collapsed Section Content",warnIf:true,tooltip:"This is an <strong>example</strong> tooltip."};a.parameters={storySource:{source:"({ ...args\n}) => <Accordion>\n    <Accordion.Section {...args}>\n      <p>An accordion is used to show (and hide) HTML content.</p>\n      <p>Both the element that is used to open the accordion and the accordion's content can be any HTML element.</p>\n    </Accordion.Section>\n    <Accordion.Section {...args}>\n      <p>An accordion is used to show (and hide) HTML content.</p>\n      <p>Both the element that is used to open the accordion and the accordion's content can be any HTML element.</p>\n    </Accordion.Section>\n  </Accordion>"}};const r={title:"Components/UI/Accordion",component:t,tags:["stories-mdx"],includeStories:["example"]};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:f};const v=["Template","example"];export{d as Template,v as __namedExportsOrder,r as default,a as example};
//# sourceMappingURL=Accordion.stories-513b55f3.js.map
