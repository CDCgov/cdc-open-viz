{"version":3,"file":"Panel.Component.Filters-dcd859a7.js","sources":["../../packages/core/components/editor/Panel.Global.jsx","../../packages/core/components/editor/Panel.Component.Filters.jsx"],"sourcesContent":["import React from 'react'\n\n// Components\nimport Accordion from '../ui/Accordion'\nimport ColorPicker from '../ui/ColorPicker'\nimport InputSelect from '../input/InputSelect'\nimport InputText from '../input/InputText'\nimport InputToggle from '../input/InputToggle'\n\nconst optionsObj = {\n  default: 'Default',\n  theme: 'Theme Color',\n  none: 'None'\n}\n\nconst accentOptions = {\n  none: 'None',\n  top: 'Top',\n  right: 'Right',\n  bottom: 'Bottom',\n  left: 'Left'\n}\n\nconst PanelGlobal = (\n  <Accordion.Section label=\"Component\">\n    <InputText type=\"text\" configField={[ 'tooltip', 'content' ]} label=\"Tooltip\"/>\n    <InputSelect configField={[ 'tooltip', 'position' ]} options={{ bottom: 'Bottom', left: 'Left' }} label=\"Tooltip Position\" initialDisabled/>\n    <InputSelect configField={[ 'componentStyle', 'border' ]} options={optionsObj} label=\"Border\"/>\n    <InputSelect configField={[ 'componentStyle', 'accent' ]} options={accentOptions} label=\"Border Accent\"/>\n    <InputSelect configField={[ 'componentStyle', 'background' ]} options={optionsObj} label=\"Background Color\"/>\n    <InputToggle toggleType=\"flat\" size=\"small\" configField={[ 'componentStyle', 'shadow' ]} label=\"Show Dropshadow\"/>\n    <ColorPicker label=\"Theme Color\" tooltip=\"Select the theme color for the component\" colorTooltip/>\n  </Accordion.Section>\n)\n\nexport default PanelGlobal\n","import React from 'react'\n\n// Store\nimport useStore from '../../store/store'\n\n// Hooks\nimport { useVisConfig } from '../../hooks/store/useVisConfig'\n\n// Helpers\nimport CoveHelper from '@cdc/core/helpers/cove'\n\n// Components\nimport Button from '../element/Button'\nimport InputSelect from '../input/InputSelect'\nimport Label from '../element/Label'\nimport SectionBlock from '../ui/SectionBlock'\n\nconst PanelComponentFilters = () => {\n  // Store Selectors\n  const { config, updateVisConfig } = useVisConfig()\n  const data = useStore(state => state.data)\n\n  const addNewFilter = () => {\n    let newFilters = config.filters ? [ ...config.filters ] : []\n    newFilters.push({ values: [] })\n    updateVisConfig({ filters: newFilters })\n  }\n\n  const updateFilter = (filterName, filterIndex, filterValue) => {\n    let newFilters = [...config.filters]\n    newFilters[filterIndex] = {\n      ...config.filters[filterIndex],\n      [filterName]: filterValue\n    }\n    updateVisConfig({ filters: newFilters })\n  }\n\n  const removeFilter = (removeIndex) => {\n    let newFilters = [ ...config.filters ]\n    newFilters.splice(removeIndex, 1)\n    updateVisConfig({ filters: newFilters })\n  }\n\n  const getFilterColumnValues = (filterIndex) => {\n    const filterColumnName = config.filters[filterIndex].columnName\n    let filterDataOptions = []\n    if (data && filterColumnName) {\n      data.forEach(row => {\n        if (undefined !== row[filterColumnName] && -1 === filterDataOptions.indexOf(row[filterColumnName])) {\n          filterDataOptions.push(row[filterColumnName])\n        }\n      })\n      filterDataOptions.sort()\n    }\n    return filterDataOptions\n  }\n\n  return <>\n    <Label tooltip={`To refine the highlighted data point, specify one or more filters (e.g., \"Male\" and \"Female\" for a column called \"Sex\").`}>\n      Data Point Filters\n    </Label>\n\n    {config.filters && config.filters.map((filter, index) => (\n      <SectionBlock key={index}>\n        <Button className=\"cove-button--remove\" onClick={() => removeFilter(index)}>\n          Remove\n        </Button>\n        <InputSelect\n          label=\"Column\"\n          options={CoveHelper.Data.getDataColumns(data)}\n          initial=\"Select data column\"\n          onChange={(e) => updateFilter('columnName', index, e.target.value)}\n          value={filter.columnName}\n        />\n        <InputSelect\n          label=\"Column Value\"\n          options={getFilterColumnValues(index)}\n          initial=\"Select column value\"\n          onChange={(e) => updateFilter('columnValue', index, e.target.value)}\n          value={filter.columnValue}\n          disabled={!config.filters[index].columnName}\n        />\n      </SectionBlock>\n    ))}\n\n    {(!config.filters || config.filters.length === 0) &&\n      <p className=\"my-2\" style={{ fontStyle: 'italic', textAlign: 'center' }}>\n        There are currently no filters.\n      </p>\n    }\n\n    <Button onClick={addNewFilter} fluid>Add Filter</Button>\n  </>\n}\n\nexport default PanelComponentFilters\n"],"names":["optionsObj","accentOptions","PanelGlobal","jsxs","Accordion","jsx","InputText","InputSelect","InputToggle","ColorPicker","PanelComponentFilters","config","updateVisConfig","useVisConfig","data","useStore","state","addNewFilter","newFilters","updateFilter","filterName","filterIndex","filterValue","removeFilter","removeIndex","getFilterColumnValues","filterColumnName","filterDataOptions","row","Fragment","Label","filter","index","SectionBlock","Button","CoveHelper","e"],"mappings":"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"}