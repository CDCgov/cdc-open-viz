import{M as l}from"./index-41cddf45.js";import{j as n,a as t,F as s}from"./jsx-runtime-f14b59b8.js";import{u as c}from"./index-093f7bde.js";import"./iframe-1badc4b0.js";import"../sb-preview/runtime.mjs";import"./index-18f6e4ac.js";import"./_commonjsHelpers-53f7dec1.js";import"./index-6820418a.js";import"./index-3e075a63.js";import"./index-8052939a.js";import"./index-87c76d85.js";import"./index-f4cbaf5b.js";import"./index-edb31f89.js";function d(a={}){const{wrapper:i}=Object.assign({},c(),a.components);return i?n(i,{...a,children:n(o,{})}):o();function o(){const e=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2",pre:"pre",strong:"strong",ul:"ul",li:"li",h3:"h3"},c(),a.components);return t(s,{children:[n(l,{title:"Helpers/CoveHelper/Data/filterData"}),"\n",n(e.h1,{children:"filterData"}),"\n",t(e.p,{children:["Function that filters data based on the values defined in ",n(e.code,{children:"filters"}),"."]}),"\n",n(e.p,{children:" "}),"\n",n(e.h2,{children:"Syntax"}),"\n",n(e.pre,{children:n(e.code,{className:"language-js",children:"CoveHelper.Data.filterData(filters, data)\n"})}),"\n",n(e.p,{children:n(e.strong,{children:"Parameters:"})}),"\n",t(e.p,{children:["This function takes in two arguments: ",n(e.code,{children:"filters"})," and ",n(e.code,{children:"data"}),":"]}),"\n",t(e.ul,{children:["\n",t(e.li,{children:[n(e.code,{children:"filters"})," is an array of objects where each object contains two properties: ",n(e.code,{children:"columnName"})," and ",n(e.code,{children:"active"}),":","\n",t(e.ul,{children:["\n",t(e.li,{children:[n(e.code,{children:"columnName"})," is a string representing the name of a column in data"]}),"\n",t(e.li,{children:[n(e.code,{children:"active"})," is a value indicating whether the rows in data with that column value should be included in the filtered result"]}),"\n"]}),"\n"]}),"\n",t(e.li,{children:[n(e.code,{children:"data"})," is an array of objects where each object represents a row of data\n "]}),"\n"]}),"\n",n(e.p,{children:n(e.strong,{children:"Returns:"})}),"\n",n(e.p,{children:"New array containing only the rows that meet the filter criteria."}),"\n",n(e.p,{children:" "}),"\n",n(e.h3,{children:"Example"}),"\n",n(e.pre,{children:n(e.code,{className:"language-jsx",children:"import CoveHelper from '@cdc/core/helpers/CoveHelper'\n\n...\n\nconst filters = [\n  { columnName: 'name', active: 'Alice' },\n  { columnName: 'age', active: 30 }\n]\n\nconst data = [\n  { name: 'Alice', age: 30, height: 5.6, weight: 130 },\n  { name: 'Bob', age: 40, height: 5.9, weight: 160 },\n  { name: 'Charlie', age: 50, height: 5.11, weight: 180 }\n]\n\nconst filteredData = CoveHelper.Data.filterData(filters, data)\nconsole.log(filteredData)\n// Output: [{ name: 'Alice', age: 30, height: 5.6, weight: 130 }]\n"})})]})}}const h=()=>{throw new Error("Docs-only story")};h.parameters={docsOnly:true};const r={title:"Helpers/CoveHelper/Data/filterData",tags:["stories-mdx"],includeStories:["__page"]};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:d};const y=["__page"];export{y as __namedExportsOrder,h as __page,r as default};
//# sourceMappingURL=filterData.stories-75f324fb.js.map
