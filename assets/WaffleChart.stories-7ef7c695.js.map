{"version":3,"file":"WaffleChart.stories-7ef7c695.js","sources":["../../node_modules/classnames/index.js","../../node_modules/@visx/group/esm/Group.js","../../node_modules/@visx/shape/esm/shapes/Bar.js","../../node_modules/@visx/shape/esm/shapes/Circle.js","../../packages/waffle-chart/src/data/consts.js","../../packages/waffle-chart/src/hooks/usePrevious.js","../../packages/waffle-chart/src/helpers/calculateNodePosition.js","../../packages/waffle-chart/src/helpers/calculateWaffleAnimation.js","../../packages/waffle-chart/src/components/WaffleChart.jsx"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import _pt from \"prop-types\";\nvar _excluded = [\"top\", \"left\", \"transform\", \"className\", \"children\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport cx from 'classnames';\nexport default function Group(_ref) {\n  var _ref$top = _ref.top,\n    top = _ref$top === void 0 ? 0 : _ref$top,\n    _ref$left = _ref.left,\n    left = _ref$left === void 0 ? 0 : _ref$left,\n    transform = _ref.transform,\n    className = _ref.className,\n    children = _ref.children,\n    innerRef = _ref.innerRef,\n    restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"g\", _extends({\n    ref: innerRef,\n    className: cx('visx-group', className),\n    transform: transform || \"translate(\" + left + \", \" + top + \")\"\n  }, restProps), children);\n}\nGroup.propTypes = {\n  top: _pt.number,\n  left: _pt.number,\n  transform: _pt.string,\n  className: _pt.string,\n  children: _pt.node,\n  innerRef: _pt.oneOfType([_pt.string, _pt.func, _pt.object])\n};","var _excluded = [\"className\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport cx from 'classnames';\nexport default function Bar(_ref) {\n  var className = _ref.className,\n    innerRef = _ref.innerRef,\n    restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"rect\", _extends({\n    ref: innerRef,\n    className: cx('visx-bar', className)\n  }, restProps));\n}","var _excluded = [\"className\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport cx from 'classnames';\nexport default function Circle(_ref) {\n  var className = _ref.className,\n    innerRef = _ref.innerRef,\n    restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"circle\", _extends({\n    ref: innerRef,\n    className: cx('visx-circle', className)\n  }, restProps));\n}","export const DATA_FUNCTION_COUNT = 'Count'\nexport const DATA_FUNCTION_MAX = 'Max'\nexport const DATA_FUNCTION_MEAN = 'Mean (Average)'\nexport const DATA_FUNCTION_MEDIAN = 'Median'\nexport const DATA_FUNCTION_MIN = 'Min'\nexport const DATA_FUNCTION_MODE = 'Mode'\nexport const DATA_FUNCTION_SUM = 'Sum'\n\nexport const DATA_FUNCTIONS = [\n  DATA_FUNCTION_COUNT,\n  DATA_FUNCTION_MAX,\n  DATA_FUNCTION_MEAN,\n  DATA_FUNCTION_MEDIAN,\n  DATA_FUNCTION_MIN,\n  DATA_FUNCTION_MODE,\n  DATA_FUNCTION_SUM\n]\n\nexport const DATA_OPERATOR_LESS = '<'\nexport const DATA_OPERATOR_GREATER = '>'\nexport const DATA_OPERATOR_LESSEQUAL = '<='\nexport const DATA_OPERATOR_GREATEREQUAL = '>='\nexport const DATA_OPERATOR_EQUAL = '='\nexport const DATA_OPERATOR_NOTEQUAL = 'â‰ '\n\nexport const DATA_OPERATORS = [\n  DATA_OPERATOR_LESS,\n  DATA_OPERATOR_GREATER,\n  DATA_OPERATOR_LESSEQUAL,\n  DATA_OPERATOR_GREATEREQUAL,\n  DATA_OPERATOR_EQUAL,\n  DATA_OPERATOR_NOTEQUAL\n]\n","// Store previous waffle value to calculate animation direction\nimport { useEffect, useRef } from 'react'\n\nconst usePrevious = (value) => {\n  const ref = useRef()\n  useEffect(() => {\n    ref.current = value\n  }, [ value ])\n  return ref.current\n}\n\nexport default usePrevious\n","// Calculate Waffle Chart Node Positions\nexport default function calculateNodePosition (shape, axis, index, width, spacer) {\n  let mod = axis === 'x' ? 9 - (index % 10) : axis === 'y' ? Math.floor(index / 10) : null\n  return shape === 'circle' ? (mod * (width + spacer)) + (width / 2) : mod * (width + spacer)\n}\n","// Calculate the animation steps for each node displayed in an animated waffle chart\nconst calculateWaffleAnimation = (step, prevVal, newVal) => {\n  const delay = 0.0025 // Animation delay between nodes\n  // const duration = 0.5 // Total duration of animation\n\n  if (newVal) {\n    const adjustment = Math.abs(prevVal - newVal)\n\n    // If new value is an increase, calculate the animation timing for the returned node\n    if (newVal > prevVal) {\n      let timerVal = ''\n      const animationIndex = Math.abs((newVal - step) - (adjustment)) // Calculate new index for animations to only set animation delays at changed nodes\n      if (step > prevVal && step < newVal) timerVal = 'fill-opacity 200ms cubic-bezier(0.16, 1, 0.3, 1) ' + (animationIndex * delay).toString() + 's, '\n      return timerVal\n    }\n\n    // If new value is a decrease, calculate the animation timing for the returned node\n    if (newVal < prevVal) {\n      let timerVal = ''\n      const animationIndex = Math.abs(newVal - step) // Calculate new index for animations to only set animation delays at changed nodes\n      if (step >= newVal && step < prevVal) timerVal = 'fill-opacity 200ms cubic-bezier(0.16, 1, 0.3, 1) ' + (Math.abs(adjustment - animationIndex) * delay).toString() + 's, '\n      return timerVal\n    }\n  }\n\n  return ''\n}\n\nexport default calculateWaffleAnimation\n","import React, { useCallback } from 'react'\n\n// Third Party\nimport parse from 'html-react-parser'\nimport { Group } from '@visx/group'\nimport { Circle, Bar } from '@visx/shape'\n\n// Store\nimport useStore from '@cdc/core/store/store'\n\n// Hooks\nimport { useVisConfig } from '@cdc/core/hooks/store/useVisConfig'\n\n// Constants\nimport THEME_COLORS from '@cdc/core/data/componentThemes'\nimport {\n  DATA_FUNCTION_COUNT,\n  DATA_FUNCTION_SUM,\n  DATA_FUNCTION_MEAN,\n  DATA_FUNCTION_MEDIAN,\n  DATA_FUNCTION_MAX,\n  DATA_FUNCTION_MIN,\n  DATA_FUNCTION_MODE\n} from '../data/consts'\n\n// Hooks\nimport usePrevious from '../hooks/usePrevious'\n\n// Helpers\nimport CoveHelper from '@cdc/core/helpers/cove'\nimport calculateNodePosition from '../helpers/calculateNodePosition'\nimport calculateWaffleAnimation from '../helpers/calculateWaffleAnimation'\n\n// Visualization\nconst WaffleChart = () => {\n  // Store Selectors\n  const { config } = useVisConfig()\n  const { data } = config\n\n  const calculateData = () => {\n    //If either the column or function aren't set, do not calculate\n    if (!config?.dataColumn || !config.dataFunction) return ''\n\n    //Optionally filter the data based on the user's filter\n    let filteredData = data\n\n    config.filters.map((filter) => {\n      if (filter.columnName && filter.columnValue) {\n        filteredData = filteredData.filter(function (e) {\n          return e[filter.columnName] === filter.columnValue\n        })\n      }\n      return false\n    })\n\n    let conditionalData = []\n\n    if (config.dataConditionalColumn !== '' && config.dataConditionalOperator !== '' && config.dataConditionalComparate !== '') {\n      switch (config.dataConditionalOperator) {\n        case ('<'):\n          conditionalData = filteredData.filter(e => e[config.dataConditionalColumn] < config.dataConditionalComparate)\n          break\n        case ('>'):\n          conditionalData = filteredData.filter(e => e[config.dataConditionalColumn] > config.dataConditionalComparate)\n          break\n        case ('<='):\n          conditionalData = filteredData.filter(e => e[config.dataConditionalColumn] <= config.dataConditionalComparate)\n          break\n        case ('>='):\n          conditionalData = filteredData.filter(e => e[config.dataConditionalColumn] >= config.dataConditionalComparate)\n          break\n        case ('='):\n          if (isNaN(Number(config.dataConditionalComparate))) {\n            conditionalData = filteredData.filter(e => String(e[config.dataConditionalColumn]) === config.dataConditionalComparate)\n          } else {\n            conditionalData = filteredData.filter(e => e[config.dataConditionalColumn] === config.dataConditionalComparate)\n          }\n          break\n        case ('â‰ '):\n          if (isNaN(Number(config.dataConditionalComparate))) {\n            conditionalData = filteredData.filter(e => String(e[config.dataConditionalColumn]) !== config.dataConditionalComparate)\n          } else {\n            conditionalData = filteredData.filter(e => e[config.dataConditionalColumn] !== config.dataConditionalComparate)\n          }\n          break\n        default:\n          conditionalData = []\n      }\n    }\n\n    //Get the column's data\n    const columnData = conditionalData.length > 0 ? conditionalData.map(a => a[config.dataColumn]) : filteredData.map(a => a[config.dataColumn])\n    const denomColumnData = filteredData.map(a => a[config.dataDenomColumn])\n\n    //Filter the column's data for numerical values only\n    let numericalData = columnData.filter((value) => {\n      let include = false\n      if (Number(value) || Number.isFinite(Number(value))) {\n        include = true\n      }\n      return include\n    }).map(Number)\n\n    let numericalDenomData = denomColumnData.filter((value) => {\n      let include = false\n      if (Number(value) || Number.isFinite(Number(value))) {\n        include = true\n      }\n      return include\n    }).map(Number)\n\n    // Calculate numerator  ------------------\n    let waffleNumerator = ''\n\n    const numerFunctionList = {\n      [DATA_FUNCTION_COUNT]: String(numericalData.length),\n      [DATA_FUNCTION_SUM]: String(CoveHelper.Math.roundToPlace(CoveHelper.Math.getSum(numericalData), config.roundToPlace)),\n      [DATA_FUNCTION_MEAN]: String(CoveHelper.Math.roundToPlace(CoveHelper.Math.getMean(numericalData), config.roundToPlace)),\n      [DATA_FUNCTION_MEDIAN]: CoveHelper.Math.roundToPlace(CoveHelper.Math.getMedian(numericalData).toString(), config.roundToPlace),\n      [DATA_FUNCTION_MAX]: Math.max(...numericalData).toString(),\n      [DATA_FUNCTION_MIN]: Math.min(...numericalData).toString(),\n      [DATA_FUNCTION_MODE]: CoveHelper.Math.getMode(numericalData).join(', ')\n    }\n\n    waffleNumerator = numerFunctionList[config.dataFunction]\n\n    // Calculate denominator ------------------\n    let waffleDenominator = null\n\n    const denomFunctionList = {\n      [DATA_FUNCTION_COUNT]: String(numericalDenomData.length),\n      [DATA_FUNCTION_SUM]: String(CoveHelper.Math.roundToPlace(CoveHelper.Math.getSum(numericalDenomData), config.roundToPlace)),\n      [DATA_FUNCTION_MEAN]: String(CoveHelper.Math.roundToPlace(CoveHelper.Math.getMean(numericalDenomData), config.roundToPlace)),\n      [DATA_FUNCTION_MEDIAN]: CoveHelper.Math.roundToPlace(CoveHelper.Math.getMedian(numericalDenomData).toString(), config.roundToPlace),\n      [DATA_FUNCTION_MAX]: Math.max(...numericalDenomData).toString(),\n      [DATA_FUNCTION_MIN]: Math.min(...numericalDenomData).toString(),\n      [DATA_FUNCTION_MODE]: CoveHelper.Math.getMode(numericalDenomData).join(', ')\n    }\n\n    if (config.customDenom && config.dataDenomColumn && config.dataDenomFunction) {\n      waffleDenominator = denomFunctionList[config.dataDenomFunction]\n    } else {\n      waffleDenominator = config.dataDenom > 0 ? config.dataDenom : 100\n    }\n\n    return CoveHelper.Math.roundToPlace((waffleNumerator / waffleDenominator) * 100, config.roundToPlace)\n  }\n\n  const setRatio = () => {\n    return (config.nodeWidth * 10) + (config.nodeSpacer * 9)\n  }\n\n  const dataPercentage = calculateData()\n\n  let nodeWidthNum = parseInt(config.nodeWidth, 10)\n  let nodeSpacerNum = parseInt(config.nodeSpacer, 10)\n\n  let prevVal = usePrevious(dataPercentage)\n  let newVal = dataPercentage\n\n  const waffleRender = useCallback(() => {\n    let waffleData = []\n\n    for (let i = 0; i < 100; i++) {\n      let newNode = {\n        shape: config.shape,\n        x: calculateNodePosition(config.shape, 'x', i, nodeWidthNum, nodeSpacerNum),\n        y: calculateNodePosition(config.shape, 'y', i, nodeWidthNum, nodeSpacerNum),\n        color: THEME_COLORS[config.theme]?.primary,\n        opacity: i + 1 > (100 - Math.round(dataPercentage)) ? 1 : 0.35\n      }\n      waffleData.unshift(newNode)\n    }\n\n    return waffleData.map((node, key) => (\n      node.shape === 'square'\n        ? <Bar className=\"cove-waffle-chart__node\"\n               style={{ transition: calculateWaffleAnimation(key, prevVal, newVal) + 'fill 200ms ease 0s', fillOpacity: node.opacity }}\n               x={node.x} y={node.y}\n               width={nodeWidthNum} height={nodeWidthNum}\n               fill={node.color}\n               key={key}\n        />\n        : node.shape === 'person' ?\n          <path\n            style={{ transform: `translateX(${node.x + nodeWidthNum / 4}px) translateY(${node.y}px) scale(${nodeWidthNum / 20})`, transition: calculateWaffleAnimation(key, prevVal, newVal) + 'fill 200ms ease 0s', fillOpacity: node.opacity }}\n            fill={node.color} fillOpacity={node.opacity} key={key}\n            d=\"M3.75,0a2.5,2.5,0,1,1-2.5,2.5A2.5,2.5,0,0,1,3.75,0M5.625,5.625H5.18125a3.433,3.433,0,0,1-2.8625,0H1.875A1.875,1.875,\n                          0,0,0,0,7.5v5.3125a.9375.9375,0,0,0,.9375.9375h.625v5.3125A.9375.9375,0,0,0,2.5,20H5a.9375.9375,0,0,0,\n                          .9375-.9375V13.75h.625A.9375.9375,0,0,0,7.5,12.8125V7.5A1.875,1.875,0,0,0,5.625,5.625Z\">\n          </path>\n          :\n          <Circle className=\"cove-waffle-chart__node\"\n                  style={{ transition: calculateWaffleAnimation(key, prevVal, newVal) + 'fill 200ms ease 0s', fillOpacity: node.opacity }}\n                  cx={node.x} cy={node.y} r={nodeWidthNum / 2}\n                  fill={node.color}\n                  data-step={key} key={key}\n          />\n    ))\n  }, [ config ])\n\n  let dataFontSize = config.fontSize ? { fontSize: config.fontSize + 'px' } : null\n\n  return <>\n    {config.missingRequiredSections && <>Missing data in sections</>}\n    {config.missingRequiredSections === false && (<>\n      <div\n        className={`cove-waffle-chart__container${config.orientation === 'vertical' ? ' cove-waffle-chart__container--verical' : ''}${config.overallFontSize ? ' font-' + config.overallFontSize : ''}`}>\n        <div className=\"cove-waffle-chart__visualization\" style={{ width: setRatio() }}>\n          <svg width={setRatio()} height={setRatio()}>\n            <Group>\n              {waffleRender()}\n            </Group>\n          </svg>\n        </div>\n        {(dataPercentage || config.content) &&\n          <div className=\"cove-waffle-chart__data\">\n            {dataPercentage &&\n              <div className=\"cove-waffle-chart__data--primary\" style={dataFontSize}>\n                {config.prefix ? config.prefix : null}{dataPercentage}{config.suffix ? config.suffix : null}\n              </div>\n            }\n            <div className=\"cove-waffle-chart__data--text\">{parse(config.content)}</div>\n          </div>\n        }\n      </div>\n    </>)}\n    {config.subtext &&\n      <div className=\"cove-waffle-chart__subtext\">\n        {parse(config.subtext)}\n      </div>\n    }\n  </>\n}\n\nexport default WaffleChart\n"],"names":["hasOwn","classNames","classes","i","arg","argType","inner","key","module","_excluded","_extends","target","source","_objectWithoutPropertiesLoose","excluded","sourceKeys","Group","_ref","_ref$top","top","_ref$left","left","transform","className","children","innerRef","restProps","React","cx","_pt","Bar","Circle","DATA_FUNCTION_COUNT","DATA_FUNCTION_MAX","DATA_FUNCTION_MEAN","DATA_FUNCTION_MEDIAN","DATA_FUNCTION_MIN","DATA_FUNCTION_MODE","DATA_FUNCTION_SUM","usePrevious","value","ref","useRef","useEffect","calculateNodePosition","shape","axis","index","width","spacer","mod","calculateWaffleAnimation","step","prevVal","newVal","adjustment","timerVal","animationIndex","WaffleChart","config","useVisConfig","data","calculateData","filteredData","filter","e","conditionalData","columnData","a","denomColumnData","numericalData","include","numericalDenomData","waffleNumerator","CoveHelper","waffleDenominator","denomFunctionList","setRatio","dataPercentage","nodeWidthNum","nodeSpacerNum","waffleRender","useCallback","waffleData","newNode","THEME_COLORS","node","jsx","dataFontSize","jsxs","Fragment","parse","WaffleChart$1"],"mappings":"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"}