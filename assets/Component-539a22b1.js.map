{"version":3,"file":"Component-539a22b1.js","sources":["../../packages/core/components/hoc/Component.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef } from 'react'\n\n// Third Party\nimport parse from 'html-react-parser'\nimport PropTypes from 'prop-types'\n\n// Store\nimport useStore from '../../store/store'\n\n// Hooks\nimport { useVisConfig } from '../../hooks/store/useVisConfig'\n\n// Components\nimport Icon from '../ui/Icon'\nimport Tooltip from '../ui/Tooltip'\n\n// Styles\nimport '../../styles/v2/components/component.scss'\n\nconst Component = ({ className, children, exampleConfig, ...attributes }) => {\n  // Store Selectors\n  let { config } = useVisConfig()\n  if (exampleConfig) config = exampleConfig // Allow for exampleConfig to override default config\n\n  const setDimensions = useStore(state => state.setDimensions)\n\n  // Observe changes to component container sizes for use with SVG renders\n  const outerContainerRef = useRef()\n\n  useEffect(() => {\n    if (outerContainerRef.current === typeof 'Element') {\n      const outerContainerObserver = new ResizeObserver((entries, observer) => {\n        for (let entry of entries) {\n          let { width, height } = entry.contentRect\n          setDimensions({ width, height })\n        }\n      })\n      outerContainerObserver.observe(outerContainerRef.current)\n    }\n    return () => {}\n  })\n\n  // Component Attributes\n  const customTitleAttrs = (!config.title || config.title === '') && { 'data-title': false }\n  const customBorderAttrs = config.componentStyle?.border !== 'default' && { 'data-border': config.componentStyle?.border }\n  const customShadowAttrs = !config.componentStyle?.shadow && { 'data-no-shadow': true }\n  const customAccentAttrs = () => {\n    if (config.componentStyle?.accent === 'none' || (config.componentStyle?.accent === 'top' && config.title)) return {}\n    return { 'data-accent': config.componentStyle?.accent }\n  }\n\n  const customComponentAttrs = {\n    ...attributes,\n    ...customTitleAttrs,\n    ...customBorderAttrs,\n    ...customShadowAttrs,\n    ...customAccentAttrs()\n  }\n\n  // Component Content Attributes\n  const customBgAttrs = config.componentStyle?.background !== 'default' && { 'data-bg': config.componentStyle?.background }\n\n  const customContentAttrs = {\n    ...customBgAttrs\n  }\n\n  const tooltip = (\n    <>\n      {config.tooltip && config.tooltip.content && config.tooltip.content !== '' && (\n        <>\n          <Tooltip place={config.tooltip.position || 'bottom'}>\n            <Tooltip.Target>\n              <Icon display='questionCircle' />\n            </Tooltip.Target>\n            <Tooltip.Content>{typeof config.tooltip.content === 'object' ? config.tooltip.content : typeof config.tooltip.content === 'string' && <p>{parse(config.tooltip.content)}</p>}</Tooltip.Content>\n          </Tooltip>\n        </>\n      )}\n    </>\n  )\n\n  const theme = useMemo(() => `cove-theme--${config.theme ?? 'blue'}`, [config.theme])\n\n  // Return Component\n  return (\n    <div className={'cove-component ' + theme + (className ? ' ' + className : '')} {...customComponentAttrs}>\n      <div className='cove-component__container'>\n        {config.title && (\n          <header className='cove-component__header' role='heading' aria-hidden='true' aria-level={2}>\n            {parse(config.title)}\n            {config.title.trim().length !== 0 && tooltip}\n          </header>\n        )}\n        <div className='cove-component__content' {...customContentAttrs}>\n          {(!config.title || config.title.trim().length === 0) && <div className='cove-component__content--tooltip'>{tooltip}</div>}\n          <div className='cove-component__wrapper' ref={outerContainerRef}>\n            {children}\n          </div>\n          {/*{config.description &&\n            <div className='cove-component__description'>{parse(config.description)}</div>\n          }*/}\n          {/*{config.tableShowIf && config.table}*/}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nComponent.propTypes = {\n  /** All content set between the \\<Component\\> tags */\n  children: PropTypes.any,\n  /** Additional classes to be appended to the component */\n  className: PropTypes.string,\n  config: PropTypes.shape({\n    theme: PropTypes.oneOf(['blue', 'purple', 'brown', 'teal', 'pink', 'orange', 'slate', 'indigo', 'cyan', 'green', 'amber']),\n    /** Set a custom title for the component; defaults to a `config.title` entry for the component config */\n    title: PropTypes.string,\n    description: PropTypes.string,\n    componentStyle: PropTypes.shape({\n      border: PropTypes.oneOf(['default', 'theme', 'none']),\n      background: PropTypes.oneOf(['default', 'theme', 'none']),\n      shadow: PropTypes.bool,\n      accent: PropTypes.oneOf(['none', 'top', 'right', 'bottom', 'left'])\n    })\n  })\n}\n\nexport default Component\n"],"names":["Component","className","children","exampleConfig","attributes","config","useVisConfig","setDimensions","useStore","state","outerContainerRef","useRef","useEffect","entries","observer","entry","width","height","customTitleAttrs","customBorderAttrs","_a","_b","customShadowAttrs","_c","customComponentAttrs","customContentAttrs","_d","_e","tooltip","jsx","Fragment","jsxs","Tooltip","Icon","theme","useMemo","parse","PropTypes"],"mappings":"sTAmBA,MAAAA,EAAA,CAAA,CAAA,UAAAC,EAAA,SAAAC,EAAA,cAAAC,EAAA,GAAAC,KAAA,eAEA,GAAA,CAAA,OAAAC,GAAAC,IACAH,IAAAE,EAAAF,GAEA,MAAAI,EAAAC,EAAAC,GAAAA,EAAA,aAAA,EAGAC,EAAAC,EAAAA,SAEAC,EAAAA,UAAA,KACAF,EAAA,UAAA,UACA,IAAA,eAAA,CAAAG,EAAAC,IAAA,CACA,QAAAC,KAAAF,EAAA,CACA,GAAA,CAAA,MAAAG,EAAA,OAAAC,GAAAF,EAAA,YACAR,EAAA,CAAA,MAAAS,EAAA,OAAAC,CAAA,CAAA,CACA,CAAA,CACA,EACA,QAAAP,EAAA,OAAA,EAEA,IAAA,CAAA,EACA,EAGA,MAAAQ,GAAA,CAAAb,EAAA,OAAAA,EAAA,QAAA,KAAA,CAAA,aAAA,IACAc,IAAAC,EAAAf,EAAA,iBAAA,YAAAe,EAAA,UAAA,WAAA,CAAA,eAAAC,EAAAhB,EAAA,iBAAA,YAAAgB,EAAA,QACAC,EAAA,GAAAC,EAAAlB,EAAA,iBAAA,MAAAkB,EAAA,SAAA,CAAA,iBAAA,IAMAC,EAAA,CACA,GAAApB,EACA,GAAAc,EACA,GAAAC,EACA,GAAAG,EACA,IAVA,IAAA,WACA,QAAAF,EAAAf,EAAA,iBAAA,YAAAe,EAAA,UAAA,UAAAC,EAAAhB,EAAA,iBAAA,YAAAgB,EAAA,UAAA,OAAAhB,EAAA,MAAA,GACA,CAAA,eAAAkB,EAAAlB,EAAA,iBAAA,YAAAkB,EAAA,MAAA,CAAA,GAQA,CAAA,EAMAE,EAAA,CACA,KAHAC,EAAArB,EAAA,iBAAA,YAAAqB,EAAA,cAAA,WAAA,CAAA,WAAAC,EAAAtB,EAAA,iBAAA,YAAAsB,EAAA,WAGA,EAGAC,EAEAC,EAAAC,EAAA,CAAA,SAAAzB,EAAA,SAAAA,EAAA,QAAA,SAAAA,EAAA,QAAA,UAAA,SAEA,SAAA0B,EAAAC,EAAA,CAAA,MAAA3B,EAAA,QAAA,UAAA,SACA,SAAA,CAAAwB,EAAAG,EAAA,OAAA,CACA,WAAAC,EAAA,CAAA,QAAA,gBAAA,CAAA,EACA,EACAJ,EAAAG,EAAA,QAAA,CAAA,SAAA,OAAA3B,EAAA,QAAA,SAAA,SAAAA,EAAA,QAAA,QAAA,OAAAA,EAAA,QAAA,SAAA,UAAAwB,EAAA,IAAA,CAAA,WAAAxB,EAAA,QAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EACA,EACA,CAEA,CAAA,EAGA6B,EAAAC,EAAAA,QAAA,IAAA,eAAA9B,EAAA,OAAA,SAAA,CAAAA,EAAA,KAAA,CAAA,EAGA,OACAwB,EAAA,MAAA,CAAA,UAAA,kBAAAK,GAAAjC,EAAA,IAAAA,EAAA,IAAA,GAAAuB,EACA,SAAAO,EAAA,MAAA,CAAA,UAAA,4BACA,SAAA,CAAA1B,EAAA,OACA0B,EAAA,SAAA,CAAA,UAAA,yBAAA,KAAA,UAAA,cAAA,OAAA,aAAA,EACA,SAAA,CAAAK,EAAA/B,EAAA,KAAA,EACAA,EAAA,MAAA,KAAA,EAAA,SAAA,GAAAuB,CAAA,EACA,EAEAG,EAAA,MAAA,CAAA,UAAA,0BAAA,GAAAN,EACA,SAAA,EAAA,CAAApB,EAAA,OAAAA,EAAA,MAAA,KAAA,EAAA,SAAA,IAAAwB,EAAA,MAAA,CAAA,UAAA,mCAAA,SAAAD,EAAA,IACA,MAAA,CAAA,UAAA,0BAAA,IAAAlB,EACA,SAAAR,EACA,CAAA,EAKA,CAAA,CACA,CAAA,CACA,CAAA,CAEA,EAEAF,EAAA,UAAA,CAEA,SAAAqC,EAAA,IAEA,UAAAA,EAAA,OACA,OAAAA,EAAA,MAAA,CACA,MAAAA,EAAA,MAAA,CAAA,OAAA,SAAA,QAAA,OAAA,OAAA,SAAA,QAAA,SAAA,OAAA,QAAA,OAAA,CAAA,EAEA,MAAAA,EAAA,OACA,YAAAA,EAAA,OACA,eAAAA,EAAA,MAAA,CACA,OAAAA,EAAA,MAAA,CAAA,UAAA,QAAA,MAAA,CAAA,EACA,WAAAA,EAAA,MAAA,CAAA,UAAA,QAAA,MAAA,CAAA,EACA,OAAAA,EAAA,KACA,OAAAA,EAAA,MAAA,CAAA,OAAA,MAAA,QAAA,SAAA,MAAA,CAAA,CAAA,CACA,CAAA,CACA,CACA"}