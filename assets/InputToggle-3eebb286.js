import{a as f,F as S,j as l}from"./jsx-runtime-f14b59b8.js";import{r}from"./index-18f6e4ac.js";import{p as t}from"./index-780fc102.js";import{u as L}from"./useVisConfig-a08e56f4.js";import{g as w}from"./visConfigSlice-c5711f83.js";import{L as A}from"./Label-8ac46115.js";/* empty css              */const y=r.memo(({label:u,labelPosition:n="right",tooltip:x,toggleType:C="flat",size:k="small",activeColor:g="#005eaa",stretch:V,configField:a,value:q,className:m,onClick:v,...z})=>{const{config:N,updateVisConfigField:h}=L();const[o,p]=r.useState(false);const _=r.useRef(null);const s=a&&w(a,N);const b=Boolean(s&&typeof s!==void 0);r.useEffect(()=>{if(b){s!==o&&p(s)}else{p(q)}},[b]);r.useEffect(()=>{if(a&&o!==s)h(a,o)},[a,o,h]);const c=()=>_.current.click();const T=e=>{p(i=>!i);v&&v(e)};const j=()=>{const e=[];const i="cove-input__toggle-group";e.push(i);if(V)e.push("cove-input__toggle-group--stretch");if(m)e.push(m);return e.join(" ")};const E=()=>{const e=[];const i="cove-input__toggle";const I={small:"",medium:"--medium",large:"--large",xlarge:"--xlarge"};e.push(i+I[k]);const O={flat:"cove-input__toggle--flat",block:"cove-input__toggle--block",pill:"cove-input__toggle--pill","3d":"cove-input__toggle--3d"};e.push(O[C]||"");if(o)e.push("cove-input__toggle--active");return e.join(" ")};const d=()=>l("div",{className:"cove-input__toggle-group__label",children:l(A,{tooltip:x,onClick:c,children:u})});return f(S,{children:[u&&n==="top"&&l(d,{}),f("div",{className:j(),flow:n,children:[u&&n==="left"&&l(d,{}),f("div",{className:E(),tabIndex:0,onKeyUp:e=>{if(e.code==="Enter"||e.code==="NumpadEnter"||e.code==="Space")c()},onClick:c,children:[l("div",{className:"cove-input__toggle-spacer"}),l("div",{className:"cove-input__toggle-button"}),l("div",{className:"cove-input__toggle-track",style:o&&g?{backgroundColor:g}:null}),l("input",{className:"cove-input--hidden",type:"checkbox",defaultChecked:o,onChange:e=>T(e),ref:_,tabIndex:-1,readOnly:true})]}),u&&n==="right"&&l(d,{})]})]})});y.propTypes={label:t.string,labelPosition:t.oneOf(["left","right","top"]),tooltip:t.oneOfType([t.string,t.object]),toggleType:t.oneOf(["flat","block","pill","3d"]),size:t.oneOf(["small","medium","large","xlarge"]),activeColor:t.string,stretch:t.bool,stateValue:t.bool};y.__docgenInfo={"description":"","methods":[],"displayName":"InputToggle","props":{"labelPosition":{"defaultValue":{"value":"'right'","computed":false},"type":{"name":"enum","value":[{"value":"'left'","computed":false},{"value":"'right'","computed":false},{"value":"'top'","computed":false}]},"required":false,"description":"Position the label relative to the toggle"},"toggleType":{"defaultValue":{"value":"'flat'","computed":false},"type":{"name":"enum","value":[{"value":"'flat'","computed":false},{"value":"'block'","computed":false},{"value":"'pill'","computed":false},{"value":"'3d'","computed":false}]},"required":false,"description":"Select the preferred display style of the toggle"},"size":{"defaultValue":{"value":"'small'","computed":false},"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false},{"value":"'xlarge'","computed":false}]},"required":false,"description":"Select the preferred size of the toggle"},"activeColor":{"defaultValue":{"value":"'#005eaa'","computed":false},"type":{"name":"string"},"required":false,"description":"Select the preferred color for the toggle when active"},"label":{"type":{"name":"string"},"required":false,"description":"Add label to the input field"},"tooltip":{"type":{"name":"union","value":[{"name":"string"},{"name":"object"}]},"required":false,"description":"Add a tooltip to describe the toggle's usage; JSX markup can also be supplied"},"stretch":{"type":{"name":"bool"},"required":false,"description":"Stretch the toggle and its label to fill the width of its container; Only available when label exists, and **labelPosition** is set to `left` or `right`."},"stateValue":{"type":{"name":"bool"},"required":false,"description":"Current value of the input, usually the current config option value"}}};export{y as I};
//# sourceMappingURL=InputToggle-3eebb286.js.map
