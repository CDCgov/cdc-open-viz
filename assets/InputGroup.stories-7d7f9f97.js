import{M as E,C as N,S as f,A as j}from"./index-c4e09ba2.js";import{j as e,a,F as p}from"./jsx-runtime-670450c2.js";import{r as i}from"./index-f1f749bf.js";import{p as c}from"./index-4d501b15.js";import{I as o}from"./InputText-cc964fc2.js";import{I as _}from"./Icon-e6436e69.js";import{u as S}from"./index-4fb8b842.js";import"./iframe-4ea23a2e.js";import"../sb-preview/runtime.mjs";import"./index-6e91e324.js";import"./index-d475d2ea.js";import"./index-c46f0053.js";import"./_commonjsHelpers-042e6b4d.js";import"./index-d37d4223.js";import"./index-356e4a49.js";import"./useVisConfig-ebd632ff.js";import"./visConfigSlice-d502a2ab.js";import"./store-e4d3035e.js";import"./Label-90f045e3.js";import"./index-e3f86ac2.js";import"./Tooltip-e87d4e0c.js";/* empty css              */const n=({label:s,labelPosition:r,labelTransparent:l,children:t,className:x,style:F,...v})=>{const[G,I]=i.useState({}),[d,w]=i.useState(null),u=i.useRef(null),h=e("div",{className:"cove-input-group__label",ref:u,children:s});i.useLayoutEffect(()=>{l&&u.current&&w(u.current.offsetWidth)},[l,u]),i.useLayoutEffect(()=>{l&&(r==="left"&&I(()=>({paddingLeft:d+"px"})),r==="right"&&I(()=>({paddingRight:d+"px"})))},[l,r,d]);const C=s&&r&&{"data-label-position":r};return e("div",{className:(()=>{let b=["cove-input-group"];return l&&b.push("cove-input-group--label-transparent"),x&&b.push(x),b.join(" ")})(),style:G,...v,...C,children:s&&r?a(p,{children:[r==="left"&&a(p,{children:[" ",h,t," "]}),r==="right"&&a(p,{children:[" ",t,h," "]}),r==="center"&&t.length>1&&a(p,{children:[" ",t[0],h,t[1]," "]})]}):t})};n.propTypes={label:c.oneOfType([c.string,c.object]),labelPosition:c.oneOf(["left","center","right"]),labelTransparent:c.bool};n.__docgenInfo={description:"",methods:[],displayName:"InputGroup",props:{label:{type:{name:"union",value:[{name:"string"},{name:"object"}]},required:!1,description:""},labelPosition:{type:{name:"enum",value:[{value:"'left'",computed:!1},{value:"'center'",computed:!1},{value:"'right'",computed:!1}]},required:!1,description:""},labelTransparent:{type:{name:"bool"},required:!1,description:""}}};const T=({...s})=>e(n,{...s}),ne={args:{label:a(p,{children:[e(_,{className:"mr-1",display:"upload"})," Upload A File"]}),labelPosition:"left",children:[e(o,{type:"text"})]}};function M(s={}){const{wrapper:r}=Object.assign({},S(),s.components);return r?e(r,{...s,children:e(l,{})}):l();function l(){const t=Object.assign({h1:"h1",p:"p",h2:"h2",b:"b"},S(),s.components);return a(p,{children:[e(E,{title:"Components/Input/Input Group",component:n,parameters:{options:{isToolshown:!0}}}),`
`,`
`,`
`,e(t.h1,{children:"InputGroup Component"}),`
`,e(t.p,{children:`Component that provides a way to group and label multiple input fields, such as text inputs or buttons,
together within a single container. Also provides the ability to display the label
either to the left, center, or right of the input fields.`}),`
`,e(N,{sourceState:"shown",withSource:"open",children:e(f,{name:"Example",args:{},children:T.bind({})})}),`
`,e(j,{story:"Example"}),`
`,e(t.p,{children:" "}),`
`,e(t.h2,{children:"Transparent Labels"}),`
`,e(t.p,{children:"Using transparent labels sets the default label background color to be transparent, and automatically resizes the input field to fill the remaining space."}),`
`,e(N,{sourceState:"shown",withSource:"open",children:e(f,{name:"Transparent Labels",parameters:{docs:{source:{type:"code"}}},args:{test:"test"},children:()=>a(p,{children:[e(n,{className:"mb-2",label:e(t.b,{children:"First Name"}),labelPosition:"left",labelTransparent:!0,children:e(o,{type:"text"})}),e(n,{className:"mb-2",label:e(t.b,{children:"Last Name"}),labelPosition:"right",labelTransparent:!0,children:e(o,{type:"text"})})]})})}),`
`,e(t.p,{children:" "}),`
`,e(t.h2,{children:"Split Inputs"}),`
`,e(t.p,{children:"You can also place a label between two input fields, such as a username and server input. Use cases may be rare, but the option is available."}),`
`,e(f,{name:"Split Inputs",children:a(n,{className:"mb-2",label:"@",labelPosition:"center",children:[e(o,{type:"text",placeholder:"User"}),e(o,{type:"text",placeholder:"Server"})]})})]})}}const y=T.bind({});y.storyName="Example";y.args={};y.parameters={storySource:{source:`({ ...args
}) => <InputGroup {...args} />`}};const g=()=>a(p,{children:[e(n,{className:"mb-2",label:e("b",{children:"First Name"}),labelPosition:"left",labelTransparent:!0,children:e(o,{type:"text"})}),e(n,{className:"mb-2",label:e("b",{children:"Last Name"}),labelPosition:"right",labelTransparent:!0,children:e(o,{type:"text"})})]});g.storyName="Transparent Labels";g.args={test:"test"};g.parameters={storySource:{source:`() => <>
      <InputGroup className="mb-2" label={<b>First Name</b>} labelPosition="left" labelTransparent={true}>
        <InputText type="text" />
      </InputGroup>
      <InputGroup className="mb-2" label={<b>Last Name</b>} labelPosition="right" labelTransparent={true}>
        <InputText type="text" />
      </InputGroup>
    </>`},docs:{source:{type:"code"}}};const L=()=>a(n,{className:"mb-2",label:"@",labelPosition:"center",children:[e(o,{type:"text",placeholder:"User"}),e(o,{type:"text",placeholder:"Server"})]});L.storyName="Split Inputs";L.parameters={storySource:{source:'<InputGroup className="mb-2" label="@" labelPosition="center"><InputText type="text" placeholder="User" /><InputText type="text" placeholder="Server" /></InputGroup>'}};const m={title:"Components/Input/Input Group",parameters:{options:{isToolshown:!0}},component:n,tags:["stories-mdx"],includeStories:["example","transparentLabels","splitInputs"]};m.parameters=m.parameters||{};m.parameters.docs={...m.parameters.docs||{},page:M};const ae=["Template","Example","example","transparentLabels","splitInputs"];export{ne as Example,T as Template,ae as __namedExportsOrder,m as default,y as example,L as splitInputs,g as transparentLabels};
//# sourceMappingURL=InputGroup.stories-7d7f9f97.js.map
