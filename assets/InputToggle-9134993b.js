import{a as f,F as E,j as l}from"./jsx-runtime-670450c2.js";import{r as n}from"./index-f1f749bf.js";import{p as t}from"./index-4d501b15.js";import{u as I}from"./useVisConfig-ed2d617d.js";import{g as A}from"./store-4dc22f46.js";import{L as F}from"./Label-a6b7661b.js";/* empty css              */const _=n.memo(({label:r,labelPosition:c="right",tooltip:k,toggleType:C="flat",size:x="small",activeColor:g="#005eaa",stretch:S,configField:a,value:q,className:m,onClick:h,...L})=>{const{config:w,updateVisConfigField:v}=I(),[o,u]=n.useState(!1),y=n.useRef(null),i=a&&A(a,w),b=Boolean(i&&typeof i!==void 0);n.useEffect(()=>{b?i!==o&&u(i):u(q)},[b]),n.useEffect(()=>{a&&o!==i&&v(a,o)},[a,o,v]);const p=()=>y.current.click(),N=e=>{u(s=>!s),h&&h(e)},V=()=>{const e=[],s="cove-input__toggle-group";return e.push(s),S&&e.push("cove-input__toggle-group--stretch"),m&&e.push(m),e.join(" ")},T=()=>{const e=[],s="cove-input__toggle",O={small:"",medium:"--medium",large:"--large",xlarge:"--xlarge"};e.push(s+O[x]);const j={flat:"cove-input__toggle--flat",block:"cove-input__toggle--block",pill:"cove-input__toggle--pill","3d":"cove-input__toggle--3d"};return e.push(j[C]||""),o&&e.push("cove-input__toggle--active"),e.join(" ")},d=()=>l("div",{className:"cove-input__toggle-group__label",children:l(F,{tooltip:k,onClick:p,children:r})});return f(E,{children:[r&&c==="top"&&l(d,{}),f("div",{className:V(),flow:c,children:[r&&c==="left"&&l(d,{}),f("div",{className:T(),tabIndex:0,onKeyUp:e=>{(e.code==="Enter"||e.code==="NumpadEnter"||e.code==="Space")&&p()},onClick:p,children:[l("div",{className:"cove-input__toggle-spacer"}),l("div",{className:"cove-input__toggle-button"}),l("div",{className:"cove-input__toggle-track",style:o&&g?{backgroundColor:g}:null}),l("input",{className:"cove-input--hidden",type:"checkbox",defaultChecked:o,onChange:e=>N(e),ref:y,tabIndex:-1,readOnly:!0})]}),r&&c==="right"&&l(d,{})]})]})});_.propTypes={label:t.string,labelPosition:t.oneOf(["left","right","top"]),tooltip:t.oneOfType([t.string,t.object]),toggleType:t.oneOf(["flat","block","pill","3d"]),size:t.oneOf(["small","medium","large","xlarge"]),activeColor:t.string,stretch:t.bool,configField:t.oneOfType([t.string,t.array]),className:t.string,onClick:t.func};_.__docgenInfo={description:"",methods:[],displayName:"InputToggle",props:{labelPosition:{defaultValue:{value:"'right'",computed:!1},type:{name:"enum",value:[{value:"'left'",computed:!1},{value:"'right'",computed:!1},{value:"'top'",computed:!1}]},required:!1,description:"Position the label relative to the toggle"},toggleType:{defaultValue:{value:"'flat'",computed:!1},type:{name:"enum",value:[{value:"'flat'",computed:!1},{value:"'block'",computed:!1},{value:"'pill'",computed:!1},{value:"'3d'",computed:!1}]},required:!1,description:"Select the preferred display style of the toggle"},size:{defaultValue:{value:"'small'",computed:!1},type:{name:"enum",value:[{value:"'small'",computed:!1},{value:"'medium'",computed:!1},{value:"'large'",computed:!1},{value:"'xlarge'",computed:!1}]},required:!1,description:"Select the preferred size of the toggle"},activeColor:{defaultValue:{value:"'#005eaa'",computed:!1},type:{name:"string"},required:!1,description:"Select the preferred color for the toggle when active"},label:{type:{name:"string"},required:!1,description:"Add label to the input field"},tooltip:{type:{name:"union",value:[{name:"string"},{name:"object"}]},required:!1,description:"Add a tooltip to describe the toggle's usage; JSX markup can also be supplied"},stretch:{type:{name:"bool"},required:!1,description:"Stretch the toggle and its label to fill the width of its container; Only available when label exists, and **labelPosition** is set to `left` or `right`."},configField:{type:{name:"union",value:[{name:"string"},{name:"array"}]},required:!1,description:"Supply a reference to the config key this input connects to, if any.<br/><br/>\n**String**<br/>\n`configField=\"title\"` will connect to the `config.title` value.<br/><br/>\n**Array**<br/>\n`configField={[ 'componentStyle', 'shadow' ]}` will connect to the `config.componentStyle.shadow` value. <br/><br/>\nSee [setConfigKeyValue](https://cdcgov.github.io/cdc-open-viz/?path=/docs/helpers-confighelpers-setconfigkeyvalue--docs) for more details."},className:{type:{name:"string"},required:!1,description:"Additional class to add to the input wrapper"},onClick:{type:{name:"func"},required:!1,description:"Function to call when the input is clicked"}}};export{_ as I};
//# sourceMappingURL=InputToggle-9134993b.js.map
