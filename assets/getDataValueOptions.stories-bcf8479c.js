import{M as c}from"./index-41cddf45.js";import{j as e,a as r,F as p}from"./jsx-runtime-f14b59b8.js";import{u as i}from"./index-093f7bde.js";import"./iframe-1badc4b0.js";import"../sb-preview/runtime.mjs";import"./index-18f6e4ac.js";import"./_commonjsHelpers-53f7dec1.js";import"./index-6820418a.js";import"./index-3e075a63.js";import"./index-8052939a.js";import"./index-87c76d85.js";import"./index-f4cbaf5b.js";import"./index-edb31f89.js";function l(a={}){const{wrapper:o}=Object.assign({},i(),a.components);return o?e(o,{...a,children:e(s,{})}):s();function s(){const n=Object.assign({h1:"h1",p:"p",h2:"h2",pre:"pre",code:"code",strong:"strong",ul:"ul",li:"li",h3:"h3"},i(),a.components);return r(p,{children:[e(c,{title:"Helpers/CoveHelper/Data/getDataValueOptions"}),"\n",e(n.h1,{children:"getDataValueOptions"}),"\n",e(n.p,{children:"Function that creates a new Set object, iterates over each data object in the input array, and adds the keys of each object to the Set."}),"\n",e(n.p,{children:"If the input array is empty, returns an empty array."}),"\n",e(n.p,{children:" "}),"\n",e(n.h2,{children:"Syntax"}),"\n",e(n.pre,{children:e(n.code,{className:"language-js",children:"CoveHelper.Data.getDataValueOptions(data)\n"})}),"\n",e(n.p,{children:e(n.strong,{children:"Parameters:"})}),"\n",r(n.ul,{children:["\n",r(n.li,{children:[e(n.code,{children:"data"})," - An array of data objects."]}),"\n"]}),"\n",e(n.p,{children:e(n.strong,{children:"Returns:"})}),"\n",e(n.p,{children:"An array of unique column names (keys) found in the input data."}),"\n",e(n.p,{children:" "}),"\n",e(n.h3,{children:"Example"}),"\n",e(n.pre,{children:e(n.code,{className:"language-js",children:"import CoveHelper from '@cdc/core/helpers/CoveHelper'\n\n...\n\nconst data = [\n  { name: 'Alice', age: 25, city: 'New York' },\n  { name: 'Bob', age: 30, city: 'San Francisco' },\n  { name: 'Charlie', age: 35, city: 'Boston' }\n]\n\nconst options = CoveHelper.Data.getDataValueOptions(data)\n\nconsole.log(options) // ['name', 'age', 'city']\n"})})]})}}const d=()=>{throw new Error("Docs-only story")};d.parameters={docsOnly:true};const t={title:"Helpers/CoveHelper/Data/getDataValueOptions",tags:["stories-mdx"],includeStories:["__page"]};t.parameters=t.parameters||{};t.parameters.docs={...t.parameters.docs||{},page:l};const b=["__page"];export{b as __namedExportsOrder,d as __page,t as default};
//# sourceMappingURL=getDataValueOptions.stories-bcf8479c.js.map
