{"version":3,"file":"Label-a6b7661b.js","sources":["../../packages/core/components/element/Label.jsx"],"sourcesContent":["import React from 'react'\n\n// Third Party\nimport parse from 'html-react-parser'\nimport PropTypes from 'prop-types'\n\n// Components\nimport Icon from '../ui/Icon'\nimport Tooltip from '../ui/Tooltip'\n\n// Styles\nimport '../../styles/v2/components/element/label.scss'\n\nconst Label = ({ name, upperCase = true, tooltip, style, children, className, ...attributes }) => {\n\n  let styles = {\n    cursor: attributes.onClick ? 'pointer' : null,\n    textTransform: upperCase ? 'uppercase' : null,\n    ...style\n  }\n\n  return (\n    <>\n      <label htmlFor={ name ? name : null} className={`cove-label${className ? ' ' + className : ''}`} style={styles} {...attributes}>\n        {children}\n      </label>\n      {tooltip && tooltip !== '' && <>\n        <Tooltip>\n          <Tooltip.Target>\n            <Icon display=\"questionCircle\"/>\n          </Tooltip.Target>\n          <Tooltip.Content>\n            {typeof tooltip === 'object'\n              ? tooltip\n              : typeof tooltip === 'string' && (\n              <p>{parse(tooltip)}</p>\n            )}\n          </Tooltip.Content>\n        </Tooltip>\n      </>\n      }\n    </>\n  )\n}\n\nLabel.propTypes = {\n  /** Supply the referral name of an input to connect to this label */\n  name: PropTypes.string,\n  /** Sets the casing for the label */\n  upperCase: PropTypes.bool,\n  /** All content set between the \\<Label\\> tags */\n  children: PropTypes.any,\n  /** Add a tooltip to describe the label's related input's usage; JSX markup can also be supplied */\n  tooltip: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object\n  ]),\n  /** Add additional styles to the label as needed */\n  style: PropTypes.object\n}\n\nexport default Label\n"],"names":["Label","name","upperCase","tooltip","style","children","className","attributes","styles","jsxs","Fragment","jsx","Tooltip","Icon","parse","PropTypes"],"mappings":"wNAaA,MAAAA,EAAA,CAAA,CAAA,KAAAC,EAAA,UAAAC,EAAA,GAAA,QAAAC,EAAA,MAAAC,EAAA,SAAAC,EAAA,UAAAC,EAAA,GAAAC,CAAA,IAAA,CAEA,IAAAC,EAAA,CACA,OAAAD,EAAA,QAAA,UAAA,KACA,cAAAL,EAAA,YAAA,KACA,GAAAE,CAAA,EAGA,OAEAK,EAAAC,EAAA,CAAA,SAAA,CAAAC,EAAA,QAAA,CAAA,QAAAV,GAAA,KAAA,UAAA,aAAAK,EAAA,IAAAA,EAAA,KAAA,MAAAE,EAAA,GAAAD,EACA,SAAAF,EACA,EACAF,GAAAA,IAAA,IAAAQ,EAAAD,EAAA,CACA,WAAAE,EACA,CAAA,SAAA,CAAAD,EAAAC,EAAA,OAAA,CACA,WAAAC,EAAA,CAAA,QAAA,gBAAA,CAAA,EACA,IACAD,EAAA,QAAA,CACA,SAAA,OAAAT,GAAA,SACAA,EACA,OAAAA,GAAA,UACAQ,EAAA,IAAA,CAAA,SAAAG,EAAAX,CAAA,CAAA,CAAA,EAEA,CAAA,CAAA,CACA,CACA,CAAA,CAEA,CAAA,CAAA,CAEA,EAEAH,EAAA,UAAA,CAEA,KAAAe,EAAA,OAEA,UAAAA,EAAA,KAEA,SAAAA,EAAA,IAEA,QAAAA,EAAA,UAAA,CACAA,EAAA,OACAA,EAAA,MAAA,CACA,EAEA,MAAAA,EAAA,MACA"}