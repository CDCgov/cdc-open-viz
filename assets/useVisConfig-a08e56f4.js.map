{"version":3,"file":"useVisConfig-a08e56f4.js","sources":["../../packages/core/helpers/fetchAsyncUrl.js","../../packages/core/helpers/update/ver/4.23.js","../../packages/core/helpers/update/coveUpdateWorker.js","../../packages/core/hooks/store/useVisConfig.jsx"],"sourcesContent":["const fetchAsyncUrl = async (url) => {\n  let res = await fetch(url)\n  return res.json()\n}\n\nexport default fetchAsyncUrl\n","const update_4_23 = async config => {\n  const ver = 4.23\n\n  let newConfig = { ...config }\n\n  if (!config.validated || config.validated < ver) {\n    // Convert theme definition in config to color only\n    if (newConfig.theme && newConfig.theme.includes('theme-')) {\n      newConfig.theme = newConfig.theme.split('-')[1]\n    }\n\n    // Move old visual config entries into new key\n    if (newConfig.visual) {\n      newConfig.componentStyle = {\n        accent: newConfig.visual.accent,\n        background: newConfig.visual.background,\n        border: newConfig.visual.border,\n        shadow: newConfig.visual.shadow\n      }\n\n      if (newConfig.visual.accent) delete newConfig.visual.accent\n      if (newConfig.visual.background) delete newConfig.visual.background\n      if (newConfig.visual.border) delete newConfig.visual.border\n      if (newConfig.visual.shadow) delete newConfig.visual.shadow\n    }\n\n    // Remove old visual config entries\n\n    // Config alterations complete\n    // Add validation mark to config...\n    newConfig.validated = ver\n  }\n\n  return newConfig\n}\n\nexport default update_4_23\n","// If config key names or position in the config have been changed with a version change,\n// process those config entries and format old values into new\nimport update_4_23 from './ver/4.23'\n\n\n// 4.23.1 ------------------------------------------------------\nconst coveUpdateWorker = async (config) => {\n  let genConfig = config\n\n  // v4.23\n  genConfig = await update_4_23(genConfig)\n\n  return genConfig\n}\n\nexport default coveUpdateWorker\n","import { createContext, useCallback, useContext, useEffect, useState, useTransition } from 'react'\n\n// Third Party\nimport { merge } from 'lodash'\n\n// Store\nimport useStore from '../../store/store'\n\n// Helpers\nimport coveUpdateWorker from '../../helpers/update/coveUpdateWorker'\nimport fetchAsyncUrl from '../../helpers/fetchAsyncUrl'\n\n// Context\nexport const ConfigContext = createContext({})\nConfigContext.displayName = 'VisualizationConfig'\n\nexport const VisConfigProvider = ({ visualizationKey = '__default__', config: configObj, configUrl, children, defaultConfig, transformConfig } = {}) => {\n  const [ loading, setLoading ] = useState(false)\n\n  // Config Store Selectors\n  const addVisConfig = useStore(state => state.addVisConfig)\n  const updateVisConfig = useStore(state => state.updateVisConfig)\n  const storedConfig = useStore(state => state.visualizations[visualizationKey])\n  const dashboardStoredConfig = useStore(state => state.visualizations['__default__']?.visualizations?.[visualizationKey])\n\n  // Data Store Selectors\n  const getData = useStore(state => state.getData)\n\n  const finalConfig = useCallback(() => {\n    let resolvedConfig = dashboardStoredConfig ?? storedConfig\n    if (!resolvedConfig) {\n      return null\n    }\n\n    if (transformConfig) {\n      resolvedConfig = transformConfig(resolvedConfig)\n    }\n\n    return resolvedConfig\n  }, [ dashboardStoredConfig, storedConfig, transformConfig ])\n\n  useEffect(() => {\n    async function initConfig() {\n      const config = dashboardStoredConfig ?? configObj ?? (await fetchAsyncUrl(configUrl))\n\n      const resolvedConfig = merge(defaultConfig, config)\n      const processedConfig = { ...coveUpdateWorker(resolvedConfig) }\n\n      // Run update worker on config, then set in store\n      if (!dashboardStoredConfig) {\n        // Doesn't exist in dashboard store, so add it as either the default, or a new visualization\n        addVisConfig(visualizationKey, processedConfig)\n      } else {\n        // Exists as dashboard store, so update it\n        updateVisConfig(visualizationKey, processedConfig)\n      }\n\n      // Get initial data off config and put in store\n      await getData(visualizationKey, processedConfig)\n\n      setLoading(false)\n    }\n\n    if (loading || storedConfig) {\n      return\n    }\n\n    setLoading(true)\n    void initConfig()\n  }, [ configUrl, defaultConfig, loading, configObj, visualizationKey, storedConfig, dashboardStoredConfig, getData, addVisConfig, updateVisConfig ])\n\n  if (loading || !finalConfig()) {\n    console.log('no stored config!')\n    return null\n  }\n\n  const contextValue = { ...finalConfig(), visualizationKey }\n\n  return <ConfigContext.Provider value={contextValue}>{children}</ConfigContext.Provider>\n}\n\nexport const useVisConfig = () => {\n  const { visualizationKey, ...config } = useContext(ConfigContext)\n\n  const [, startTransition ] = useTransition()\n\n  // Actions -------------------------------------------------------------------------------------------------------\n  const storeUpdateVisConfig = useStore(state => state.updateVisConfig)\n  const storeUpdateVisConfigField = useStore(state => state.updateVisConfigField)\n\n  // Action Proxies ------------------------------------------------------------------------------------------------\n  const updateVisConfig = useCallback(\n    updates => {\n      startTransition(() => storeUpdateVisConfig(visualizationKey, updates))\n    },\n    [ storeUpdateVisConfig, visualizationKey ]\n  )\n\n  const updateVisConfigField = useCallback(\n    (fieldPayload, setValue, merge = true) => {\n      startTransition(() => storeUpdateVisConfigField(visualizationKey, fieldPayload, setValue, merge))\n    },\n    [ storeUpdateVisConfigField, visualizationKey ]\n  )\n  // ---------------------------------------------------------------------------------------------------------------\n\n  return {\n    config,\n    updateVisConfig,\n    updateVisConfigField\n  }\n}\n"],"names":["fetchAsyncUrl","url","res","update_4_23","config","ver","newConfig","coveUpdateWorker","genConfig","ConfigContext","createContext","VisConfigProvider","visualizationKey","configObj","configUrl","children","defaultConfig","transformConfig","loading","setLoading","useState","addVisConfig","useStore","state","updateVisConfig","storedConfig","dashboardStoredConfig","_b","_a","getData","finalConfig","useCallback","resolvedConfig","useEffect","initConfig","merge","processedConfig","contextValue","useVisConfig","useContext","startTransition","useTransition","storeUpdateVisConfig","storeUpdateVisConfigField","updates","updateVisConfigField","fieldPayload","setValue"],"mappings":"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"}