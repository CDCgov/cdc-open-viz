{"version":3,"file":"InputToggle.stories-481b559f.js","sources":["../../packages/core/components/input/InputToggle.jsx","../../packages/core/components/input/_stories/InputToggle.stories.mdx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react'\n\n// Third Party\nimport PropTypes from 'prop-types'\n\n// Store\nimport { useConfigStore } from '../../stores/configStore'\n\n// Helpers\nimport { getConfigKeyValue } from '../../helpers/configHelpers'\n\n// Components\nimport Label from '../element/Label'\n\n// Styles\nimport '../../styles/v2/components/input/index.scss'\n\nconst InputToggle = ({\n                       label,\n                       labelPosition = 'left',\n                       tooltip,\n                       toggleType = 'flat',\n                       size = 'small',\n                       activeColor = null,\n\n                       configField,\n                       value: inlineValue,\n                       className, ...attributes\n                     }) => {\n\n  const { config, updateConfigField } = useConfigStore()\n\n  const [ loadedConfigValue, setLoadedConfigValue ] = useState(false)\n  const [ value, setValue ] = useState(configField ? getConfigKeyValue(configField, config) : inlineValue || false)\n\n  //Set initial value\n  useEffect(() => {\n    if (configField) {\n      if (loadedConfigValue || value === undefined) { //Ignores the first pass when initial render sets value\n        if (inlineValue !== value) {\n          updateConfigField(configField, value)\n        }\n      }\n\n      // Initial value changed to configField value\n      // updateConfigField func is now accessible\n      setLoadedConfigValue(true)\n    }\n  }, [ value ])\n\n  const toggleTypeClass = () => {\n    const typeArr = {\n      flat: ' cove-input__toggle--flat',\n      block: ' cove-input__toggle--block',\n      pill: ' cove-input__toggle--pill',\n      '3d': ' cove-input__toggle--3d'\n    }\n    return typeArr[toggleType] || ''\n  }\n\n  const onClickHandler = () => setValue(value => !value)\n\n  const tooltipCheck = () => {\n    if (tooltip) return { 'data-has-tooltip': true }\n    return {}\n  }\n\n  const tooltipArgs = {...tooltipCheck()}\n\n  const TooltipLabel = () => (\n    <div className=\"cove-input__toggle-group__label\" {...tooltipArgs}>\n      <Label tooltip={tooltip} onClick={() => onClickHandler()}>{label}</Label>\n    </div>\n  )\n\n  return (\n    <>\n      {label && labelPosition === 'top' && <TooltipLabel/>}\n      <div className={'cove-input__toggle-group' + (className ? ' ' + className : '')} flow={labelPosition}>\n        {label && labelPosition === 'left' && <TooltipLabel/>}\n        <div className={'cove-input__toggle' + (size === 'medium' ? '--medium' : size === 'large' ? '--large' : '') + toggleTypeClass() + (value ? ' cove-input__toggle--active' : '')} onClick={() => onClickHandler()}>\n          <div className=\"cove-input__toggle-button\"/>\n          <div className=\"cove-input__toggle-track\" style={value && activeColor ? { backgroundColor: activeColor } : null}/>\n          <input className=\"cove-input--hidden\" type=\"checkbox\" checked={value || false} readOnly/>\n        </div>\n        {label && labelPosition === 'right' && <TooltipLabel/>}\n      </div>\n    </>\n  )\n}\n\nInputToggle.propTypes = {\n  /** Add label to the input field */\n  label: PropTypes.string,\n  /** Position the label relative to the toggle */\n  labelPosition: PropTypes.oneOf([ 'left', 'right', 'top' ]),\n  /** Add a tooltip to describe the toggle's usage; JSX markup can also be supplied */\n  tooltip: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object\n  ]),\n  /** Select the preferred display style of the toggle */\n  toggleType: PropTypes.oneOf([ 'flat', 'block', 'pill', '3d' ]),\n  /** Select the preferred size of the toggle */\n  size: PropTypes.oneOf([ 'small', 'medium', 'large' ]),\n  /** Select the preferred color for the toggle when active */\n  activeColor: PropTypes.string,\n  /** Current value of the input, usually the current config option value */\n  stateValue: PropTypes.bool\n}\n\nexport default InputToggle\n","import { Canvas, Meta, Story, ArgsTable } from '@storybook/blocks';\nimport InputToggle from '../InputToggle'\n\n<Meta\n  title=\"Components/Input/Toggle\"\n  name=\"Usage\"\n  component={InputToggle}\n  parameters={{ options: { isToolshown: true } }}\n/>\n\nexport const Template = ({ ...args }) => (\n  <InputToggle {...args} />\n)\n\n# Toggle\n<Canvas sourceState=\"shown\" withSource=\"open\">\n  <Story name=\"Example\"\n         args={{\n           label: 'Toggle Label',\n           labelPosition: 'top',\n           toggleType: 'flat',\n           tooltip: 'Example tooltip text...',\n           size: 'large',\n           activeColor: '#39569b',\n           value: true\n         }}>\n    {Template.bind({})}\n  </Story>\n</Canvas>\n\n<ArgsTable story=\"Example\"/>\n\n## Flat\n`toggleType=\"flat\"`\n<Canvas sourceState=\"none\">\n  <InputToggle activeColor=\"#46c3d1\" value={true}/>\n  <InputToggle size=\"medium\" activeColor=\"#46c3d1\" value={true}/>\n  <InputToggle size=\"large\" activeColor=\"#46c3d1\" value={true}/>\n</Canvas>\n\n<br/>\n\n## Block\n`toggleType=\"block\"`\n<Canvas sourceState=\"none\">\n  <InputToggle toggleType=\"block\" activeColor=\"#025eaa\" value={true}/>\n  <InputToggle size=\"medium\" toggleType=\"block\" activeColor=\"#025eaa\" value={true}/>\n  <InputToggle size=\"large\" toggleType=\"block\" activeColor=\"#025eaa\" value={true}/>\n</Canvas>\n\n<br/>\n\n## Pill\n`toggleType=\"pill\"`\n<Canvas sourceState=\"none\">\n  <InputToggle toggleType=\"pill\" activeColor=\"#f22d70\" value={true}/>\n  <InputToggle size=\"medium\" toggleType=\"pill\" activeColor=\"#f22d70\" value={true}/>\n  <InputToggle size=\"large\" toggleType=\"pill\" activeColor=\"#f22d70\" value={true}/>\n</Canvas>\n\n<br/>\n\n## 3D\n`toggleType=\"3d\"`\n<Canvas sourceState=\"hidden\">\n  <InputToggle toggleType=\"3d\" value={true}/>\n  <InputToggle size=\"medium\" toggleType=\"3d\" value={true}/>\n  <InputToggle size=\"large\" toggleType=\"3d\" value={true}/>\n</Canvas>\n"],"names":["InputToggle","label","labelPosition","tooltip","toggleType","size","activeColor","configField","inlineValue","className","attributes","config","updateConfigField","useConfigStore","loadedConfigValue","setLoadedConfigValue","useState","value","setValue","getConfigKeyValue","useEffect","toggleTypeClass","onClickHandler","tooltipArgs","TooltipLabel","jsx","Label","jsxs","Fragment","PropTypes","Template","args","_jsx","MDXContent","props","MDXLayout","_provideComponents","_createMdxContent","_components","_jsxs","_Fragment","Meta","Canvas","Story","ArgsTable","example","componentMeta","__namedExportsOrder"],"mappings":"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"}