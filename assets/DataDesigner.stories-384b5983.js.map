{"version":3,"file":"DataDesigner.stories-384b5983.js","sources":["../../packages/core/templates/dataDesignerTables.jsx","../../packages/core/components/manager/DataDesigner.jsx","../../packages/core/components/manager/_stories/DataDesigner.stories.mdx"],"sourcesContent":["import React from 'react'\n\nexport const DATA_TABLE_VERTICAL = (\n  <>\n    <table>\n      <tbody>\n        <tr>\n          <th>Date</th>\n          <th>Value</th>\n          <th>...</th>\n        </tr>\n        <tr>\n          <td>01/01/2020</td>\n          <td>150</td>\n          <td>...</td>\n        </tr>\n        <tr>\n          <td>02/01/2020</td>\n          <td>150</td>\n          <td>...</td>\n        </tr>\n      </tbody>\n    </table>\n    <table>\n      <tbody>\n        <tr>\n          <th>State</th>\n          <th>Value</th>\n          <th>...</th>\n        </tr>\n        <tr>\n          <td>Georgia</td>\n          <td>150</td>\n          <td>...</td>\n        </tr>\n        <tr>\n          <td>Florida</td>\n          <td>150</td>\n          <td>...</td>\n        </tr>\n      </tbody>\n    </table>\n  </>\n)\n\nexport const DATA_TABLE_HORIZONTAL = (\n  <>\n    <table>\n      <tbody>\n        <tr>\n          <th>Date</th>\n          <td>01/01/2020</td>\n          <td>02/01/2020</td>\n          <td>...</td>\n        </tr>\n        <tr>\n          <th>Value</th>\n          <td>100</td>\n          <td>150</td>\n          <td>...</td>\n        </tr>\n      </tbody>\n    </table>\n    <table>\n      <tbody>\n        <tr>\n          <th>State</th>\n          <td>Georgia</td>\n          <td>Florida</td>\n          <td>...</td>\n        </tr>\n        <tr>\n          <th>Value</th>\n          <td>100</td>\n          <td>150</td>\n          <td>...</td>\n        </tr>\n      </tbody>\n    </table>\n  </>\n)\n\nexport const DATA_TABLE_SINGLE_ROW = (\n  <table>\n    <tbody>\n      <tr>\n        <th>Date</th>\n        <th>Virus 1</th>\n        <th>Virus 2</th>\n        <th>...</th>\n      </tr>\n      <tr>\n        <td>01/01/2020</td>\n        <td>100</td>\n        <td>150</td>\n        <td>...</td>\n      </tr>\n      <tr>\n        <td>02/01/2020</td>\n        <td>15</td>\n        <td>20</td>\n        <td>...</td>\n      </tr>\n    </tbody>\n  </table>\n)\n\nexport const DATA_TABLE_MULTI_ROW = (\n  <table>\n    <tbody>\n      <tr>\n        <th>Virus</th>\n        <th>Date</th>\n        <th>Value</th>\n      </tr>\n      <tr>\n        <td>Virus 1</td>\n        <td>01/01/2020</td>\n        <td>100</td>\n      </tr>\n      <tr>\n        <td>Virus 1</td>\n        <td>02/01/2020</td>\n        <td>150</td>\n      </tr>\n      <tr>\n        <td>...</td>\n        <td>...</td>\n        <td>...</td>\n      </tr>\n      <tr>\n        <td>Virus 2</td>\n        <td>01/01/2020</td>\n        <td>15</td>\n      </tr>\n      <tr>\n        <td>Virus 2</td>\n        <td>02/01/2020</td>\n        <td>20</td>\n      </tr>\n      <tr>\n        <td>...</td>\n        <td>...</td>\n        <td>...</td>\n      </tr>\n    </tbody>\n  </table>\n)\n","// Third Party\nimport PropTypes from 'prop-types'\n\n// Components\nimport Button from '../element/Button'\nimport Card from '../element/Card'\n\n// Data\nimport { DATA_TABLE_VERTICAL, DATA_TABLE_HORIZONTAL, DATA_TABLE_SINGLE_ROW, DATA_TABLE_MULTI_ROW } from '../../templates/dataDesignerTables'\n\n// Styles\nimport '../../styles/v2/components/manager/data-designer.scss'\n\nconst DataDesigner = ({ configureData, updateDescriptionProp, visualizationKey, dataKey }) => {\n\n  return (\n    <div className=\"cove-data-designer__container\">\n      <div className=\"mb-2\">\n        <div className=\"cove-heading--3 fw-bold mb-1\">Describe Data</div>\n        <div className=\"cove-heading--3 fw-normal mb-1\">Data Orientation</div>\n        <div className=\"cove-grid cove-grid--gap--2 mb-4\">\n          <div className=\"cove-grid__col--6\">\n            <button\n              className={'cove-data-designer__button' + (configureData?.dataDescription && configureData?.dataDescription.horizontal === false ? ' active' : '')}\n              onClick={() => {\n                updateDescriptionProp(visualizationKey, dataKey, 'horizontal', false)\n              }}\n            >\n              <Card>\n                <strong className=\"cove-heading--3\">Vertical</strong>\n                <p className=\"mb-1\">\n                  Values for map geography or chart date/category axis are contained in a single <em>column</em>.\n                </p>\n                {DATA_TABLE_VERTICAL}\n              </Card>\n            </button>\n          </div>\n          <div className=\"cove-grid__col--6\">\n            <button\n              className={'cove-data-designer__button' + (configureData?.dataDescription && configureData?.dataDescription.horizontal === true ? ' active' : '')}\n              onClick={() => {\n                updateDescriptionProp(visualizationKey, dataKey, 'horizontal', true)\n              }}\n            >\n              <Card>\n                <strong className=\"cove-heading--3\">Horizontal</strong>\n                <p className=\"mb-1\">\n                  Values for map geography or chart date/category axis are contained in a single <em>row</em>\n                </p>\n                {DATA_TABLE_HORIZONTAL}\n              </Card>\n            </button>\n          </div>\n        </div>\n      </div>\n      {configureData?.dataDescription && (\n        <>\n          <div className=\"mb-2\">\n            <div className=\"mb-1\">Are there multiple series represented in your data?</div>\n            <div>\n              <Button\n                style={{ backgroundColor: '#00345d' }}\n                hoverStyle={{ backgroundColor: '#015daa' }}\n                className=\"mr-1\"\n                onClick={() => {\n                  updateDescriptionProp(visualizationKey, dataKey, 'series', true)\n                }}\n                active={configureData?.dataDescription.series === true}\n              >\n                Yes\n              </Button>\n              <Button\n                style={{ backgroundColor: '#00345d' }}\n                hoverStyle={{ backgroundColor: '#015daa' }}\n                onClick={() => {\n                  updateDescriptionProp(visualizationKey, dataKey, 'series', false)\n                }}\n                active={configureData?.dataDescription.series === false}\n              >\n                No\n              </Button>\n            </div>\n          </div>\n          {configureData?.dataDescription.horizontal === true && configureData?.dataDescription.series === true && (\n            <div className=\"mb-2\">\n              <div className=\"mb-1\">Which property in the dataset represents which series the row is describing?</div>\n              <select\n                onChange={e => {\n                  updateDescriptionProp(visualizationKey, dataKey, 'seriesKey', e.target.value)\n                }}\n                defaultValue={configureData?.dataDescription.seriesKey}\n              >\n                <option value=\"\">Choose an option</option>\n                {Object.keys(configureData.data[0]).map((value, index) => (\n                  <option value={value} key={index}>\n                    {value}\n                  </option>\n                ))}\n              </select>\n            </div>\n          )}\n          {configureData?.dataDescription.horizontal === false && configureData?.dataDescription.series === true && (\n            <>\n              <div className=\"mb-2\">\n                <div className=\"mb-1\">Are the series values in your data represented in a single row, or across multiple rows?</div>\n                <div className=\"grid grid-gap-2 mb-4\">\n                  <div className=\"column\">\n                    <button\n                      className={'cove-data-designer__button' + (configureData?.dataDescription.singleRow === true ? ' active' : '')}\n                      onClick={() => {\n                        updateDescriptionProp(visualizationKey, dataKey, 'singleRow', true)\n                      }}\n                    >\n                      <Card>\n                        <strong className=\"cove-heading--3\">Single Row</strong>\n                        <p className=\"mb-1\">Each row contains the data for an individual series in itself.</p>\n                        {DATA_TABLE_SINGLE_ROW}\n                      </Card>\n                    </button>\n                  </div>\n                  <div className=\"column\">\n                    <button\n                      className={'cove-data-designer__button' + (configureData?.dataDescription.singleRow === false ? ' active' : '')}\n                      onClick={() => {\n                        updateDescriptionProp(visualizationKey, dataKey, 'singleRow', false)\n                      }}\n                    >\n                      <Card>\n                        <strong className=\"cove-heading--3\">Multiple Rows</strong>\n                        <p className=\"mb-1\">Each series data is broken out into multiple rows.</p>\n                        {DATA_TABLE_MULTI_ROW}\n                      </Card>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              {configureData?.dataDescription.singleRow === false && (\n                <>\n                  <div className=\"mb-2\">\n                    <div className=\"mb-1\">Which property in the dataset represents which series the row is describing?</div>\n                    <select\n                      onChange={e => {\n                        updateDescriptionProp(visualizationKey, dataKey, 'seriesKey', e.target.value)\n                      }}\n                      defaultValue={configureData?.dataDescription.seriesKey}\n                    >\n                      <option value=\"\">Choose an option</option>\n                      {Object.keys(configureData?.data[0]).map((value, index) => (\n                        <option value={value} key={index}>\n                          {value}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div className=\"mb-1\">Which property in the dataset represents the values for the category/date axis or map geography?</div>\n                    <select\n                      onChange={e => {\n                        updateDescriptionProp(visualizationKey, dataKey, 'xKey', e.target.value)\n                      }}\n                      defaultValue={configureData?.dataDescription.xKey}\n                    >\n                      <option value=\"\">Choose an option</option>\n                      {Object.keys(configureData?.data[0]).map((value, index) => (\n                        <option value={value} key={index}>\n                          {value}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div className=\"mb-1\">Which property in the dataset represents the numeric value?</div>\n                    <select\n                      onChange={e => {\n                        updateDescriptionProp(visualizationKey, dataKey, 'valueKey', e.target.value)\n                      }}\n                      defaultValue={configureData?.dataDescription.valueKey}\n                    >\n                      <option value=\"\">Choose an option</option>\n                      {Object.keys(configureData?.data[0]).map((value, index) => (\n                        <option value={value} key={index}>\n                          {value}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </>\n              )}\n            </>\n          )}\n        </>\n      )}\n      {configureData?.dataDescription && configureData?.formattedData && <div>Data configured successfully</div>}\n    </div>\n  )\n}\n\nDataDesigner.propTypes = {\n  /** Array list of datapoints to be processed by the DataDesigner */\n  configureData: PropTypes.object,\n  /** Function used update the data description key, prop-drilled from parent */\n  updateDescriptionProp: PropTypes.func,\n  /** Specifies the unique visualization key that uses the data */\n  visualizationKey: PropTypes.string,\n  /** Specifies the key for the dataset */\n  dataKey: PropTypes.string\n}\n\nexport default DataDesigner\n","import { Canvas, Meta, Story, ArgsTable } from '@storybook/blocks';\n\nimport DataDesigner from '../DataDesigner'\n\n<Meta\n  title=\"Components/Manager/DataDesigner\"\n  component={DataDesigner}\n/>\n\n# DataDesigner Component\nA component used to interactively transform the datapoints that have been defined to be used by a visualization.\n\n<Canvas sourceState=\"shown\" withSource=\"open\">\n  <Story name=\"Example\" argTypes={{\n    configureData: {\n      control: false\n    },\n    updateDescriptionProp: {\n      control: false\n    },\n    visualizationKey: {\n      control: false\n    },\n    dataKey: {\n      control: false\n    }\n  }}>\n    {Template.bind({})}\n  </Story>\n</Canvas>\n\n<ArgsTable story=\"Example\"/>\n\nexport const Template = ({ ...args }) => <DataDesigner {...args}/>\n"],"names":["DATA_TABLE_VERTICAL","jsxs","Fragment","jsx","DATA_TABLE_HORIZONTAL","DATA_TABLE_SINGLE_ROW","DATA_TABLE_MULTI_ROW","DataDesigner","configureData","updateDescriptionProp","visualizationKey","dataKey","Card","Button","e","value","index","PropTypes","Template","args","_jsx","MDXContent","props","MDXLayout","_provideComponents","_createMdxContent","_components","_jsxs","_Fragment","Meta","Canvas","Story","ArgsTable","example","componentMeta","__namedExportsOrder"],"mappings":"y0BAEO,MAAMA,EAETC,EAAAC,EAAA,CAAA,SAAA,CAACC,EAAA,QAAA,CACC,WAAC,QACC,CAAA,SAAA,CAAAF,EAAC,KACC,CAAA,SAAA,CAAAE,EAAC,MAAG,SAAI,MAAA,CAAA,EACRA,EAAC,MAAG,SAAK,OAAA,CAAA,EACTA,EAAC,MAAG,SAAG,KAAA,CAAA,CAAA,EACT,IACC,KACC,CAAA,SAAA,CAAAA,EAAC,MAAG,SAAU,YAAA,CAAA,EACdA,EAAC,MAAG,SAAG,KAAA,CAAA,EACPA,EAAC,MAAG,SAAG,KAAA,CAAA,CAAA,EACT,IACC,KACC,CAAA,SAAA,CAAAA,EAAC,MAAG,SAAU,YAAA,CAAA,EACdA,EAAC,MAAG,SAAG,KAAA,CAAA,EACPA,EAAC,MAAG,SAAG,KAAA,CAAA,CAAA,EACT,CAAA,CAAA,CACF,CACF,CAAA,EACAA,EAAC,QACC,CAAA,SAAAF,EAAC,QACC,CAAA,SAAA,CAAAA,EAAC,KACC,CAAA,SAAA,CAAAE,EAAC,MAAG,SAAK,OAAA,CAAA,EACTA,EAAC,MAAG,SAAK,OAAA,CAAA,EACTA,EAAC,MAAG,SAAG,KAAA,CAAA,CAAA,EACT,IACC,KACC,CAAA,SAAA,CAAAA,EAAC,MAAG,SAAO,SAAA,CAAA,EACXA,EAAC,MAAG,SAAG,KAAA,CAAA,EACPA,EAAC,MAAG,SAAG,KAAA,CAAA,CAAA,EACT,IACC,KACC,CAAA,SAAA,CAAAA,EAAC,MAAG,SAAO,SAAA,CAAA,EACXA,EAAC,MAAG,SAAG,KAAA,CAAA,EACPA,EAAC,MAAG,SAAG,KAAA,CAAA,CAAA,EACT,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,EAGWC,EAETH,EAAAC,EAAA,CAAA,SAAA,CAACC,EAAA,QAAA,CACC,WAAC,QACC,CAAA,SAAA,CAAAF,EAAC,KACC,CAAA,SAAA,CAAAE,EAAC,MAAG,SAAI,MAAA,CAAA,EACRA,EAAC,MAAG,SAAU,YAAA,CAAA,EACdA,EAAC,MAAG,SAAU,YAAA,CAAA,EACdA,EAAC,MAAG,SAAG,KAAA,CAAA,CAAA,EACT,IACC,KACC,CAAA,SAAA,CAAAA,EAAC,MAAG,SAAK,OAAA,CAAA,EACTA,EAAC,MAAG,SAAG,KAAA,CAAA,EACPA,EAAC,MAAG,SAAG,KAAA,CAAA,EACPA,EAAC,MAAG,SAAG,KAAA,CAAA,CAAA,EACT,CAAA,CAAA,CACF,CACF,CAAA,EACAA,EAAC,QACC,CAAA,SAAAF,EAAC,QACC,CAAA,SAAA,CAAAA,EAAC,KACC,CAAA,SAAA,CAAAE,EAAC,MAAG,SAAK,OAAA,CAAA,EACTA,EAAC,MAAG,SAAO,SAAA,CAAA,EACXA,EAAC,MAAG,SAAO,SAAA,CAAA,EACXA,EAAC,MAAG,SAAG,KAAA,CAAA,CAAA,EACT,IACC,KACC,CAAA,SAAA,CAAAA,EAAC,MAAG,SAAK,OAAA,CAAA,EACTA,EAAC,MAAG,SAAG,KAAA,CAAA,EACPA,EAAC,MAAG,SAAG,KAAA,CAAA,EACPA,EAAC,MAAG,SAAG,KAAA,CAAA,CAAA,EACT,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,EAGWE,EACXF,EAAC,QACC,CAAA,SAAAF,EAAC,QACC,CAAA,SAAA,CAAAA,EAAC,KACC,CAAA,SAAA,CAAAE,EAAC,MAAG,SAAI,MAAA,CAAA,EACRA,EAAC,MAAG,SAAO,SAAA,CAAA,EACXA,EAAC,MAAG,SAAO,SAAA,CAAA,EACXA,EAAC,MAAG,SAAG,KAAA,CAAA,CAAA,EACT,IACC,KACC,CAAA,SAAA,CAAAA,EAAC,MAAG,SAAU,YAAA,CAAA,EACdA,EAAC,MAAG,SAAG,KAAA,CAAA,EACPA,EAAC,MAAG,SAAG,KAAA,CAAA,EACPA,EAAC,MAAG,SAAG,KAAA,CAAA,CAAA,EACT,IACC,KACC,CAAA,SAAA,CAAAA,EAAC,MAAG,SAAU,YAAA,CAAA,EACdA,EAAC,MAAG,SAAE,IAAA,CAAA,EACNA,EAAC,MAAG,SAAE,IAAA,CAAA,EACNA,EAAC,MAAG,SAAG,KAAA,CAAA,CAAA,EACT,CAAA,CACF,CAAA,CACF,CAAA,EAGWG,EACXH,EAAC,QACC,CAAA,SAAAF,EAAC,QACC,CAAA,SAAA,CAAAA,EAAC,KACC,CAAA,SAAA,CAAAE,EAAC,MAAG,SAAK,OAAA,CAAA,EACTA,EAAC,MAAG,SAAI,MAAA,CAAA,EACRA,EAAC,MAAG,SAAK,OAAA,CAAA,CAAA,EACX,IACC,KACC,CAAA,SAAA,CAAAA,EAAC,MAAG,SAAO,SAAA,CAAA,EACXA,EAAC,MAAG,SAAU,YAAA,CAAA,EACdA,EAAC,MAAG,SAAG,KAAA,CAAA,CAAA,EACT,IACC,KACC,CAAA,SAAA,CAAAA,EAAC,MAAG,SAAO,SAAA,CAAA,EACXA,EAAC,MAAG,SAAU,YAAA,CAAA,EACdA,EAAC,MAAG,SAAG,KAAA,CAAA,CAAA,EACT,IACC,KACC,CAAA,SAAA,CAAAA,EAAC,MAAG,SAAG,KAAA,CAAA,EACPA,EAAC,MAAG,SAAG,KAAA,CAAA,EACPA,EAAC,MAAG,SAAG,KAAA,CAAA,CAAA,EACT,IACC,KACC,CAAA,SAAA,CAAAA,EAAC,MAAG,SAAO,SAAA,CAAA,EACXA,EAAC,MAAG,SAAU,YAAA,CAAA,EACdA,EAAC,MAAG,SAAE,IAAA,CAAA,CAAA,EACR,IACC,KACC,CAAA,SAAA,CAAAA,EAAC,MAAG,SAAO,SAAA,CAAA,EACXA,EAAC,MAAG,SAAU,YAAA,CAAA,EACdA,EAAC,MAAG,SAAE,IAAA,CAAA,CAAA,EACR,IACC,KACC,CAAA,SAAA,CAAAA,EAAC,MAAG,SAAG,KAAA,CAAA,EACPA,EAAC,MAAG,SAAG,KAAA,CAAA,EACPA,EAAC,MAAG,SAAG,KAAA,CAAA,CAAA,EACT,CAAA,CAAA,CACF,CACF,CAAA,ECrIF,MAAAI,EAAA,CAAA,CAAA,cAAAC,EAAA,sBAAAC,EAAA,iBAAAC,EAAA,QAAAC,KAGAV,EAAA,MAAA,CAAA,UAAA,gCACA,SAAA,CAAAA,EAAA,MAAA,CAAA,UAAA,OACA,SAAA,CAAAE,EAAA,MAAA,CAAA,UAAA,+BAAA,SAAA,gBAAA,EACAA,EAAA,MAAA,CAAA,UAAA,iCAAA,SAAA,mBAAA,EACAF,EAAA,MAAA,CAAA,UAAA,mCACA,SAAA,CAAAE,EAAA,MAAA,CAAA,UAAA,oBACA,SAAAA,EAAA,SAAA,CACA,UAAA,8BAAAK,GAAA,MAAAA,EAAA,kBAAAA,GAAA,YAAAA,EAAA,gBAAA,cAAA,GAAA,UAAA,IACA,QAAA,IAAA,CACAC,EAAAC,EAAAC,EAAA,aAAA,EAAA,CACA,EAEA,WAAAC,EACA,CAAA,SAAA,CAAAT,EAAA,SAAA,CAAA,UAAA,kBAAA,SAAA,WAAA,EACAF,EAAA,IAAA,CAAA,UAAA,OAAA,SAAA,CAAA,kFACAE,EAAA,MAAA,SAAA,QAAA,CAAA,EAAA,GAAA,EACA,EACAH,CAAA,EACA,CAAA,CAAA,EAEA,EACAG,EAAA,MAAA,CAAA,UAAA,oBACA,SAAAA,EAAA,SAAA,CACA,UAAA,8BAAAK,GAAA,MAAAA,EAAA,kBAAAA,GAAA,YAAAA,EAAA,gBAAA,cAAA,GAAA,UAAA,IACA,QAAA,IAAA,CACAC,EAAAC,EAAAC,EAAA,aAAA,EAAA,CACA,EAEA,WAAAC,EACA,CAAA,SAAA,CAAAT,EAAA,SAAA,CAAA,UAAA,kBAAA,SAAA,aAAA,EACAF,EAAA,IAAA,CAAA,UAAA,OAAA,SAAA,CAAA,kFACAE,EAAA,MAAA,SAAA,KAAA,CAAA,CAAA,EACA,EACAC,CAAA,EACA,CAAA,CAAA,EAEA,CAAA,EACA,CAAA,EACA,GACAI,GAAA,YAAAA,EAAA,kBAEAP,EAAAC,EAAA,CAAA,SAAA,CAAAD,EAAA,MAAA,CAAA,UAAA,OACA,SAAA,CAAAE,EAAA,MAAA,CAAA,UAAA,OAAA,SAAA,sDAAA,IACA,MACA,CAAA,SAAA,CAAAA,EAAAU,EAAA,CACA,MAAA,CAAA,gBAAA,SAAA,EACA,WAAA,CAAA,gBAAA,SAAA,EACA,UAAA,OACA,QAAA,IAAA,CACAJ,EAAAC,EAAAC,EAAA,SAAA,EAAA,CACA,EACA,QAAAH,GAAA,YAAAA,EAAA,gBAAA,UAAA,GACA,SAAA,KAAA,CAEA,EACAL,EAAAU,EAAA,CACA,MAAA,CAAA,gBAAA,SAAA,EACA,WAAA,CAAA,gBAAA,SAAA,EACA,QAAA,IAAA,CACAJ,EAAAC,EAAAC,EAAA,SAAA,EAAA,CACA,EACA,QAAAH,GAAA,YAAAA,EAAA,gBAAA,UAAA,GACA,SAAA,IAAA,CAEA,CAAA,EACA,CAAA,EACA,GACAA,GAAA,YAAAA,EAAA,gBAAA,cAAA,KAAAA,GAAA,YAAAA,EAAA,gBAAA,UAAA,IACAP,EAAA,MAAA,CAAA,UAAA,OACA,SAAA,CAAAE,EAAA,MAAA,CAAA,UAAA,OAAA,SAAA,+EAAA,EACAF,EAAA,SAAA,CACA,SAAAa,GAAA,CACAL,EAAAC,EAAAC,EAAA,YAAAG,EAAA,OAAA,KAAA,CACA,EACA,aAAAN,GAAA,YAAAA,EAAA,gBAAA,UAEA,SAAA,CAAAL,EAAA,SAAA,CAAA,MAAA,GAAA,SAAA,mBAAA,EACA,OAAA,KAAAK,EAAA,KAAA,CAAA,CAAA,EAAA,IAAA,CAAAO,EAAAC,IACAb,EAAA,SAAA,CAAA,MAAAY,EACA,SAAAA,CAAA,EADAC,CAEA,CACA,CAAA,CAAA,CACA,CAAA,EACA,GAEAR,GAAA,YAAAA,EAAA,gBAAA,cAAA,KAAAA,GAAA,YAAAA,EAAA,gBAAA,UAAA,IAEAP,EAAAC,EAAA,CAAA,SAAA,CAAAD,EAAA,MAAA,CAAA,UAAA,OACA,SAAA,CAAAE,EAAA,MAAA,CAAA,UAAA,OAAA,SAAA,2FAAA,EACAF,EAAA,MAAA,CAAA,UAAA,uBACA,SAAA,CAAAE,EAAA,MAAA,CAAA,UAAA,SACA,SAAAA,EAAA,SAAA,CACA,UAAA,+BAAAK,GAAA,YAAAA,EAAA,gBAAA,aAAA,GAAA,UAAA,IACA,QAAA,IAAA,CACAC,EAAAC,EAAAC,EAAA,YAAA,EAAA,CACA,EAEA,WAAAC,EACA,CAAA,SAAA,CAAAT,EAAA,SAAA,CAAA,UAAA,kBAAA,SAAA,aAAA,EACAA,EAAA,IAAA,CAAA,UAAA,OAAA,SAAA,iEAAA,EACAE,CAAA,EACA,CAAA,CAAA,EAEA,EACAF,EAAA,MAAA,CAAA,UAAA,SACA,SAAAA,EAAA,SAAA,CACA,UAAA,+BAAAK,GAAA,YAAAA,EAAA,gBAAA,aAAA,GAAA,UAAA,IACA,QAAA,IAAA,CACAC,EAAAC,EAAAC,EAAA,YAAA,EAAA,CACA,EAEA,WAAAC,EACA,CAAA,SAAA,CAAAT,EAAA,SAAA,CAAA,UAAA,kBAAA,SAAA,gBAAA,EACAA,EAAA,IAAA,CAAA,UAAA,OAAA,SAAA,qDAAA,EACAG,CAAA,EACA,CAAA,CAAA,EAEA,CAAA,EACA,CAAA,EACA,GACAE,GAAA,YAAAA,EAAA,gBAAA,aAAA,IAEAP,EAAAC,EAAA,CAAA,SAAA,CAAAD,EAAA,MAAA,CAAA,UAAA,OACA,SAAA,CAAAE,EAAA,MAAA,CAAA,UAAA,OAAA,SAAA,+EAAA,EACAF,EAAA,SAAA,CACA,SAAAa,GAAA,CACAL,EAAAC,EAAAC,EAAA,YAAAG,EAAA,OAAA,KAAA,CACA,EACA,aAAAN,GAAA,YAAAA,EAAA,gBAAA,UAEA,SAAA,CAAAL,EAAA,SAAA,CAAA,MAAA,GAAA,SAAA,mBAAA,EACA,OAAA,KAAAK,GAAA,YAAAA,EAAA,KAAA,EAAA,EAAA,IAAA,CAAAO,EAAAC,IACAb,EAAA,SAAA,CAAA,MAAAY,EACA,SAAAA,CAAA,EADAC,CAEA,CACA,CAAA,CAAA,CACA,CAAA,EACA,EACAf,EAAA,MAAA,CAAA,UAAA,OACA,SAAA,CAAAE,EAAA,MAAA,CAAA,UAAA,OAAA,SAAA,mGAAA,EACAF,EAAA,SAAA,CACA,SAAAa,GAAA,CACAL,EAAAC,EAAAC,EAAA,OAAAG,EAAA,OAAA,KAAA,CACA,EACA,aAAAN,GAAA,YAAAA,EAAA,gBAAA,KAEA,SAAA,CAAAL,EAAA,SAAA,CAAA,MAAA,GAAA,SAAA,mBAAA,EACA,OAAA,KAAAK,GAAA,YAAAA,EAAA,KAAA,EAAA,EAAA,IAAA,CAAAO,EAAAC,IACAb,EAAA,SAAA,CAAA,MAAAY,EACA,SAAAA,CAAA,EADAC,CAEA,CACA,CAAA,CAAA,CACA,CAAA,EACA,EACAf,EAAA,MAAA,CAAA,UAAA,OACA,SAAA,CAAAE,EAAA,MAAA,CAAA,UAAA,OAAA,SAAA,8DAAA,EACAF,EAAA,SAAA,CACA,SAAAa,GAAA,CACAL,EAAAC,EAAAC,EAAA,WAAAG,EAAA,OAAA,KAAA,CACA,EACA,aAAAN,GAAA,YAAAA,EAAA,gBAAA,SAEA,SAAA,CAAAL,EAAA,SAAA,CAAA,MAAA,GAAA,SAAA,mBAAA,EACA,OAAA,KAAAK,GAAA,YAAAA,EAAA,KAAA,EAAA,EAAA,IAAA,CAAAO,EAAAC,IACAb,EAAA,SAAA,CAAA,MAAAY,EACA,SAAAA,CAAA,EADAC,CAEA,CACA,CAAA,CAAA,CACA,CAAA,EACA,CAAA,EACA,CAAA,EAEA,CAAA,EAEA,GAEAR,GAAA,YAAAA,EAAA,mBAAAA,GAAA,YAAAA,EAAA,gBAAAL,EAAA,OAAA,SAAA,+BAAA,CACA,CAAA,CAAA,EAIAI,EAAA,UAAA,CAEA,cAAAU,EAAA,OAEA,sBAAAA,EAAA,KAEA,iBAAAA,EAAA,OAEA,QAAAA,EAAA,MACA,gjBCxMY,MAACC,EAAW,CAAC,CAAE,GAAGC,CAC9B,IAAmBC,EAAKb,EAAc,CAAE,GAAGY,CAC3C,CAAC,EAED,SAASE,EAAWC,EAAQ,GAAI,CAC9B,KAAM,CACJ,QAASC,CACb,EAAM,OAAO,OAAO,CAAE,EAAEC,EAAkB,EAAIF,EAAM,UAAU,EAC5D,OAAOC,EAAyBH,EAAKG,EAAW,CAAE,GAAGD,EACnD,SAAuBF,EAAKK,EAAmB,EAAE,CACrD,CAAG,EAAIA,EAAiB,EAEtB,SAASA,GAAoB,CAC3B,MAAMC,EAAc,OAAO,OAAO,CAChC,GAAI,KACJ,EAAG,GACJ,EAAEF,EAAoB,EAAEF,EAAM,UAAU,EAEzC,OAAoBK,EAAMC,EAAW,CACnC,SAAU,CAAcR,EAAKS,EAAM,CACjC,MAAO,kCACP,UAAWtB,CACZ,CAAA,EAAG;AAAA,EAAmBa,EAAKM,EAAY,GAAI,CAC1C,SAAU,wBACX,CAAA,EAAG;AAAA,EAAmBN,EAAKM,EAAY,EAAG,CACzC,SAAU,kHAClB,CAAO,EAAG;AAAA,EAAmBN,EAAKU,EAAQ,CAClC,YAAa,QACb,WAAY,OACZ,SAAuBV,EAAKW,EAAO,CACjC,KAAM,UACN,SAAU,CACR,cAAe,CACb,QAAS,EACV,EACD,sBAAuB,CACrB,QAAS,EACV,EACD,iBAAkB,CAChB,QAAS,EACV,EACD,QAAS,CACP,QAAS,EACV,CACF,EACD,SAAUb,EAAS,KAAK,EAAE,CACpC,CAAS,CACT,CAAO,EAAG;AAAA,EAAmBE,EAAKY,EAAW,CACrC,MAAO,SACf,CAAO,CAAC,CACR,CAAK,CACF,CACH,CAIY,MAACC,EAAUf,EAAS,KAAK,EAAE,EACvCe,EAAQ,UAAY,UACpBA,EAAQ,SAAW,CACjB,cAAe,CACb,QAAS,EACV,EACD,sBAAuB,CACrB,QAAS,EACV,EACD,iBAAkB,CAChB,QAAS,EACV,EACD,QAAS,CACP,QAAS,EACV,CACH,EACAA,EAAQ,WAAa,CACnB,YAAa,CACX,OAAQ;AAAA,iCACT,CACH,EACK,MAACC,EAAgB,CACpB,MAAO,kCACP,UAAW3B,EACX,KAAM,CAAC,aAAa,EACpB,eAAgB,CAAC,SAAS,CAC5B,EACA2B,EAAc,WAAaA,EAAc,YAAc,GACvDA,EAAc,WAAW,KAAO,CAAE,GAAIA,EAAc,WAAW,MAAQ,GACrE,KAAMb,CACR,EAC4B,MAAAc,EAAA,CAAA,WAAA,SAAA"}