import{M as E,C as x,S as T,A as M}from"./index-a5c7af6f.js";import{j as e,a as l,F as a}from"./jsx-runtime-670450c2.js";import{r as i}from"./index-f1f749bf.js";import{p as c}from"./index-4d501b15.js";import{I as s}from"./InputText-4a90025a.js";import{I as N}from"./Icon-84bbcad3.js";import{u as v}from"./index-4fb8b842.js";import"./iframe-9bfe7737.js";import"../sb-preview/runtime.mjs";import"./index-6e91e324.js";import"./index-d475d2ea.js";import"./index-c46f0053.js";import"./_commonjsHelpers-042e6b4d.js";import"./index-d37d4223.js";import"./index-356e4a49.js";import"./useVisConfig-ed2d617d.js";import"./store-4dc22f46.js";import"./Label-a6b7661b.js";import"./Tooltip-2e67733b.js";/* empty css              */const p=({label:r,labelPosition:n,labelTransparent:o,children:t,className:S,style:A,...C})=>{const[G,f]=i.useState({}),[g,O]=i.useState(null),u=i.useRef(null),d=e("div",{className:"cove-input-group__label",ref:u,children:r});i.useLayoutEffect(()=>{o&&u.current&&O(u.current.offsetWidth)},[o,u]),i.useLayoutEffect(()=>{if(!o){f(()=>({paddingLeft:null,paddingRight:null}));return}n==="left"&&f(()=>({paddingLeft:g+"px"})),n==="right"&&f(()=>({paddingRight:g+"px"}))},[o,n,g]);const j=r&&n&&{"data-label-position":n};return e("div",{className:(()=>{let y=["cove-input-group"];return o&&y.push("cove-input-group--label-transparent"),S&&y.push(S),y.join(" ")})(),style:G,...C,...j,children:r&&n?l(a,{children:[n==="left"&&l(a,{children:[" ",d,t," "]}),n==="right"&&l(a,{children:[" ",t,d," "]}),n==="center"&&e(a,{children:t.length>1?l(a,{children:[" ",t[0],d,t[1]," "]}):l(a,{children:[" ",d,t," "]})})]}):t})};p.propTypes={label:c.oneOfType([c.string,c.object]),labelPosition:c.oneOf(["left","center","right"]),labelTransparent:c.bool};p.__docgenInfo={description:"",methods:[],displayName:"InputGroup",props:{label:{type:{name:"union",value:[{name:"string"},{name:"object"}]},required:!1,description:"Add label to apply to the input group"},labelPosition:{type:{name:"enum",value:[{value:"'left'",computed:!1},{value:"'center'",computed:!1},{value:"'right'",computed:!1}]},required:!1,description:"Position the label relative to the input group. `center` can only be used when two input fields are provided."},labelTransparent:{type:{name:"bool"},required:!1,description:"Make the label transparent"}}};const m=({...r})=>e(p,{...r}),w=({...r})=>l(a,{children:[e(p,{...r.setOne}),e(p,{...r.setTwo})]});function _(r={}){const{wrapper:n}=Object.assign({},v(),r.components);return n?e(n,{...r,children:e(o,{})}):o();function o(){const t=Object.assign({h1:"h1",p:"p",h2:"h2",b:"b"},v(),r.components);return l(a,{children:[e(E,{title:"Components/Input/InputGroup",component:p,parameters:{options:{isToolshown:!0}}}),`
`,e(t.h1,{children:"InputGroup Component"}),`
`,e(t.p,{children:`Renders a label, and either one or two input fields. The label's default display is different from normal input labels, and can
also be set to be transparent. The label can be positioned to the left, center, or right of the provided input fields.`}),`
`,e(x,{sourceState:"shown",withSource:"open",children:e(T,{name:"Example",args:{label:l(a,{children:[e(N,{className:"mr-1",display:"upload"})," Upload A File"]}),labelPosition:"left",labelTransparent:!1,children:[e(s,{type:"text"})]},argTypes:{children:{table:{disable:!0}}},children:m.bind({})})}),`
`,e(M,{story:"Example"}),`
`,e(t.p,{children:" "}),`
`,e(t.h2,{children:"Transparent Labels"}),`
`,e(t.p,{children:"Using transparent labels sets the default label background color to be transparent, and automatically resizes the input field to fill the remaining space."}),`
`,e(x,{sourceState:"hidden",children:e(T,{name:"Transparent Labels",args:{setOne:{className:"mb-2",label:e(t.b,{children:"First Name"}),labelPosition:"left",labelTransparent:!0,children:[e(s,{type:"text"})]},setTwo:{className:"mb-2",label:e(t.b,{children:"Last Name"}),labelPosition:"right",labelTransparent:!0,children:[e(s,{type:"text"})]}},children:w.bind({})})}),`
`,e(t.p,{children:" "}),`
`,e(t.h2,{children:"Split Inputs"}),`
`,e(t.p,{children:"You can also place a label between two input fields, such as a username and server input. Use cases may be rare, but the option is available."}),`
`,e(x,{sourceState:"hidden",children:e(T,{name:"Split Inputs",args:{className:"mb-2",label:"@",labelPosition:"center",children:[e(s,{type:"text",placeholder:"User"}),e(s,{type:"text",placeholder:"Server"})]},children:m.bind({})})})]})}}const b=m.bind({});b.storyName="Example";b.argTypes={children:{table:{disable:!0}}};b.args={label:l(a,{children:[e(N,{className:"mr-1",display:"upload"})," Upload A File"]}),labelPosition:"left",labelTransparent:!1,children:[e(s,{type:"text"})]};b.parameters={storySource:{source:`({ ...args
}) => <InputGroup {...args} />`}};const I=w.bind({});I.storyName="Transparent Labels";I.args={setOne:{className:"mb-2",label:e("b",{children:"First Name"}),labelPosition:"left",labelTransparent:!0,children:[e(s,{type:"text"})]},setTwo:{className:"mb-2",label:e("b",{children:"Last Name"}),labelPosition:"right",labelTransparent:!0,children:[e(s,{type:"text"})]}};I.parameters={storySource:{source:`({ ...args
}) => <>
    <InputGroup {...args.setOne} />
    <InputGroup {...args.setTwo} />
  </>`}};const L=m.bind({});L.storyName="Split Inputs";L.args={className:"mb-2",label:"@",labelPosition:"center",children:[e(s,{type:"text",placeholder:"User"}),e(s,{type:"text",placeholder:"Server"})]};L.parameters={storySource:{source:`({ ...args
}) => <InputGroup {...args} />`}};const h={title:"Components/Input/InputGroup",parameters:{options:{isToolshown:!0}},component:p,tags:["stories-mdx"],includeStories:["example","transparentLabels","splitInputs"]};h.parameters=h.parameters||{};h.parameters.docs={...h.parameters.docs||{},page:_};const re=["Template","DoubleTemplate","example","transparentLabels","splitInputs"];export{w as DoubleTemplate,m as Template,re as __namedExportsOrder,h as default,b as example,L as splitInputs,I as transparentLabels};
//# sourceMappingURL=InputGroup.stories-90ef1568.js.map
