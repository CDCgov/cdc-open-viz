{"version":3,"file":"WaffleChart.stories-16bf8e34.js","sources":["../../packages/waffle-chart/src/data/initial-state.js","../../packages/waffle-chart/src/data/consts.js","../../packages/waffle-chart/src/components/EditorPanels.jsx","../../node_modules/classnames/index.js","../../node_modules/@visx/shape/esm/shapes/Bar.js","../../node_modules/@visx/shape/esm/shapes/Circle.js","../../node_modules/@visx/group/esm/Group.js","../../packages/waffle-chart/src/hooks/usePrevious.js","../../packages/waffle-chart/src/helpers/calculateNodePosition.js","../../packages/waffle-chart/src/helpers/calculateWaffleAnimation.js","../../packages/waffle-chart/src/components/WaffleChart.jsx","../../packages/waffle-chart/src/CdcWaffleChart.jsx","../../packages/waffle-chart/src/_stories/WaffleChart.stories.mdx"],"sourcesContent":["export default {\n  title: 'Waffle Chart',\n  content: '',\n  subtext: '',\n  orientation: 'horizontal',\n  data: '',\n  filters: [],\n  fontSize: '',\n  overallFontSize: 'medium',\n  dataColumn: '',\n  dataFunction: '',\n  dataConditionalColumn: '',\n  dataConditionalOperator: '',\n  dataConditionalComparate: '',\n  invalidComparate: false,\n  customDenom: false,\n  dataDenom: '100',\n  dataDenomColumn: '',\n  dataDenomFunction: '',\n  suffix: '%',\n  roundToPlace: '0',\n  shape: 'circle',\n  nodeWidth: '10',\n  nodeSpacer: '2',\n  theme: 'blue',\n  type: 'waffle-chart',\n  visual: {\n    border: 'default',\n    accent: 'none',\n    background: 'default',\n    shadow: true\n  },\n  missingRequiredSections: false //This value should always exist\n}\n","export const DATA_FUNCTION_COUNT = 'Count'\nexport const DATA_FUNCTION_MAX = 'Max'\nexport const DATA_FUNCTION_MEAN = 'Mean (Average)'\nexport const DATA_FUNCTION_MEDIAN = 'Median'\nexport const DATA_FUNCTION_MIN = 'Min'\nexport const DATA_FUNCTION_MODE = 'Mode'\nexport const DATA_FUNCTION_SUM = 'Sum'\n\nexport const DATA_FUNCTIONS = [\n  DATA_FUNCTION_COUNT,\n  DATA_FUNCTION_MAX,\n  DATA_FUNCTION_MEAN,\n  DATA_FUNCTION_MEDIAN,\n  DATA_FUNCTION_MIN,\n  DATA_FUNCTION_MODE,\n  DATA_FUNCTION_SUM\n]\n\nexport const DATA_OPERATOR_LESS = '<'\nexport const DATA_OPERATOR_GREATER = '>'\nexport const DATA_OPERATOR_LESSEQUAL = '<='\nexport const DATA_OPERATOR_GREATEREQUAL = '>='\nexport const DATA_OPERATOR_EQUAL = '='\nexport const DATA_OPERATOR_NOTEQUAL = '≠'\n\nexport const DATA_OPERATORS = [\n  DATA_OPERATOR_LESS,\n  DATA_OPERATOR_GREATER,\n  DATA_OPERATOR_LESSEQUAL,\n  DATA_OPERATOR_GREATEREQUAL,\n  DATA_OPERATOR_EQUAL,\n  DATA_OPERATOR_NOTEQUAL\n]\n","import React, { useEffect } from 'react'\n\n// Hooks\nimport { useVisConfig } from '@cdc/core/hooks/store/useVisConfig'\n\n// Helpers\nimport CoveHelper from '@cdc/core/helpers/cove'\n\n// Components - Core\nimport Accordion from '@cdc/core/components/ui/Accordion'\nimport PanelComponentFilters from '@cdc/core/components/editor/Panel.Component.Filters'\nimport PanelGlobal from '@cdc/core/components/editor/Panel.Global'\nimport InputCheckbox from '@cdc/core/components/input/InputCheckbox'\nimport InputSelect from '@cdc/core/components/input/InputSelect'\nimport InputText from '@cdc/core/components/input/InputText'\nimport Label from '@cdc/core/components/element/Label'\nimport SectionWrapper from '@cdc/core/components/ui/SectionWrapper'\n\n// Constants\nimport { DATA_OPERATORS, DATA_FUNCTIONS } from '../data/consts'\n\nconst EditorPanels = () => {\n  // Store Selectors\n  const { config, updateVisConfigField } = useVisConfig()\n  const { data } = config\n\n  /** Component Effects -------------------------------------------------------------------------- */\n  useEffect(() => {\n    //Verify comparate data type\n    let operators = [ '<', '>', '<=', '>=' ]\n    if (config.dataConditionalComparate !== '') {\n      if (operators.indexOf(config.dataConditionalOperator) > -1 && isNaN(config.dataConditionalComparate)) {\n        updateVisConfigField('invalidComparate', true )\n      } else {\n        if (config.invalidComparate) {\n          updateVisConfigField('invalidComparate', false )\n        }\n      }\n    } else {\n      updateVisConfigField('invalidComparate', false )\n    }\n  }, [ config.dataConditionalOperator, config.dataConditionalComparate ])\n\n\n  /** Panels ------------------------------------------------------------------------------------- */\n  const panelGeneral = (\n    <Accordion.Section label=\"General\">\n      <InputText label=\"Title\" placeholder=\"Waffle Chart Title\" configField=\"title\"/>\n      <InputText label=\"Message\" type=\"textarea\" configField=\"content\"\n                 tooltip=\"Enter the message text for the visualization. The following HTML tags are supported: strong, em, sup, and sub.\"/>\n      <InputText label=\"Subtext/Citation\" placeholder=\"Waffle Chart Subtext or Citation\" configField=\"subtext\"\n                 tooltip=\"Enter supporting text to display below the data visualization, if applicable. The following HTML tags are supported: strong, em, sup, and sub.\"/>\n    </Accordion.Section>\n  )\n\n  const panelData = (\n    <Accordion.Section label=\"Data\" warnIf={!CoveHelper.General.isValid(config.dataColumn) || !CoveHelper.General.isValid(config.dataFunction)}>\n      <SectionWrapper label=\"Numerator\">\n        <InputSelect\n          label=\"Data Column\"\n          options={CoveHelper.Data.getDataColumns(data)}\n          configField=\"dataColumn\"\n          initialDisabled\n          required\n        />\n        <InputSelect\n          label=\"Data Function\"\n          options={DATA_FUNCTIONS}\n          configField=\"dataFunction\"\n          initialDisabled\n          required\n        />\n\n        <Label>Data Conditional</Label>\n        <div className=\"cove-grid cove-grid--gap--2 mb-3\">\n          <div className=\"cove-grid__col--4\">\n            <InputSelect\n              className=\"mb-0\"\n              options={CoveHelper.Data.getDataColumns(data)}\n              configField=\"dataConditionalColumn\"\n              initialDisabled\n            />\n          </div>\n          <div className=\"cove-grid__col--4\">\n            <InputSelect\n              className=\"mb-0\"\n              options={DATA_OPERATORS}\n              configField=\"dataConditionalOperator\"\n              initialDisabled\n            />\n          </div>\n          <div className=\"cove-grid__col--4\">\n            <InputText className=\"mb-0\" configField=\"dataConditionalComparate\"/>\n          </div>\n        </div>\n\n        {config.invalidComparate &&\n          <div className=\"accordion__panel-error\">\n            Non-numerical comparate values can only be used with = or ≠.\n          </div>\n        }\n      </SectionWrapper>\n\n      <SectionWrapper label=\"Denominator\">\n        <InputCheckbox label=\"Select from data\" size=\"small\" configField=\"customDenom\"/>\n\n        {!config.customDenom &&\n          <div className=\"cove-grid cove-grid--gap--2 mb-3\">\n            <div className=\"cove-grid__col--6\">\n              <InputText className=\"mb-0\" configField=\"dataDenom\"/>\n            </div>\n            <div className=\"cove-grid__col--6\">\n              <small>default (100)</small>\n            </div>\n          </div>\n        }\n        {config.customDenom &&\n          <>\n            <InputSelect\n              label=\"Data Column\"\n              options={CoveHelper.Data.getDataColumns(data)}\n              configField=\"dataDenomColumn\"\n            />\n            <InputSelect\n              label=\"Data Function\"\n              options={DATA_FUNCTIONS}\n              configField=\"dataDenomFunction\"\n            />\n          </>\n        }\n      </SectionWrapper>\n\n      <hr className=\"cove-editor__divider\"/>\n\n      <div className=\"cove-grid cove-grid--gap--2 mb-3\">\n        <div className=\"cove-grid__col--4\">\n          <InputText label=\"Prefix\" className=\"mb-0\" configField=\"prefix\"/>\n        </div>\n        <div className=\"cove-grid__col--4\">\n          <InputText label=\"Suffix\" className=\"mb-0\" configField=\"suffix\"/>\n        </div>\n        <div className=\"cove-grid__col--4\">\n          <InputText label=\"Round\" className=\"mb-0\" type=\"number\" configField=\"roundToPlace\"/>\n        </div>\n      </div>\n\n    </Accordion.Section>\n  )\n\n  const panelFilters = (\n    <Accordion.Section label=\"Filters\">\n      <PanelComponentFilters/>\n    </Accordion.Section>\n  )\n\n  const panelVisual = (\n    <Accordion.Section label=\"Visual\">\n      <InputSelect label=\"Shape\" options={[ 'circle', 'square', 'person' ]} configField=\"shape\"/>\n\n      <div className=\"cove-grid cove-grid--gap--2 mb-3\">\n        <div className=\"cove-grid__col--6\">\n          <InputText label=\"Width\" className=\"mb-0\" type=\"number\" configField=\"nodeWidth\"/>\n        </div>\n        <div className=\"cove-grid__col--6\">\n          <InputText label=\"Spacer\" className=\"mb-0\" type=\"number\" configField=\"nodeSpacer\"/>\n        </div>\n      </div>\n\n      <InputSelect label=\"Layout\" options={[ 'horizontal', 'vertical' ]} configField=\"orientation\"/>\n\n      <Label tooltip={'Change the font size of the output value returned from the Data'}>Data Value Font Size</Label>\n      <div className=\"cove-grid cove-grid--gap--2 mb-3\">\n        <div className=\"cove-grid__col--6\">\n          <InputText className=\"mb-0\" type=\"number\" configField=\"fontSize\"/>\n        </div>\n        <div className=\"cove-grid__col--6\" style={{ display: 'flex', alignItems: 'center' }}>\n          <small>default (50px)</small>\n        </div>\n      </div>\n\n      <InputSelect\n        label=\"Overall Font Size\"\n        tooltip={'Change the overall font size of the entire component.'}\n        options={[ 'small', 'medium', 'large' ]}\n        configField=\"overallFontSize\"\n      />\n    </Accordion.Section>\n  )\n\n  return <>\n    <Accordion>\n      {panelGeneral}\n      {panelData}\n      {panelFilters}\n      {panelVisual}\n      {PanelGlobal}\n    </Accordion>\n  </>\n}\n\nexport default EditorPanels\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","var _excluded = [\"className\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport cx from 'classnames';\nexport default function Bar(_ref) {\n  var className = _ref.className,\n    innerRef = _ref.innerRef,\n    restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"rect\", _extends({\n    ref: innerRef,\n    className: cx('visx-bar', className)\n  }, restProps));\n}","var _excluded = [\"className\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport cx from 'classnames';\nexport default function Circle(_ref) {\n  var className = _ref.className,\n    innerRef = _ref.innerRef,\n    restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"circle\", _extends({\n    ref: innerRef,\n    className: cx('visx-circle', className)\n  }, restProps));\n}","import _pt from \"prop-types\";\nvar _excluded = [\"top\", \"left\", \"transform\", \"className\", \"children\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport cx from 'classnames';\nexport default function Group(_ref) {\n  var _ref$top = _ref.top,\n    top = _ref$top === void 0 ? 0 : _ref$top,\n    _ref$left = _ref.left,\n    left = _ref$left === void 0 ? 0 : _ref$left,\n    transform = _ref.transform,\n    className = _ref.className,\n    children = _ref.children,\n    innerRef = _ref.innerRef,\n    restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"g\", _extends({\n    ref: innerRef,\n    className: cx('visx-group', className),\n    transform: transform || \"translate(\" + left + \", \" + top + \")\"\n  }, restProps), children);\n}\nGroup.propTypes = {\n  top: _pt.number,\n  left: _pt.number,\n  transform: _pt.string,\n  className: _pt.string,\n  children: _pt.node,\n  innerRef: _pt.oneOfType([_pt.string, _pt.func, _pt.object])\n};","// Store previous waffle value to calculate animation direction\nimport { useEffect, useRef } from 'react'\n\nconst usePrevious = (value) => {\n  const ref = useRef()\n  useEffect(() => {\n    ref.current = value\n  }, [ value ])\n  return ref.current\n}\n\nexport default usePrevious\n","// Calculate Waffle Chart Node Positions\nexport default function calculateNodePosition (shape, axis, index, width, spacer) {\n  let mod = axis === 'x' ? 9 - (index % 10) : axis === 'y' ? Math.floor(index / 10) : null\n  return shape === 'circle' ? (mod * (width + spacer)) + (width / 2) : mod * (width + spacer)\n}\n","// Calculate the animation steps for each node displayed in an animated waffle chart\nconst calculateWaffleAnimation = (step, prevVal, newVal) => {\n  const delay = 0.0025 // Animation delay between nodes\n  // const duration = 0.5 // Total duration of animation\n\n  if (newVal) {\n    const adjustment = Math.abs(prevVal - newVal)\n\n    // If new value is an increase, calculate the animation timing for the returned node\n    if (newVal > prevVal) {\n      let timerVal = ''\n      const animationIndex = Math.abs((newVal - step) - (adjustment)) // Calculate new index for animations to only set animation delays at changed nodes\n      if (step > prevVal && step < newVal) timerVal = 'fill-opacity 200ms cubic-bezier(0.16, 1, 0.3, 1) ' + (animationIndex * delay).toString() + 's, '\n      return timerVal\n    }\n\n    // If new value is a decrease, calculate the animation timing for the returned node\n    if (newVal < prevVal) {\n      let timerVal = ''\n      const animationIndex = Math.abs(newVal - step) // Calculate new index for animations to only set animation delays at changed nodes\n      if (step >= newVal && step < prevVal) timerVal = 'fill-opacity 200ms cubic-bezier(0.16, 1, 0.3, 1) ' + (Math.abs(adjustment - animationIndex) * delay).toString() + 's, '\n      return timerVal\n    }\n  }\n\n  return ''\n}\n\nexport default calculateWaffleAnimation\n","import React, { useCallback, useEffect } from 'react'\n\n// Third Party\nimport { Circle, Bar } from '@visx/shape'\nimport { Group } from '@visx/group'\n\nimport parse from 'html-react-parser'\n\n// Store\nimport useStore from '@cdc/core/store/store'\n\n// Hooks\nimport { useVisConfig } from '@cdc/core/hooks/store/useVisConfig'\n\n// Constants\nimport THEME_COLORS from '@cdc/core/data/componentThemes'\nimport {\n  DATA_FUNCTION_COUNT,\n  DATA_FUNCTION_SUM,\n  DATA_FUNCTION_MEAN,\n  DATA_FUNCTION_MEDIAN,\n  DATA_FUNCTION_MAX,\n  DATA_FUNCTION_MIN,\n  DATA_FUNCTION_MODE\n} from '../data/consts'\n\n// Hooks\nimport usePrevious from '../hooks/usePrevious'\n\n// Helpers\nimport CoveHelper from '@cdc/core/helpers/cove'\nimport calculateNodePosition from '../helpers/calculateNodePosition'\nimport calculateWaffleAnimation from '../helpers/calculateWaffleAnimation'\n\n// Visualization\nconst WaffleChart = () => {\n  // Store Selectors\n  const { config, visualizationKey } = useVisConfig()\n  const { setMissingRequiredSections } = useStore()\n  const { data } = config\n\n  /** Required Sections -------------------------------------------------------------------------- */\n  const requiredSections = useCallback(() => {\n    return [\n      config.dataColumn,\n      config.dataFunction\n    ]\n  }, [ config ])\n\n  useEffect(() => {\n    if (requiredSections && config) {\n      setMissingRequiredSections(visualizationKey, !requiredSections().every(section => !!CoveHelper.General.isValid(section) === true))\n    }\n    return () => {}\n  }, [ config, requiredSections, setMissingRequiredSections, visualizationKey ])\n\n\n  /** Vis Functions ------------------------------------------------------------------------------ */\n  const calculateData = () => {\n    //If either the column or function aren't set, do not calculate\n    if (!config?.dataColumn || !config.dataFunction) return ''\n\n    //Optionally filter the data based on the user's filter\n    let filteredData = data\n\n    config.filters.map((filter) => {\n      if (filter.columnName && filter.columnValue) {\n        filteredData = filteredData.filter(function (e) {\n          return e[filter.columnName] === filter.columnValue\n        })\n      }\n      return false\n    })\n\n    let conditionalData = []\n\n    if (config.dataConditionalColumn !== '' && config.dataConditionalOperator !== '' && config.dataConditionalComparate !== '') {\n      switch (config.dataConditionalOperator) {\n        case ('<'):\n          conditionalData = filteredData.filter(e => e[config.dataConditionalColumn] < config.dataConditionalComparate)\n          break\n        case ('>'):\n          conditionalData = filteredData.filter(e => e[config.dataConditionalColumn] > config.dataConditionalComparate)\n          break\n        case ('<='):\n          conditionalData = filteredData.filter(e => e[config.dataConditionalColumn] <= config.dataConditionalComparate)\n          break\n        case ('>='):\n          conditionalData = filteredData.filter(e => e[config.dataConditionalColumn] >= config.dataConditionalComparate)\n          break\n        case ('='):\n          if (isNaN(Number(config.dataConditionalComparate))) {\n            conditionalData = filteredData.filter(e => String(e[config.dataConditionalColumn]) === config.dataConditionalComparate)\n          } else {\n            conditionalData = filteredData.filter(e => e[config.dataConditionalColumn] === config.dataConditionalComparate)\n          }\n          break\n        case ('≠'):\n          if (isNaN(Number(config.dataConditionalComparate))) {\n            conditionalData = filteredData.filter(e => String(e[config.dataConditionalColumn]) !== config.dataConditionalComparate)\n          } else {\n            conditionalData = filteredData.filter(e => e[config.dataConditionalColumn] !== config.dataConditionalComparate)\n          }\n          break\n        default:\n          conditionalData = []\n      }\n    }\n\n    //Get the column's data\n    const columnData = conditionalData.length > 0 ? conditionalData.map(a => a[config.dataColumn]) : filteredData.map(a => a[config.dataColumn])\n    const denomColumnData = filteredData.map(a => a[config.dataDenomColumn])\n\n    //Filter the column's data for numerical values only\n    let numericalData = columnData.filter((value) => {\n      let include = false\n      if (Number(value) || Number.isFinite(Number(value))) {\n        include = true\n      }\n      return include\n    }).map(Number)\n\n    let numericalDenomData = denomColumnData.filter((value) => {\n      let include = false\n      if (Number(value) || Number.isFinite(Number(value))) {\n        include = true\n      }\n      return include\n    }).map(Number)\n\n    // Calculate numerator  ------------------\n    let waffleNumerator = ''\n\n    const numerFunctionList = {\n      [DATA_FUNCTION_COUNT]: String(numericalData.length),\n      [DATA_FUNCTION_SUM]: String(CoveHelper.Number.roundToPlace(CoveHelper.Math.getSum(numericalData), config.roundToPlace)),\n      [DATA_FUNCTION_MEAN]: String(CoveHelper.Number.roundToPlace(CoveHelper.Math.getMean(numericalData), config.roundToPlace)),\n      [DATA_FUNCTION_MEDIAN]: CoveHelper.Number.roundToPlace(CoveHelper.Math.getMedian(numericalData).toString(), config.roundToPlace),\n      [DATA_FUNCTION_MAX]: Math.max(...numericalData).toString(),\n      [DATA_FUNCTION_MIN]: Math.min(...numericalData).toString(),\n      [DATA_FUNCTION_MODE]: CoveHelper.Math.getMode(numericalData).join(', ')\n    }\n\n    waffleNumerator = numerFunctionList[config.dataFunction]\n\n    // Calculate denominator ------------------\n    let waffleDenominator = null\n\n    const denomFunctionList = {\n      [DATA_FUNCTION_COUNT]: String(numericalDenomData.length),\n      [DATA_FUNCTION_SUM]: String(CoveHelper.Number.roundToPlace(CoveHelper.Math.getSum(numericalDenomData), config.roundToPlace)),\n      [DATA_FUNCTION_MEAN]: String(CoveHelper.Number.roundToPlace(CoveHelper.Math.getMean(numericalDenomData), config.roundToPlace)),\n      [DATA_FUNCTION_MEDIAN]: CoveHelper.Number.roundToPlace(CoveHelper.Math.getMedian(numericalDenomData).toString(), config.roundToPlace),\n      [DATA_FUNCTION_MAX]: Math.max(...numericalDenomData).toString(),\n      [DATA_FUNCTION_MIN]: Math.min(...numericalDenomData).toString(),\n      [DATA_FUNCTION_MODE]: CoveHelper.Math.getMode(numericalDenomData).join(', ')\n    }\n\n    if (config.customDenom && config.dataDenomColumn && config.dataDenomFunction) {\n      waffleDenominator = denomFunctionList[config.dataDenomFunction]\n    } else {\n      waffleDenominator = config.dataDenom > 0 ? config.dataDenom : 100\n    }\n\n    return CoveHelper.Number.roundToPlace((waffleNumerator / waffleDenominator) * 100, config.roundToPlace)\n  }\n\n  const setRatio = () => {\n    return (config.nodeWidth * 10) + (config.nodeSpacer * 9)\n  }\n\n  const dataPercentage = calculateData()\n\n  let nodeWidthNum = parseInt(config.nodeWidth, 10)\n  let nodeSpacerNum = parseInt(config.nodeSpacer, 10)\n\n  let prevVal = usePrevious(dataPercentage)\n  let newVal = dataPercentage\n\n  const waffleRender = useCallback(() => {\n    let waffleData = []\n\n    for (let i = 0; i < 100; i++) {\n      let newNode = {\n        shape: config.shape,\n        x: calculateNodePosition(config.shape, 'x', i, nodeWidthNum, nodeSpacerNum),\n        y: calculateNodePosition(config.shape, 'y', i, nodeWidthNum, nodeSpacerNum),\n        color: THEME_COLORS[config.theme]?.primary,\n        opacity: i + 1 > (100 - Math.round(dataPercentage)) ? 1 : 0.35\n      }\n      waffleData.unshift(newNode)\n    }\n\n    return waffleData.map((node, key) => (\n      node.shape === 'square'\n        ? <Bar className=\"cove-waffle-chart__node\"\n               style={{ transition: calculateWaffleAnimation(key, prevVal, newVal) + 'fill 200ms ease 0s', fillOpacity: node.opacity }}\n               x={node.x} y={node.y}\n               width={nodeWidthNum} height={nodeWidthNum}\n               fill={node.color}\n               key={key}\n        />\n        : node.shape === 'person' ?\n          <path\n            style={{ transform: `translateX(${node.x + nodeWidthNum / 4}px) translateY(${node.y}px) scale(${nodeWidthNum / 20})`, transition: calculateWaffleAnimation(key, prevVal, newVal) + 'fill 200ms ease 0s', fillOpacity: node.opacity }}\n            fill={node.color} fillOpacity={node.opacity} key={key}\n            d=\"M3.75,0a2.5,2.5,0,1,1-2.5,2.5A2.5,2.5,0,0,1,3.75,0M5.625,5.625H5.18125a3.433,3.433,0,0,1-2.8625,0H1.875A1.875,1.875,\n                          0,0,0,0,7.5v5.3125a.9375.9375,0,0,0,.9375.9375h.625v5.3125A.9375.9375,0,0,0,2.5,20H5a.9375.9375,0,0,0,\n                          .9375-.9375V13.75h.625A.9375.9375,0,0,0,7.5,12.8125V7.5A1.875,1.875,0,0,0,5.625,5.625Z\">\n          </path>\n          :\n          <Circle className=\"cove-waffle-chart__node\"\n                  style={{ transition: calculateWaffleAnimation(key, prevVal, newVal) + 'fill 200ms ease 0s', fillOpacity: node.opacity }}\n                  cx={node.x} cy={node.y} r={nodeWidthNum / 2}\n                  fill={node.color}\n                  data-step={key} key={key}\n          />\n    ))\n  }, [ config ])\n\n  let dataFontSize = config.fontSize ? { fontSize: config.fontSize + 'px' } : null\n\n  return <>\n    {config.missingRequiredSections && <>Missing data in sections</>}\n    {config.missingRequiredSections === false && (<>\n      <div\n        className={`cove-waffle-chart__container${config.orientation === 'vertical' ? ' cove-waffle-chart__container--verical' : ''}${config.overallFontSize ? ' font-' + config.overallFontSize : ''}`}>\n        <div className=\"cove-waffle-chart__visualization\" style={{ width: setRatio() }}>\n          <svg width={setRatio()} height={setRatio()}>\n            <Group>\n              {waffleRender()}\n            </Group>\n          </svg>\n        </div>\n        {(dataPercentage || config.content) &&\n          <div className=\"cove-waffle-chart__data\">\n            {dataPercentage &&\n              <div className=\"cove-waffle-chart__data--primary\" style={dataFontSize}>\n                {config.prefix ? config.prefix : null}{dataPercentage}{config.suffix ? config.suffix : null}\n              </div>\n            }\n            <div className=\"cove-waffle-chart__data--text\">{parse(config.content)}</div>\n          </div>\n        }\n      </div>\n    </>)}\n    {config.subtext &&\n      <div className=\"cove-waffle-chart__subtext\">\n        {parse(config.subtext)}\n      </div>\n    }\n  </>\n}\n\nexport default WaffleChart\n","import React, { Suspense } from 'react'\n\n// Hooks\nimport { VisConfigProvider } from '@cdc/core/hooks/store/useVisConfig'\n\n// Data\nimport defaults from './data/initial-state'\n\n// Components - Core\nimport Component from '@cdc/core/components/hoc/Component'\nimport ErrorBoundary from '@cdc/core/components/hoc/ErrorBoundary'\nimport RenderFallback from '@cdc/core/components/loader/RenderFallback'\nimport View from '@cdc/core/components/hoc/View'\n\n// Components - Local\nimport EditorPanels from './components/EditorPanels'\nimport WaffleChart from './components/WaffleChart.jsx'\n\n// Styles\nimport './scss/cove-waffle-chart.scss'\n\n// Visualization\nconst CdcWaffleChart = visProps => {\n  return (\n    <ErrorBoundary component=\"CdcWaffleChart\">\n      <Suspense fallback={<RenderFallback/>}>\n        <VisConfigProvider {...visProps} defaultConfig={defaults}>\n          <View editorPanels={<EditorPanels/>}>\n            <Component className=\"cove-waffle-chart\">\n              <WaffleChart/>\n            </Component>\n          </View>\n        </VisConfigProvider>\n      </Suspense>\n    </ErrorBoundary>\n  )\n}\n\nexport default CdcWaffleChart\n","import { Canvas, Meta, Story, ArgsTable } from '@storybook/blocks';\nimport CdcWaffleChart from '../CdcWaffleChart'\n\n<Meta\n  title=\"Visualizations/Waffle Chart\"\n  component={CdcWaffleChart}\n/>\n\nexport const Template = (args) => <CdcWaffleChart config={{ ...args }}/>\nexport const types = {\n  header: {\n    table: {\n      disable: true,\n    },\n  },\n  content: {\n    table: {\n      disable: true,\n    },\n  },\n  footer: {\n    table: {\n      disable: true,\n    },\n  },\n  shape: {\n    options: [ 'square', 'circle', 'person' ],\n    control: { type: 'radio' }\n  },\n  headerBgColor: {\n    control: { type: 'color' }\n  },\n  showDividerTop: {\n    control: {\n      type: 'boolean'\n    }\n  },\n  showDividerBottom: {\n    control: {\n      type: 'boolean'\n    }\n  },\n  showClose: {\n    control: {\n      type: 'boolean'\n    }\n  }\n}\n\n# Waffle Chart\nThe Waffle Chart is a component that displays a grid of squares, each representing a value.\n\n<Canvas>\n  <Story name=\"Default\"\n         args={{\n           shape: 'square',\n           title: 'Overdose Mortality Rates',\n           content: 'of overdoses resulted in death.',\n           subtext: 'This data is an example and does not reflect actual averages',\n           orientation: 'horizontal',\n           data: [\n             {\n               'Resulted in Death': 250,\n               'Number of Overdoses': 600,\n               'state': 'Alabama',\n               'Year': '2010'\n             },\n             {\n               'Resulted in Death': 16,\n               'Number of Overdoses': 80,\n               'state': 'Alaska',\n               'Year': '2008'\n             },\n             {\n               'Resulted in Death': 19,\n               'Number of Overdoses': 100,\n               'state': 'Alaska',\n               'Year': '2010'\n             },\n             {\n               'Resulted in Death': 93,\n               'Number of Overdoses': 400,\n               'state': 'Alaska',\n               'Year': '2012'\n             },\n             {\n               'Resulted in Death': 82,\n               'Number of Overdoses': 400,\n               'state': 'Arizona',\n               'Year': '2010'\n             }\n           ],\n           filters: [],\n           fontSize: null,\n           overallFontSize: 'medium',\n           dataColumn: 'Resulted in Death',\n           dataFunction: 'Sum',\n           dataConditionalColumn: '',\n           dataConditionalOperator: null,\n           dataConditionalComparate: '',\n           customDenom: true,\n           dataDenom: null,\n           dataDenomColumn: 'Number of Overdoses',\n           dataDenomFunction: 'Sum',\n           prefix: '',\n           suffix: '%',\n           roundToPlace: 0,\n           nodeWidth: 10,\n           nodeSpacer: 2,\n           theme: 'blue'\n         }}\n         argTypes={types}\n  >\n    {Template.bind({})}\n  </Story>\n</Canvas>\n\n<ArgsTable story=\"Default\" />\n"],"names":["defaults","DATA_FUNCTION_COUNT","DATA_FUNCTION_MAX","DATA_FUNCTION_MEAN","DATA_FUNCTION_MEDIAN","DATA_FUNCTION_MIN","DATA_FUNCTION_MODE","DATA_FUNCTION_SUM","DATA_FUNCTIONS","DATA_OPERATOR_LESS","DATA_OPERATOR_GREATER","DATA_OPERATOR_LESSEQUAL","DATA_OPERATOR_GREATEREQUAL","DATA_OPERATOR_EQUAL","DATA_OPERATOR_NOTEQUAL","DATA_OPERATORS","EditorPanels","config","updateVisConfigField","useVisConfig","data","useEffect","operators","panelGeneral","jsxs","Accordion","jsx","InputText","panelData","CoveHelper","SectionWrapper","InputSelect","Label","InputCheckbox","Fragment","panelFilters","PanelComponentFilters","panelVisual","PanelGlobal","hasOwn","classNames","classes","i","arg","argType","inner","key","module","_excluded","_extends","target","source","_objectWithoutPropertiesLoose","excluded","sourceKeys","Bar","_ref","className","innerRef","restProps","React","cx","Circle","Group","_ref$top","top","_ref$left","left","transform","children","_pt","usePrevious","value","ref","useRef","calculateNodePosition","shape","axis","index","width","spacer","mod","calculateWaffleAnimation","step","prevVal","newVal","adjustment","timerVal","animationIndex","WaffleChart","visualizationKey","setMissingRequiredSections","useStore","requiredSections","useCallback","section","calculateData","filteredData","filter","e","conditionalData","columnData","a","denomColumnData","numericalData","include","numericalDenomData","waffleNumerator","waffleDenominator","denomFunctionList","setRatio","dataPercentage","nodeWidthNum","nodeSpacerNum","waffleRender","waffleData","newNode","THEME_COLORS","node","dataFontSize","parse","CdcWaffleChart","visProps","ErrorBoundary","Suspense","RenderFallback","VisConfigProvider","View","Component","Template","args","_jsx","types","MDXContent","props","MDXLayout","_provideComponents","_createMdxContent","_components","_jsxs","_Fragment","Meta","Canvas","Story","ArgsTable","defaultStory","componentMeta","__namedExportsOrder"],"mappings":"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"}