{"version":3,"file":"Button-d38d56b6.js","sources":["../../packages/core/components/ui/LoadSpin.jsx","../../packages/core/components/elements/Button.jsx"],"sourcesContent":["import React from 'react'\nimport '../../styles/v2/components/loadspin.scss'\n\nconst LoadSpin = ({ color = '#fff', opacity = 100, size = 100, className }) => {\n  const n = 8\n  return (\n    <>\n      <div className={`cove-loadspin${className ? ' ' + className : ''}`} style={{ width: size, height: size }}>\n        <div className='cove-loadspin__roller' style={{ opacity: opacity / 100, transform: `scale(${size / 80})` }}>\n          {[...Array(n)].map((elem, index) => (\n            <div key={index} style={{ backgroundColor: color }} />\n          ))}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default LoadSpin\n","import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\n\nimport LoadSpin from '../ui/LoadSpin'\n\nimport '../../styles/v2/components/button.scss'\n\nconst Button = ({ style, role, hoverStyle = {}, fluid = false, loading = false, loadingText = 'Loading...', flexCenter, active = false, onClick, children, ...attributes }) => {\n  const buttonRef = useRef(null)\n\n  const [ buttonState, setButtonState ] = useState('out')\n  const [ customStyles, setCustomStyles ] = useState({ ...style })\n  const [ childrenWidth, setChildrenWidth ] = useState()\n  const [ loadtextWidth, setLoadtextWidth ] = useState()\n\n  const attributesObj = {\n    ...attributes,\n    style: customStyles,\n    className: 'cove-button' + (flexCenter || 'loader' === role ? ' cove-button--flex-center' : '') + (fluid ? ' fluid' : '') + (loading ? ' loading' : '') + (attributes.className ? ' ' + attributes.className : ''),\n    onMouseOver: () => setButtonState('in'),\n    onMouseOut: () => setButtonState('out'),\n    onFocus: () => setButtonState('in'),\n    onBlur: () => setButtonState('out')\n  }\n\n\n  useEffect(() => {\n    if ('loader' === role && buttonRef.current) {\n      //Create ghost object and text nodes for children\n      const ghostSpan = document.createElement('span')\n      const ghostContent = document.createTextNode(children)\n      ghostSpan.style.opacity = '0'\n      ghostSpan.style.visibility = 'hidden'\n\n      //Create ghost object and text nodes for loading value\n      const ghostLoaderSpan = document.createElement('span')\n      const ghostLoaderContent = document.createTextNode(loadingText)\n      ghostLoaderSpan.style.opacity = '0'\n      ghostLoaderSpan.style.visibility = 'hidden'\n\n      //Append data to ghost objects\n      ghostSpan.appendChild(ghostContent)\n      ghostLoaderSpan.appendChild(ghostLoaderContent)\n\n      //Append objects to document\n      buttonRef.current.parentNode.insertBefore(ghostSpan, buttonRef.current)\n      buttonRef.current.parentNode.insertBefore(ghostLoaderSpan, buttonRef.current)\n\n      //Register ghost width values in state\n      setChildrenWidth(ghostSpan.offsetWidth + 2) //Toss in a 2px to account for subpixel offset\n      setLoadtextWidth(ghostLoaderSpan.offsetWidth + 2) //Toss in a 2px to account for subpixel offset\n\n      //Remove ghost objects form document\n      buttonRef.current.parentNode.removeChild(ghostSpan)\n      buttonRef.current.parentNode.removeChild(ghostLoaderSpan)\n    }\n    return () => {\n    }\n  }, [ buttonRef, children, loadingText, role ])\n\n  useEffect(() => {\n    //Adjust button styles depending on cursor, focus, and active, states\n    if (buttonState === 'in') setCustomStyles(stateStyles => ({ ...stateStyles, ...hoverStyle }))\n\n    // If button state is out, check if its 'active'; we want to keep hover styles applied to 'active' buttons\n    if (buttonState === 'out')\n      // If button state is out, and not 'active', reset display styles back to default\n      if (!active) setCustomStyles({ ...style })\n  }, [ buttonState, active, style ])\n\n  return (\n    <button\n      {...attributesObj}\n      onClick={e => {\n        e.preventDefault()\n        return loading || onClick()\n      }}\n      disabled={loading || attributesObj.disabled}\n      ref={buttonRef}\n    >\n      {children && (\n        <>\n          {'loader' === role && (\n            <>\n              <span className=\"cove-button__text\" style={loading ? { width: loadtextWidth + 'px' } : { width: childrenWidth + 'px' }}>\n                <div className=\"cove-button__text--loading\" style={loading ? { opacity: 1 } : null}>\n                  {loadingText}\n                </div>\n                <div className=\"cove-button__text--children\" style={loading ? { opacity: 0 } : null}>\n                  {children}\n                </div>\n              </span>\n              <div className=\"cove-button__load-spin\" style={loading ? { width: '28px', opacity: 1 } : null}>\n                <LoadSpin className=\"ml-1\" size={20}/>\n              </div>\n            </>\n          )}\n          {role !== 'loader' && children}\n        </>\n      )}\n    </button>\n  )\n}\n\nButton.propTypes = {\n  /** Specify special role type for button */\n  role: PropTypes.oneOf([ 'loader' ]),\n  /** Provide object with styles that overwrite base styles when hovered */\n  hoverStyle: PropTypes.object,\n  /** Enables button to stretch to the full width of the content */\n  fluid: PropTypes.bool,\n  /** Displays loading spinner on button while condition is true **/\n  loading: PropTypes.bool,\n  /** Set text to appear during loading animation **/\n  loadingText: PropTypes.string,\n  /** Displays button as flex and centers all direct children nodes. Useful for aligning icons and text **/\n  flexCenter: PropTypes.bool,\n  /** When value condition is true, retains any custom, inline `style={}` defined **/\n  active: PropTypes.bool\n}\n\nexport default Button\n"],"names":["LoadSpin","color","opacity","size","className","jsx","Fragment","elem","index","Button","style","role","hoverStyle","fluid","loading","loadingText","flexCenter","active","onClick","children","attributes","buttonRef","useRef","buttonState","setButtonState","useState","customStyles","setCustomStyles","childrenWidth","setChildrenWidth","loadtextWidth","setLoadtextWidth","attributesObj","useEffect","ghostSpan","ghostContent","ghostLoaderSpan","ghostLoaderContent","stateStyles","e","jsxs","PropTypes"],"mappings":"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"}