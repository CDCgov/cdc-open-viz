import{M as E,C as I,S as f,A as _}from"./index-045bade3.js";import{j as e,a,F as p}from"./jsx-runtime-670450c2.js";import{r as i}from"./index-f1f749bf.js";import{p as c}from"./index-4d501b15.js";import{I as s}from"./InputText-178c53b0.js";import{I as S}from"./Icon-e6436e69.js";import{u as N}from"./index-4fb8b842.js";import"./iframe-ad710d4e.js";import"../sb-preview/runtime.mjs";import"./index-6e91e324.js";import"./index-d475d2ea.js";import"./index-96c5f47c.js";import"./_commonjsHelpers-042e6b4d.js";import"./index-d37d4223.js";import"./index-53833bae.js";import"./index-356e4a49.js";import"./useVisConfig-4fe3448c.js";import"./visConfigSlice-bf7622bc.js";import"./store-0ad8816f.js";import"./Label-e733889d.js";import"./index-e3f86ac2.js";import"./Tooltip-5568ada0.js";/* empty css              */const n=({label:l,labelPosition:r,labelTransparent:o,children:t,className:g,style:M,...G})=>{const[C,x]=i.useState({}),[d,w]=i.useState(null),u=i.useRef(null),h=e("div",{className:"cove-input-group__label",ref:u,children:l});i.useLayoutEffect(()=>{o&&u.current&&w(u.current.offsetWidth)},[o,u]),i.useLayoutEffect(()=>{o&&(r==="left"&&x(()=>({paddingLeft:d+"px"})),r==="right"&&x(()=>({paddingRight:d+"px"})))},[o,r,d]);const j=l&&r&&{"data-label-position":r};return e("div",{className:(()=>{let b=["cove-input-group"];return o&&b.push("cove-input-group--label-transparent"),g&&b.push(g),b.join(" ")})(),style:C,...G,...j,children:l&&r?a(p,{children:[r==="left"&&a(p,{children:[" ",h,t," "]}),r==="right"&&a(p,{children:[" ",t,h," "]}),r==="center"&&t.length>1&&a(p,{children:[" ",t[0],h,t[1]," "]})]}):t})};n.propTypes={label:c.oneOfType([c.string,c.object]),labelPosition:c.oneOf(["left","center","right"]),labelTransparent:c.bool};n.__docgenInfo={description:"",methods:[],displayName:"InputGroup",props:{label:{type:{name:"union",value:[{name:"string"},{name:"object"}]},required:!1,description:""},labelPosition:{type:{name:"enum",value:[{value:"'left'",computed:!1},{value:"'center'",computed:!1},{value:"'right'",computed:!1}]},required:!1,description:""},labelTransparent:{type:{name:"bool"},required:!1,description:""}}};const L=({...l})=>e(n,{...l});function F(l={}){const{wrapper:r}=Object.assign({},N(),l.components);return r?e(r,{...l,children:e(o,{})}):o();function o(){const t=Object.assign({h1:"h1",p:"p",h2:"h2",b:"b"},N(),l.components);return a(p,{children:[e(E,{title:"Components/Input/Input Group",component:n,parameters:{options:{isToolshown:!0}}}),`
`,`
`,e(t.h1,{children:"Input Group"}),`
`,e(t.p,{children:`Component that provides a way to group and label multiple input fields, such as text inputs or buttons,
together within a single container. Also provides the ability to display the label
either to the left, center, or right of the input fields.`}),`
`,e(I,{sourceState:"shown",withSource:"open",children:e(f,{name:"Example",args:{label:a(p,{children:[e(S,{className:"mr-1",display:"upload"})," Upload A File"]}),labelPosition:"left",children:[e(s,{type:"text"})]},children:L.bind({})})}),`
`,e(_,{story:"Example"}),`
`,e(t.p,{children:" "}),`
`,e(t.h2,{children:"Transparent Labels"}),`
`,e(t.p,{children:"Using transparent labels sets the default label background color to be transparent, and automatically resizes the input field to fill the remaining space."}),`
`,e(I,{sourceState:"shown",withSource:"open",children:a(f,{name:"Clear Labels",children:[e(n,{className:"mb-2",label:e(t.b,{children:"First Name"}),labelPosition:"left",labelTransparent:!0,children:e(s,{type:"text"})}),e(n,{className:"mb-2",label:e(t.b,{children:"Last Name"}),labelPosition:"right",labelTransparent:!0,children:e(s,{type:"text"})})]})}),`
`,e(t.p,{children:" "}),`
`,e(t.h2,{children:"Split Inputs"}),`
`,e(t.p,{children:"You can also place a label between two input fields, such as a username and server input. Use cases may be rare, but the option is available."}),`
`,e(f,{name:"Split Inputs",children:a(n,{className:"mb-2",label:"@",labelPosition:"center",children:[e(s,{type:"text",placeholder:"User"}),e(s,{type:"text",placeholder:"Server"})]})})]})}}const y=L.bind({});y.storyName="Example";y.args={label:a(p,{children:[e(S,{className:"mr-1",display:"upload"})," Upload A File"]}),labelPosition:"left",children:[e(s,{type:"text"})]};y.parameters={storySource:{source:`({ ...args
}) => <InputGroup {...args} />`}};const v=()=>a(p,{children:[e(n,{className:"mb-2",label:e("b",{children:"First Name"}),labelPosition:"left",labelTransparent:!0,children:e(s,{type:"text"})}),e(n,{className:"mb-2",label:e("b",{children:"Last Name"}),labelPosition:"right",labelTransparent:!0,children:e(s,{type:"text"})})]});v.storyName="Clear Labels";v.parameters={storySource:{source:`<InputGroup className="mb-2" label={<b>First Name</b>} labelPosition="left" labelTransparent={true}><InputText type="text" /></InputGroup>
<InputGroup className="mb-2" label={<b>Last Name</b>} labelPosition="right" labelTransparent={true}><InputText type="text" /></InputGroup>`}};const T=()=>a(n,{className:"mb-2",label:"@",labelPosition:"center",children:[e(s,{type:"text",placeholder:"User"}),e(s,{type:"text",placeholder:"Server"})]});T.storyName="Split Inputs";T.parameters={storySource:{source:'<InputGroup className="mb-2" label="@" labelPosition="center"><InputText type="text" placeholder="User" /><InputText type="text" placeholder="Server" /></InputGroup>'}};const m={title:"Components/Input/Input Group",parameters:{options:{isToolshown:!0}},component:n,tags:["stories-mdx"],includeStories:["example","clearLabels","splitInputs"]};m.parameters=m.parameters||{};m.parameters.docs={...m.parameters.docs||{},page:F};const ne=["Template","example","clearLabels","splitInputs"];export{L as Template,ne as __namedExportsOrder,v as clearLabels,m as default,y as example,T as splitInputs};
//# sourceMappingURL=InputGroup.stories-05c14789.js.map
