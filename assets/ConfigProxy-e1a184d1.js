import{j as v,F as E}from"./jsx-runtime-670450c2.js";import{r as p}from"./index-f1f749bf.js";import{p as y}from"./index-4d501b15.js";import{u as x}from"./globalStore-3225bb68.js";import{u as O}from"./configStore-d2c2b356.js";class z{constructor(){this.constants={errorMessageEmtpyData:"Your data file is empty.",errorMessageFormat:"Your datatype is not supported.",descriptionHeader:1,descriptionRoot:2,descriptionSeriesFilter:3}}autoStandardize(n){const e=[];if(n.length===0&&e.push(this.constants.errorMessageEmptyData),(!n.filter||n.filter(a=>typeof a!="object").length>0)&&e.push(this.constants.errorMessageFormat),e.length>0){console.error(e);return}if(n.filter(a=>a.constructor!==Object).length>0){let a=[];for(let f=1;f<n.length;f++){let t={};n[f].forEach((s,r)=>{t[n[0][r]]=s}),a.push(t)}n=a}return n}developerStandardize(n,e){if(e&&!(e.horizontal===void 0||e.series===void 0)&&!(e.series===!0&&e.horizontal===!1&&e.singleRow===void 0)){if(e.horizontal===!0)if(e.series===!0){if(!e.seriesKey)return;let a={},f=[];return n.forEach(t=>{let s=[];Object.keys(t).forEach(r=>{r!==e.seriesKey&&isNaN(parseFloat(t[r]))&&s.push(r)}),Object.keys(t).forEach(r=>{if(r!==e.seriesKey&&s.indexOf(r)===-1){let o=r+"|"+s.map(i=>i+"="+t[i]);a[o]||(a[o]={[t[e.seriesKey]]:t[r],key:r},s.forEach(i=>{a[o][i]=t[i]})),a[o][t[e.seriesKey]]=t[r]}})}),Object.keys(a).forEach(t=>{f.push(a[t])}),f}else{let a=[];return n.forEach(f=>{let t=[];Object.keys(f).forEach(s=>{isNaN(parseFloat(f[s]))&&t.push(s)}),Object.keys(f).forEach(s=>{if(t.indexOf(s)===-1){let r={key:s,value:f[s]};t.forEach(o=>{r[o]=f[o]}),a.push(r)}})}),a}else if(e.series===!0&&e.singleRow===!1)if(e.seriesKey!==void 0&&e.xKey!==void 0&&(e.valueKey!==void 0||e.valueKeys!==void 0&&e.valueKeys.length>0))if(e.valueKey!==void 0){let a={},f=[],t=e.valueKeys;return e.ignoredKeys&&e.ignoredKeys.length>0&&(t=t.concat(e.ignoredKeys)),n.forEach(s=>{t.forEach(r=>{let o=[],i=s[e.xKey]+"|"+r;Object.keys(s).forEach(d=>{d!==e.xKey&&d!==e.seriesKey&&t.indexOf(d)===-1&&(i+="|"+d+"="+s[d],o.push(d))}),a[i]||(a[i]={[e.xKey]:s[e.xKey],"**Numeric Value Property**":r},o.forEach(d=>{a[i][d]=s[d]})),a[i][s[e.seriesKey]]=s[r]})}),f}else{let a={},f=[];return n.forEach(t=>{let s=[],r=t[e.xKey];Object.keys(t).forEach(o=>{o!==e.xKey&&o!==e.seriesKey&&o!==e.valueKey&&(r+="|"+o+"="+t[o],s.push(o))}),a[r]?a[r][t[e.seriesKey]]=t[e.valueKey]:(a[r]={[e.xKey]:t[e.xKey],[t[e.seriesKey]]:t[e.valueKey]},s.forEach(o=>{a[r][o]=t[o]}))}),Object.keys(a).forEach(t=>{(!e.ignoredKeys||e.ignoredKeys.indexOf(a[t]["**Numeric Value Property**"])===-1)&&f.push(a[t])}),f}else return;return n}}}const C=c=>{let e={...c};return(!c.validated||c.validated<4.23)&&(e.theme.includes("theme-")&&(e.theme=e.theme.split("-")[1]),delete e.hideBackgroundColor,delete e.roundedBorders,delete e.borderColorTheme,e.validated=4.23),e},S=c=>{let n=c;return n=C(n),n},b=({configObj:c,configUrl:n,defaults:e=null,runtime:a=null,children:f})=>{const{viewMode:t}=x(m=>m),{setConfigDefaults:s,updateConfig:r}=O(),[o,i]=p.useState(!1),[d,j]=p.useState(!0),K=new z;return p.useEffect(()=>{const m=async u=>{console.log(u);let h=null;try{const g=await(await fetch(u)).text();h=JSON.parse(g)}catch{console.error("Supplied config URL is not in JSON format - invalid address?")}return h};o||(async()=>{e&&s({...e});let u=c||await m(n)||{},h=u.formattedData||u.data||[];u.dataUrl&&(h=await(await fetch(u.dataUrl)).json(),u.dataDescription&&(h=K.autoStandardize(h),h=K.developerStandardize(h,u.dataDescription)));let l=e?{...e,...u}:{...u};return e&&Object.keys(e).forEach(g=>{l[g]&&typeof l[g]=="object"&&!Array.isArray(l[g])&&(l[g]={...e[g],...l[g]})}),l=S(l),l.data=h,l.table&&l.table.show===void 0&&(l.table.show=t==="dashboard"),l})().then(u=>{r(u,a),j(!1)}).catch(console.error).finally(()=>{i(!0)})},[o,c,n]),d?v(E,{}):f};b.propTypes={configObj:y.object,configUrl:y.string,defaults:y.object,runtime:y.func};b.__docgenInfo={description:"",methods:[],displayName:"ConfigProxy",props:{defaults:{defaultValue:{value:"null",computed:!1},type:{name:"object"},required:!1,description:"A json object containing any default, baseline values for a visualization."},runtime:{defaultValue:{value:"null",computed:!1},type:{name:"func"},required:!1,description:"A visualization-specific function that is run against the resolved *configObj* or *configURL* object; returns a modified object based off those processed values"},configObj:{type:{name:"object"},required:!1,description:"A *__json object__* containing values used for configuration of the dashboard or component"},configUrl:{type:{name:"string"},required:!1,description:"A *__url referral to a json object__* containing values used for configuration of the dashboard or component"}}};export{b as C};
//# sourceMappingURL=ConfigProxy-e1a184d1.js.map
