.post-type-cdc_visualization {
  .cove {
    // Temp Radio button fix
    // Resets User Agent Style, forms.css is overwriting our styles here.
    input[type='radio'] {
      background-color: initial !important;
      cursor: default !important;
      appearance: auto !important;
      box-sizing: border-box !important;
      margin: 3px 3px 0px 5px !important;
      padding: initial !important;
      border: initial !important;
    }
    // End Temp Radio button fix
  }
}
.cdc-open-viz-module {
  .geo-buttons {
    list-style: none;
    display: flex;
    color: $mediumGray;
    svg {
      display: block;
      max-width: 80px;
      max-height: 40px;
      margin: 0.5em auto;
      box-sizing: border-box;
      path {
        fill: currentColor;
      }
    }
    button {
      background: transparent;
      padding: 0.3em 0.75em;
      display: flex;
      border: $lightGray 1px solid;
      width: 40%;
      align-items: center;
      margin-right: 1em;
      cursor: pointer;
      overflow: hidden;
      flex-direction: column;
      transition: 0.2s all;
      svg {
        display: block;
        height: 25px;
        margin: 0.5em auto;
        max-width: 100%;
      }
      span {
        text-transform: none;
        font-size: 1em;
      }
      &:hover {
        background: #f2f2f2;
        transition: 0.2s all;
      }
      &.active {
        background: #fff;
        border-color: #005eaa;
        color: #005eaa;
        position: relative;
        path {
          fill: #005eaa;
        }
        &:before {
          content: ' ';
          width: 5px;
          background: #005eaa;
          left: 0;
          top: 0;
          bottom: 0;
          position: absolute;
        }
      }
    }
  }

  .editor-toggle {
    background: #f2f2f2;
    border-radius: 60px;
    color: #000;
    font-size: 1em;
    border: 0;
    position: fixed;
    z-index: 100;
    transition: 0.1s background;
    cursor: pointer;
    width: 25px;
    height: 25px;
    left: 307px;
    box-shadow: rgba(0, 0, 0, 0.5) 0 1px 2px;
    &:before {
      top: 43%;
      left: 50%;
      transform: translate(-50%, -50%);
      position: absolute;
      content: '\00ab';
    }
    &.collapsed {
      left: 1em;
      margin-left: 0;
      &:before {
        content: '\00bb';
      }
    }
    &:hover {
      background: rgba(255, 255, 255, 1);
    }
  }

  .editor-panel {
    //TODO: Remove after COVE refactor
    &.cove {
      @import '@cdc/core/styles/v2/layout/tooltip.scss';
    }

    .cove-input-group,
    .cove-accordion__small-inputs {
      position: relative;
      display: flex;
      flex-wrap: wrap;
      align-items: stretch;
      width: 100%;

      > {
        .cove-input {
          position: relative;
          flex: 1 1 auto;
          width: 1%;
          min-width: 0;
        }

        .cove-input__label {
          display: none;
        }
      }

      &:not(.clear) {
        > {
          :not(:first-child) {
            margin-left: -1px;
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
          }

          :not(:last-child) {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
          }
        }
      }

      &.clear {
        &[flow='left'] > {
          :first-child {
            border: 0;
            left: 0;
          }
        }

        &[flow='right'] > {
          :last-child {
            border: 0;
            right: 0;
          }
        }

        .cove-input-group__label {
          position: absolute;
          background-color: transparent;
          height: 100%;
          pointer-events: none;
          user-select: none;
        }
      }
    }

    .remove-column {
      font-size: 13px;
    }

    .helper {
      position: relative;
      opacity: 0.7;
      cursor: pointer;
      width: 17px;
      height: 17px;
      align-self: center;
      margin-left: 0.3rem;
    }

    .accordion__heading {
      background: $lightestGray;
    }
    .form-container {
      border-right: $lightGray 1px solid;
      flex-grow: 1;
    }
    .guidance-link {
      margin: 2em 1em 0;
      padding: 0.75em 1em;
      align-items: center;
      .heading-3 {
        font-weight: 600;
        font-size: 1.2em;
      }
      svg {
        width: 60px;
        color: $blue;
        margin-right: 1rem;
        height: 60px; // IE11
        path {
          fill: currentColor;
        }
      }
    }
    .warning {
      color: #d8000c;
      background-color: #ffd2d2;
      padding: 0.75em 1em;
      margin: 1em 0;
      font-size: 0.8em;
      border: #d8000c 1px solid;
      border-radius: 0.4em;
      strong {
        font-weight: 600;
        display: block;
      }
    }
    .accordion__button {
      cursor: pointer;
      font-size: 1em;
      padding: 0.3em 1em;
      width: 100%;
      text-align: left;
      position: relative;
      border-bottom: 1px solid rgba(0, 0, 0, 0.2);
    }

    .accordion__button:before {
      display: inline-block;
      content: '';
      height: 7px;
      width: 7px;
      margin-right: 1em;
      border-bottom: 2px solid currentColor;
      border-right: 2px solid currentColor;
      transform: rotate(-45deg);
      right: 0;
      position: absolute;
      top: 50%;
      transform: rotate(-45deg) translateY(-50%);
      transition: 0.1s all;
    }

    .accordion__button[aria-expanded='true']::before,
    .accordion__button[aria-selected='true']::before {
      top: 45%;
      transform: rotate(45deg) translateY(-50%);
      margin-right: 1.3em;
      transition: 0.1s all;
    }

    .accordion__panel {
      border-bottom: 1px solid rgba(0, 0, 0, 0.2);
      padding: 1em 1.25em 2em;
      animation: fadein 0.2s ease-in;
      span.h5 {
        font-size: 0.8em;
      }
      & p.layer-purpose-details {
        margin-top: 1em;
      }
    }

    .advanced {
      padding: 0 1em 1em;
      text-align: left;
      p {
        font-size: 0.8rem;
      }
      .advanced-toggle-link {
        padding-top: 1em;
        display: block;
        text-align: left;
        cursor: pointer;
        text-decoration: underline;
        span {
          text-decoration: none;
          display: inline-block;
          font-family: monospace;
          padding-right: 5px;
        }
        &:hover {
          color: rgba(0, 0, 0, 0.7);
        }
      }
      textarea {
        height: 400px;
        width: 100%;
        font-size: 0.9em;
        padding: 0.5em;
        font-family: monospace;
        box-sizing: border-box;
      }
    }

    @keyframes fadein {
      0% {
        opacity: 0;
      }

      100% {
        opacity: 1;
      }
    }

    .base-label {
      background: #565656;
      color: #fff;
      font-size: 1.1em;
      padding: 0.6em 1em;
      position: relative;
      border-bottom: #565656 3px solid;
      z-index: 3;
    }

    label {
      text-transform: uppercase;
      display: block;
      font-size: 0.8em;
      font-weight: 600;
      &:not(:first-child) {
        margin-top: 1em;
      }
      span.edit-label {
        margin-bottom: 0.3em;
        display: flex;
      }
      span.column-heading {
        font-size: 1em;
      }
      &.checkbox {
        margin-top: 0.5rem;
        display: flex;

        input {
          margin-left: 0;
          width: inherit;
          display: inline;
        }
      }
    }
    input[type='text'],
    input[role='combobox'],
    input[type='number'],
    textarea {
      min-width: 100%;
      max-width: 100%; // Doing this prevents width of textarea from being changed
    }
    textarea {
      min-height: 140px;
    }
    .header .color-palette li {
      width: 21px;
      height: 21px;
      border-radius: 40px;
      margin-right: 2.8px;
    }
    .color-palette {
      display: flex;
      max-width: 100%;
      padding: 0;
      margin: 0.5em 0 0 0;
      list-style: none;
      flex-wrap: wrap;
      li {
        width: 45px;
        height: 23px;
        margin-right: 4px;
        margin-bottom: 10px;
        display: flex;
        border-radius: 5px;
        overflow: hidden;
        cursor: pointer;
        position: relative;
        .click-target {
          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
        }
        &.selected {
          border: rgba(0, 0, 0, 0.8) 2px solid;
        }
        span {
          width: 33.3%;
        }
      }
    }

    fieldset {
      display: block;
    }

    .primary-fieldset {
      padding: 0;
      margin: 0;
      border: 0;
    }

    ul.column-edit {
      list-style: none;
      li {
        margin-top: 1em;
      }
      .three-col {
        display: flex;
        justify-content: space-between;
        > label {
          margin-top: 0;
          width: 30%;
          display: inline-block;
          input[type='text'],
          input[type='number'] {
            width: 50px;
          }
        }
      }
    }

    &.hidden {
      display: none;
    }

    .emove-column {
      float: right;
      text-transform: uppercase;
      color: #c32b2b;
      font-size: 0.7em;
      line-height: 1.6em;
      border-radius: 5px;
      margin: 0 auto;
      transition: 0.1s all;
      border: 0;
      text-decoration: underline;
      outline: 0;
      cursor: pointer;
      font-weight: bold;
    }

    .edit-block {
      padding-left: 1em;
      border-left: rgba(0, 0, 0, 0.2) 4px solid;
      transition: 0.2s all;
      &:not(:first-child) {
        margin-top: 2em;
      }
      input[type='text'],
      input[type='number'] {
        font-size: 1em;
      }
      label {
        margin-top: 0;
      }
      label + label {
        margin-top: 1em;
      }
      &:hover {
        border-left: rgba(0, 0, 0, 0.7) 4px solid;
        transition: 0.2s all;
      }
    }

    .data-toggle {
      list-style: none;
      li {
        padding-left: 2em;
        position: relative;
        &:before {
          content: ' ';
          position: absolute;
          left: 20px;
          top: 0;
          bottom: 0;
          border-left: rgba(0, 0, 0, 0.2) 4px solid;
          transition: 0.2s all;
        }
        &:after {
          content: ' ';
          background: url('../images/inactive-checkmark.svg') no-repeat;
          width: 14px;
          height: 14px;
          background-size: 14px;
          position: absolute;
          left: 0;
          top: 50%;
          transform: translateY(-50%);
          z-index: 40;
          opacity: 0.5;
          transition: 0.2s opacity;
        }
        transition: 0.2s opacity;
        cursor: pointer;
        opacity: 0.7;
        &:not(:first-child) {
          margin-top: 1em;
        }
        input[type='text'],
        input[type='number'] {
          font-size: 1em;
        }
        label {
          margin-top: 0;
        }
        label + label {
          margin-top: 1em;
        }
        &:hover {
          &:before {
            border-left: rgba(0, 0, 0, 0.7) 4px solid;
            transition: 0.2s all;
          }
          &:after {
            opacity: 1;
            transition: 0.2s all;
          }
        }
        &.active {
          position: relative;
          opacity: 1;
          &:before {
            border-left: rgba(0, 0, 0, 0.7) 4px solid;
          }
          &:after {
            content: ' ';
            background-image: url(../images/active-checkmark.svg);
            opacity: 1;
            transition: 0.2s opacity;
          }
        }
      }
    }

    span.subtext {
      display: block;
      color: rgba(0, 0, 0, 0.5);
      text-transform: none;
      font-weight: normal;
    }

    .btn {
      margin-top: 1em;
    }
    .sort-list {
      list-style: none;
      > li {
        margin-right: 0.3em;
        margin-bottom: 0.3em;
      }
    }
    .sort-list li > div {
      display: block;
      box-sizing: border-box;
      border: 1px solid #d1d1d1;
      border-radius: 2px;
      background: #f1f1f1;
      padding: 0.4em 0.6em;
      font-size: 0.8em;
      margin-bottom: 0.3em;
      cursor: move;
      z-index: 999;
    }

    .info {
      font-size: 0.8em;
      line-height: 1.4em;
      font-style: italic;
      padding-top: 10px;
    }

    .react-tags__search {
      width: 100%;
    }

    .react-tags {
      position: relative;
      input.react-tags__search-input {
        font-size: 0.8rem;
      }
      /* clicking anywhere will focus the input */
      cursor: text;
      span {
        display: inline;
      }
    }

    .react-tags.is-focused {
      border-color: rgba(0, 0, 0, 0.7);
    }

    .react-tags__selected {
      display: inline;
    }

    .react-tags__selected-tag {
      display: inline-block;
      box-sizing: border-box;
      border: 1px solid #d1d1d1;
      border-radius: 2px;
      background: #f1f1f1;
      padding: 0.4em 0.6em;
      font-size: 0.8em;
      margin-right: 0.3em;
      margin-bottom: 0.3em;
    }

    .react-tags__selected-tag:after {
      content: '\2715';
      color: #aaa;
      margin-left: 8px;
    }

    .react-tags__selected-tag:hover,
    .react-tags__selected-tag:focus {
      border-color: #b1b1b1;
    }

    .react-tags__search {
      display: inline-block;

      /* prevent autoresize overflowing the container */
      max-width: 100%;
    }

    @media screen and (min-width: 30em) {
      .react-tags__search {
        /* this will become the offsetParent for suggestions */
        position: relative;
      }
    }

    .react-tags__search input {
      /* prevent autoresize overflowing the container */
      max-width: 100%;

      /* emove styles and layout from this element */
      margin: 0;
      outline: none;
      padding: 0.5em 0.3em;

      /* match the font styles */
      font-size: inherit;
      line-height: inherit;
    }

    .react-tags__search input::-ms-clear {
      display: none;
    }

    .react-tags__suggestions {
      position: absolute;
      top: 100%;
      left: 0;
      width: 100%;
    }

    @media screen and (min-width: 30em) {
      .react-tags__suggestions {
        width: 240px;
      }
    }

    .react-tags__suggestions ul {
      margin: 4px -1px;
      padding: 0;
      list-style: none;
      background: white;
      border: 1px solid #d1d1d1;
      border-radius: 2px;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
    }

    .react-tags__suggestions li {
      border-bottom: 1px solid #ddd;
      padding: 6px 8px;
    }

    .react-tags__suggestions li mark {
      text-decoration: underline;
      background: none;
      font-weight: 600;
    }

    .react-tags__suggestions li:hover {
      cursor: pointer;
      background: #eee;
    }

    .react-tags__suggestions li.is-active {
      background: #b7cfe0;
    }

    .react-tags__suggestions li.is-disabled {
      opacity: 0.5;
      cursor: auto;
    }
  }

  @include breakpointClass(md) {
    .editor-panel:not(.hidden) + .cdc-map-inner-container {
      padding-left: $editorWidth;
    }
    .waiting {
      background-color: #fff;
      padding-left: $editorWidth;
    }
  }
}
