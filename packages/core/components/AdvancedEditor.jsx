import React, { useState, useEffect } from 'react'
import MapIcon from '../assets/map-folded.svg'
import ChartIcon from '../assets/icon-chart-bar.svg'
import MarkupIncludeIcon from '../assets/icon-code.svg'

export const AdvancedEditor = ({ loadConfig, state, convertStateToConfig }) => {
  const [advancedToggle, setAdvancedToggle] = useState(false)
  const [configTextboxValue, setConfigTextbox] = useState({})

  useEffect(() => {
    const parsedData = convertStateToConfig()
    const formattedData = JSON.stringify(parsedData, undefined, 2)

    setConfigTextbox(formattedData)
  }, [state])

  const typeLookup = {
    chart: ['Charts', 'https://www.cdc.gov/wcms/4.0/cdc-wp/data-presentation/bar-chart.html', <ChartIcon />],
    map: ['Maps', 'https://www.cdc.gov/wcms/4.0/cdc-wp/data-presentation/data-map.html', <MapIcon />],
    'markup-include': ['Markup Include', 'https://www.cdc.gov/wcms/4.0/cdc-wp/data-presentation/Markup-Include.html', <MarkupIncludeIcon />]
  }

  if (!state.type) return
  return (
    <>
      <a href={typeLookup[state.type][1]} target='_blank' rel='noopener noreferrer' className='guidance-link'>
        {typeLookup[state.type][2]}
        <div>
          <span className='heading-3'>Get Help with {typeLookup[state.type][0]}</span>
          <p>Examples and documentation</p>
        </div>
      </a>
      <div className='advanced'>
        <span className='advanced-toggle-link' onClick={() => setAdvancedToggle(!advancedToggle)}>
          <span>{advancedToggle ? `â€” ` : `+ `}</span>Advanced Options
        </span>
        {advancedToggle && (
          <React.Fragment>
            <section className='error-box py-2 px-3 my-2'>
              <div>
                <strong className='pt-1'>Warning</strong>
                <p>This can cause serious errors in your visualization.</p>
              </div>
            </section>
            <p className='pb-2'>
              This tool displays the actual <acronym title='JavaScript Object Notation'>JSON</acronym> configuration that is generated by this editor and allows you to edit properties directly and apply them.
            </p>
            <textarea value={configTextboxValue} onChange={event => setConfigTextbox(event.target.value)} />
            <button className='btn full-width' onClick={() => loadConfig(JSON.parse(configTextboxValue))}>
              Apply
            </button>
          </React.Fragment>
        )}
      </div>
    </>
  )
}

export default AdvancedEditor
