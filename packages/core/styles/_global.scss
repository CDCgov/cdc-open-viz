strong {
  font-weight: 600;
}

.error-box {
  background: #ffc2c2;
  display: flex;
  justify-content: space-between;
  padding: 0.3rem 1rem;
  font-size: 0.9rem;
  strong {
    font-weight: 600;
  }
  p {
    margin: 0;
  }
  .dismiss-error {
    flex-shrink: 0;
    font-size: 0.8rem;
    cursor: pointer;
  }
}

.cdcdataviz-sr-only,
.cdcdataviz-sr-only-focusable:not(:focus) {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
  display: flex;
}
.cdcdataviz-sr-only-focusable:focus {
  width: fit-content;
  margin-bottom: 0.5em;
  margin-left: 1em;
}
.inline-icon {
  width: 1em !important;
  height: auto !important;
  @media all and (-ms-high-contrast: none) {
    height: 30px !important;
  }
  font-size: 1rem;
  color: inherit;
  path {
    fill: currentColor;
  }
}

.btn {
  &.full-width {
    width: 100%;
  }
  &:hover {
    transition: 0.1s background-color;
  }
  &.secondary {
    font-size: 0.8em;
    padding: 0.3em 1em;
    background: rgba(0, 0, 0, 0.3);
    display: inline-block;
    margin-bottom: 1em;
    &:hover {
      background: rgba(0, 0, 0, 0.5);
    }
  }
  &.danger {
    background-color: $red;
    padding: 0em 0.6em 0em;
    height: 1.6em;
    font-size: 0.8 em;
    color: #fff;
    &:hover {
      background-color: darken($red, 5%);
    }
  }

  svg {
    width: 16px;
    height: 16px;
    position: relative;
    top: 2px;
  }
}

input[type='text'],
input[type='date'],
input[role='combobox'],
input[type='number'],
input[type='search'],
textarea {
  padding: 0.5em 0.5em;
  font-size: 1em;
  font-weight: normal;
  font-family: sans-serif;
  border: rgba(0, 0, 0, 0.3) 1px solid !important;
  &:focus {
    border: rgba(0, 0, 0, 0.7) 1px solid !important;
    outline: 0;
  }
}
textarea {
  min-height: 140px;
}

.input-group-text {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.guidance-link {
  margin: 2em 0 1em;
  padding: 0.75em 1em;
  display: flex;
  text-decoration: none;
  color: #444;
  border: $lightGray 1px solid;
  position: relative;
  transition: 0.2s all;
  font-size: 1em;
  &:before {
    content: ' ';
    width: 5px;
    background: $blue;
    left: -1px;
    top: -1px;
    bottom: -1px;
    position: absolute;
  }
  &:hover {
    background: $lightestGray;
    transition: 0.2s all;
    color: #444;
  }
  > div {
    font-size: 0.9em;
  }
  svg {
    width: 60px;
    color: $blue;
    margin-right: 1rem;
    path {
      fill: currentColor;
    }
  }
  h3 {
    font-weight: 600;
    font-size: 1.2rem;
  }
}

section.introText {
  width: 100%;
}

section.footnotes {
  border-top: 1px solid var(--cool-gray-10);
  width: 100%;
}

.margin-left-href {
  margin-left: 15px;
}

.btn.btn-primary:not([disabled]) {
  background-color: $blue;
  border-color: $blue;
  &:hover:not([disabled]) {
    background-color: darken($blue, 5%);
    border-color: darken($blue, 5%);
  }
}

// after migration to TP5 this declaration should be removed and all references
// to it should be replaced with .form-select
.cove-form-select {
  font-family: var(--app-font-secondary);
  font-weight: 300;
  font-size: var(--filter-select-font-size);
  line-height: normal;
  padding-right: 3rem;
  border-radius: 0.333rem;
  border: 1px solid var(--colors-gray-cool-10);
  color: var(--colors-primary-text);
  // recreate caret using svg
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="6 9 12 15 18 9"></polyline></svg>');
  background-repeat: no-repeat;
  background-position: right 0.5rem center;
  background-size: 1em;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  cursor: pointer;
  &:focus-visible {
    outline: 2px dashed var(--colors-blue-vivid-60, #005ea2) !important;
    outline-offset: 2px;
  }
}
