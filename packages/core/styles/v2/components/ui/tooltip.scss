// Reusable variables, nice for JS manipulations
:root {
  --cove-tooltip-bg: #fff;
  --cove-tooltip-color: black;
  --cove-tooltip-font-size: 14px;
  --cove-tooltip-border-color: #bdbdbd;
  --cove-tooltip-heading-fontWeight: bold;
  --cove-tooltip-animation: 500ms cubic-bezier(0.16, 1, 0.3, 1) 50ms 1 forwards;
  --cove-tooltip-maxWidth: 280px;
}

// Namespace to cove project, inconveniently using two different classes.
.cove,
.cdc-open-viz-module {
  // todo: move to a utils folder.
  .capitalize {
    text-transform: capitalize;
  }

  // react-tooltip library
  .react-tooltip {
    .styles-module_arrow,
    .react-tooltip-arrow {
      border-bottom: var(--cove-tooltip-border-color) 1px solid;
      border-right: var(--cove-tooltip-border-color) 1px solid;
      backface-visibility: hidden;
    }
  }

  // begin actual tooltip styles
  .react-tooltip,
  .tooltip {
    color: var(--cove-tooltip-color);
    border: 1px solid var(--cove-tooltip-border-color);
    padding: 0.3rem 0.5rem;
    z-index: 1000;
    opacity: 1;

    .interactive {
      a {
        pointer-events: all;
      }
    }

    ul {
      list-style: none;

      li {
        font-size: var(--cove-tooltip-font-size) !important;
      }

      // under the heading
      > li.tooltip-body {
        border-top: 1px solid black;
        padding-top: 5px;
      }

      li.tooltip-body:first-of-type {
        padding-top: 5px;
        border-top: 1px solid black;
      }

      // undo previous except first class
      > li.tooltip-body ~ li.tooltip-body {
        border-top: initial;
        padding-top: initial;
      }
    }

    .tooltip-heading {
      display: block;
      font-weight: var(--cove-tooltip-heading-fontWeight) !important;
      padding-bottom: 3px;
      padding-top: 3px;
      font-size: var(--cove-tooltip-font-size) !important;
    }
  }
}

.cove-tooltip {
  display: inline-block;
  position: relative;
  line-height: 1em;
}

.cove-tooltip--target {
  display: inherit;
  cursor: pointer;

  @at-root {
    .cove-accordion__button + .cove-tooltip--target {
      display: inline-flex;
      line-height: inherit;
    }
  }
}

.cove-tooltip__content {
  max-width: var(--cove-tooltip-maxWidth);
  padding: 10px 8px;
  font-size: 0.875rem;
  line-height: 1.125rem;
  text-align: left;
  color: var(--cove-tooltip-color);
  background-color: var(--cove-tooltip-bg);
  border-radius: 5px;
  user-select: none;
  cursor: default;
  z-index: 1;

  &.place-top {
    &.has-shadow {
      box-shadow: 0 4px 14px rgba(0, 0, 0, 0.15), 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    &.cove-tooltip__content--animated[class*='styles-module_show__'] {
      animation: tooltip-btt var(--cove-tooltip-animation);
    }
  }

  &.place-right {
    &.has-shadow {
      box-shadow: -4px 4px 14px rgba(0, 0, 0, 0.15), -4px 4px 8px rgba(0, 0, 0, 0.1);
    }

    &.cove-tooltip__content--animated[class*='styles-module_show__'] {
      animation: tooltip-ltr var(--cove-tooltip-animation);
    }
  }

  &.place-bottom {
    &.has-shadow {
      box-shadow: 0 -4px 14px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.1);
    }

    &.cove-tooltip__content--animated[class*='styles-module_show__'] {
      animation: tooltip-ttb var(--cove-tooltip-animation);
    }
  }

  &.place-left {
    &.has-shadow {
      box-shadow: 4px 4px 14px rgba(0, 0, 0, 0.15), 4px 4px 8px rgba(0, 0, 0, 0.1);
    }

    &.cove-tooltip__content--animated[class*='styles-module_show__'] {
      animation: tooltip-rtl var(--cove-tooltip-animation);
    }
  }
}
