@import "../utils/variables";
@import "../themes/index";

.cove-editor {
  display: grid;
  grid-template-areas: "panel content";
  grid-template-columns: auto 1fr;
  position: relative;
  height: 100vh;
}

.cove-editor__toggle {
  position: absolute;
  top: 10px;
  left: 307px;
  width: 25px;
  height: 25px;
  font-size: 1em;
  color: #000;
  background-color: #f2f2f2;
  border: 0;
  border-radius: 60px;
  transition: left 400ms ease 65ms, background-color 200ms ease;
  box-shadow: rgba(0, 0, 0, .5) 0 1px 2px;
  user-select: none;
  cursor: pointer;
  z-index: 8;

  &:before {
    content: "\00ab";
    position: absolute;
    top: 43%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  &.collapsed {
    left: 1em;
    margin-left: 0;

    &:before {
      content: "\00bb";
    }
  }

  &:hover {
    background-color: #ffffff
  }
}

.cove-editor__panel {
  grid-area: panel;
  width: 0;
  background-color: #fff;
  border-right: 1px solid #c2c2c2;
  transition: width 500ms ease;
  overflow-x: hidden;
  overflow-y: auto;
  z-index: 7;

  @at-root {
    .cove-editor.panel-shown #{&} {
      width: $editorWidth;
    }
  }
}

.cove-editor__panel-container {
  width: $editorWidth;
  min-width: $editorWidth;
}

.cove-editor__panel-config {
}

//TODO: COVE Refactor - Is this needed in DOM at all?

.cove-editor__panel-heading {
  padding: .625rem 1.125rem;
  font-size: 1.125em;
  color: #fff;
  background-color: $mediumGray;
  user-select: none;
}

.cove-editor__divider {
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
  border: 0;
  border-top: 1px solid #e2e2e2;
}

.cove-editor__content {
  grid-area: content;
  position: relative;
  background-color: #fff;
  transition: background-color 500ms $transition-expo-out;
  transform: scale(1); //Set baseline for fixed
  overflow: hidden;

  @at-root {
    .cove-editor.panel-shown #{&} {
      background-color: #e7e7e7;
    }
  }
}


.cove-editor__content-wrap--x {
  position: relative;
  min-width: 35rem;
  max-width: 50%;
  height: 100%;
  margin-right: auto;
  margin-left: auto;
  transition: max-width 500ms $transition-expo-out;

  @at-root {
    .cove-editor__content[data-grid] #{&}::before,
    .cove-editor__content[data-grid] #{&}::after {
      content: '';
      width: 1px;
      height: 100vh;
      top: 50%;
      transform: translateY(-50%);
      display: block;
      position: absolute;
      background-image: repeating-linear-gradient(0deg, #999, #999 18px, transparent 18px, transparent 26px);
      transition: opacity 500ms ease;
      opacity: 0;
    }

    .cove-editor.panel-shown #{&}::before,
    .cove-editor.panel-shown #{&}::after {
      opacity: 1;
    }

    .cove-editor__content[data-grid] #{&}::before {
      left: -1px;
    }

    .cove-editor__content[data-grid] #{&}::after {
      right: -1px;
    }
  }
}

.cove-editor__content-wrap--y {
  position: absolute;
  top: 3rem;
  width: 100%;

  @at-root {
    .cove-editor__content[data-grid] #{&}::before,
    .cove-editor__content[data-grid] #{&}::after {
      content: '';
      display: block;
      position: absolute;
      left: 50%;
      width: 100vw;
      height: 1px;
      background-image: repeating-linear-gradient(90deg, #999, #999 18px, transparent 18px, transparent 26px);
      transform: translateX(-50%);
      transition: opacity 500ms ease;
      opacity: 0;
    }

    .cove-editor.panel-shown #{&}::before,
    .cove-editor.panel-shown #{&}::after {
      opacity: 1;
    }

    .cove-editor__content[data-grid] #{&}::before {
      top: -1px;
    }

    .cove-editor__content[data-grid] #{&}::after {
      bottom: -1px;
    }
  }
}

.cove-editor-utils__grid--x::before {
  content: '';
  display: block;
  position: fixed;
  left: 0;
  width: 100px;
  height: 100px;
  background-color: red;
}

.cove-editor-utils {
}

.cove-editor-utils__breakpoints {
  position: absolute;
  right: 4rem;
  padding: 0.5rem 1rem;
  background-color: #fff;
  border-radius: 999px;
  box-shadow: 5px 5px 10px 0 rgb(0 0 0 / 15%);
  user-select: none;

  @at-root {
    .cove-editor:not(.panel-shown) #{&} {
      animation: editorBreakpointsDown 500ms ease forwards;
    }

    .cove-editor.panel-shown #{&} {
      animation: editorBreakpointsUp 500ms ease forwards;
    }
  }
}

@keyframes editorBreakpointsUp {
  0% {
    bottom: -3rem;
  }
  100% {
    bottom: 2rem;
  }
}

@keyframes editorBreakpointsDown {
  0% {
    bottom: 2rem;
  }
  100% {
    bottom: -3rem;
  }
}

.cove-editor-utils__breakpoints-list {
  display: flex;
  padding-left: 0;
  margin: 0;
  list-style: none;
}

.cove-editor-utils__breakpoints-item {
  display: block;
  position: relative;
  margin-right: 1rem;
  font-size: 0.875em;
  color: $primary;
  border-bottom: 2px solid transparent;
  transition: all 400ms $transition-expo-out;
  transition-property: border, color, transform;
  cursor: pointer;

  &:last-of-type {
    margin-right: 0;
  }

  &:not(:last-of-type) {
    &::after {
      content: '';
      display: inline-block;
      position: absolute;
      top: 0;
      width: 1px;
      height: 100%;
      margin-left: 0.5rem;
      background-color: #d3d3d3;
      pointer-events: none;
    }
  }

  &.active {
    border-bottom: 2px dotted $secondary;
  }

  > .reset {
    display: inline-flex;
    height: 1.25rem;
    transition: color 400ms $transition-expo-out;
  }

  @at-root {
    //Gray out
    .cove-editor-utils__breakpoints-list:hover #{&},
    .cove-editor-utils__breakpoints-list.has-active #{&}:not(.active) {
      color: #888;
    }

    //Colored
    .cove-editor-utils__breakpoints-list.has-active #{&} .reset {
      color: $primary !important;
    }

    .cove-editor-utils__breakpoints-list:hover #{&}.active,
    .cove-editor-utils__breakpoints-list #{&}:hover,
    .cove-editor-utils__breakpoints-list.has-active #{&}:hover {
      color: $primary;
    }
  }
}


// TODO: What is this stuff? -----------------------------------------------
.TODO-make-components {
  .divider-heading {
    display: block;
    margin-top: 1em;
    font-size: 1em;
  }

  .sort-list {
    list-style: none;

    > li {
      margin-right: .3em;
      margin-bottom: .3em;
    }

    li > div {
      display: block;
      box-sizing: border-box;
      padding: .4em .6em;
      margin-bottom: .3em;
      font-size: .8em;
      background: #F1F1F1;
      border: 1px solid #D1D1D1;
      border-radius: 2px;
      cursor: move;
    }
  }

  .info {
    padding-top: 10px;
    font-size: .8em;
    font-style: italic;
    line-height: 1.4em;
  }

  .react-tags__search {
    width: 100%;
  }

  .react-tags {
    position: relative;
    cursor: text;

    input.react-tags__search-input {
      font-size: .8rem;
    }

    span {
      display: inline
    }

    &.is-focused {
      border-color: rgba(0, 0, 0, 0.7);
    }
  }

  .react-tags__selected {
    display: inline;
  }

  .react-tags__selected-tag {
    display: inline-block;
    box-sizing: border-box;
    padding: .4em .6em;
    margin-right: .3em;
    margin-bottom: .3em;
    font-size: .8em;
    background: #F1F1F1;
    border: 1px solid #D1D1D1;
    border-radius: 2px;

    &::after {
      content: '\2715';
      margin-left: 8px;
      color: #AAA;
    }

    &:hover,
    &:focus {
      border-color: #B1B1B1;
    }
  }

  .react-tags__search {
    display: inline-block;
    max-width: 100%;

    input {
      max-width: 100%;
      padding: .5em .3em;
      margin: 0;
      font-size: inherit;
      line-height: inherit;
      outline: none;
    }

    input::-ms-clear {
      display: none;
    }
  }

  @media screen and (min-width: 30em) {
    .react-tags__search {
      position: relative;
    }
  }

  .react-tags__suggestions {
    position: absolute;
    top: 100%;
    left: 0;
    width: 100%;

    ul {
      padding: 0;
      margin: 4px -1px;
      list-style: none;
      background: white;
      border: 1px solid #D1D1D1;
      border-radius: 2px;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
    }

    li {
      padding: 6px 8px;
      border-bottom: 1px solid #ddd;

      &:hover {
        background: #eee;
        cursor: pointer;
      }

      &.is-active {
        background: #b7cfe0;
      }

      &.is-disabled {
        opacity: 0.5;
        cursor: auto;
      }

      mark {
        font-weight: 600;
        text-decoration: underline;
        background: none;
      }
    }
  }

  @media screen and (min-width: 30em) {
    .react-tags__suggestions {
      width: 240px;
    }
  }
}

// TODO: Advanced??? What is this? -----------------------------------------------
.advanced {
  padding: 0 1em 1em;
  text-align: left;

  p {
    font-size: .8rem;
  }

  .advanced-toggle-link {
    display: block;
    padding-top: 1em;
    text-align: left;
    text-decoration: underline;
    color: rgba(0, 0, 0, .5);
    cursor: pointer;

    span {
      display: inline-block;
      padding-right: 5px;
      font-family: monospace;
      text-decoration: none;
    }

    &:hover {
      color: rgba(0, 0, 0, .7);
    }
  }

  textarea {
    box-sizing: border-box;
    width: 100%;
    height: 400px;
    padding: .5em;
    font-family: monospace;
    font-size: .9em;
  }
}
