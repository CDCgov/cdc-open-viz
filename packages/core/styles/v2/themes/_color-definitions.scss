@use 'sass:string';

$theme: (
  'amber': (
    '#fbab18',
    '#ffd54f',
    '#ffecb3',
    '#fff7e1'
  ),
  'blue': (
    '#005eaa',
    '#88c3ea',
    '#c0e9ff',
    '#edf9ff'
  ),
  'brown': (
    '#705043',
    '#ad907b',
    '#d7ccc8',
    '#f2ebe8'
  ),
  'cyan': (
    '#007B91',
    '#65b0bd',
    '#cce5e9',
    '#ebf5f6'
  ),
  'green': (
    '#4b830d',
    '#84bc49',
    '#dcedc8',
    '#f1f8e9'
  ),
  'indigo': (
    '#26418f',
    '#92a6dd',
    '#dee8ff',
    '#f2f6ff'
  ),
  'orange': (
    '#bb4d00',
    '#ffad42',
    '#ffe97d',
    '#fff4cf'
  ),
  'pink': (
    '#af4448',
    '#e57373',
    '#ffc2c2',
    '#ffe7e7'
  ),
  'purple': (
    '#712177',
    '#b890bb',
    '#e3d3e4',
    '#f7f2f7'
  ),
  'slate': (
    '#29434e',
    '#7e9ba5',
    '#b6c6d2',
    '#e2e8ed'
  ),
  'teal': (
    '#00695c',
    '#4ebaaa',
    '#ceece7',
    '#ebf7f5'
  )
);

// .type-sparkline class used for creating sparklines
// once v2 is released plz update html structure
// to use .cove
.markup-include,
.type-waffle-chart,
.type-data-bite,
.cdc-open-viz-module.type-chart.type-sparkline,
.cove {
  @each $theme-name, $theme-colors in $theme {
    // Header
    .theme-#{$theme-name} {
      background-color: string.unquote(nth($theme-colors, 1));
      border-color: string.unquote(nth($theme-colors, 2));
      border-bottom-style: solid;
      border-bottom-width: 4px;
    }

    &.theme-#{$theme-name} {
      .cove-component__content:not(.no-borders).component--has-borderColorTheme {
        border-left: 1px solid string.unquote(nth($theme-colors, 1));
        border-right: 1px solid string.unquote(nth($theme-colors, 1));
        border-bottom: 1px solid string.unquote(nth($theme-colors, 1));
      }

      // when component doesn't have a title add border top
      .cove-component__inner:not(.component--has-title) .cove-component__content.component--has-borderColorTheme:not(.no-borders) {
        border-top: 1px solid string.unquote(nth($theme-colors, 1));
      }

      .cove-component__inner:not(.component--has-title) .cove-component__content {
        border-top: 1px solid #ccc;
      }

      .cove-component__header {
        border-color: string.unquote(nth($theme-colors, 2));
      }

      .cove-component__content.component--has-accent {
        border-left: 0.5rem solid string.unquote(nth($theme-colors, 1)) !important;
      }

      .cove-component__content.component--has-background:not(.component--hideBackgroundColor) {
        background: string.unquote(nth($theme-colors, 3));
      }
    }

    &.theme-#{$theme-name} {
      .cove-component__content:not(.no-borders).component--has-borderColorTheme {
        border-left: 1px solid string.unquote(nth($theme-colors, 1));
        border-right: 1px solid string.unquote(nth($theme-colors, 1));
        border-bottom: 1px solid string.unquote(nth($theme-colors, 1));
      }

      // when component doesn't have a title add border top
      .cove-component__inner:not(.component--has-title) .cove-component__content.component--has-borderColorTheme:not(.no-borders) {
        border-top: 1px solid string.unquote(nth($theme-colors, 1));
      }

      // should probably be in color definitions but logically makes sense here.
      .cove-component__inner:not(.component--has-title) .cove-component__content {
        border-top: 1px solid #ccc;
      }

      .cove-component__header {
        border-color: string.unquote(nth($theme-colors, 2));
      }

      .cove-component__content.component--has-accent {
        border-left: 0.5rem solid string.unquote(nth($theme-colors, 1)) !important;
      }

      .cove-component__content.component--has-background:not(.component--hideBackgroundColor) {
        background: string.unquote(nth($theme-colors, 3));
      }
    }
  }
}

$baseColor: #333;
$blue: #005eaa;
$lightestGray: #f2f2f2;
$lightGray: #c7c7c7;
$mediumGray: #565656;
$darkGray: #333;
$red: #d8000c;
$white: #fff;

$primary: #005eaa !default;
$secondary: #88c3ea !default;
$tertiary: #c0e9ff !default;
$quaternary: #edf9ff !default;

$purple-primary: #712177 !default;
$purple-secondary: #b890bb !default;
$purple-tertiary: #e3d3e4 !default;
$purple-quaternary: #f7f2f7 !default;

$brown-primary: #705043 !default;
$brown-secondary: #ad907b !default;
$brown-tertiary: #d7ccc8 !default;
$brown-quaternary: #f2ebe8 !default;

$teal-primary: #00695c !default;
$teal-secondary: #4ebaaa !default;
$teal-tertiary: #ceece7 !default;
$teal-quaternary: #ebf7f5 !default;

$pink-primary: #af4448 !default;
$pink-secondary: #e57373 !default;
$pink-tertiary: #ffc2c2 !default;
$pink-quaternary: #ffe7e7 !default;

$orange-primary: #bb4d00 !default;
$orange-secondary: #ffad42 !default;
$orange-tertiary: #ffe97d !default;
$orange-quaternary: #fff4cf !default;

$slate-primary: #29434e !default;
$slate-secondary: #7e9ba5 !default;
$slate-tertiary: #b6c6d2 !default;
$slate-quaternary: #e2e8ed !default;

$indigo-primary: #26418f !default;
$indigo-secondary: #92a6dd !default;
$indigo-tertiary: #dee8ff !default;
$indigo-quaternary: #f2f6ff !default;

$cyan-primary: #006778 !default;
$cyan-secondary: #65b0bd !default;
$cyan-tertiary: #cce5e9 !default;
$cyan-quaternary: #ebf5f6 !default;

$green-primary: #4b830d !default;
$green-secondary: #84bc49 !default;
$green-tertiary: #dcedc8 !default;
$green-quaternary: #f1f8e9 !default;

$amber-primary: #fbab18 !default;
$amber-secondary: #ffd54f !default;
$amber-tertiary: #ffecb3 !default;
$amber-quaternary: #fff7e1 !default;
